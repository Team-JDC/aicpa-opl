<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="eventlog" type="AICPA.Destroyer.Shared.XmlNodeConfigurationHandler, DestroyerAPI"/>
  </configSections>
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.8" />
      </system.Web>
  -->
  <system.web>
    <!-- this setting allows us to impersonate a user that has filesystem access to remote servers -->
    <identity impersonate="true" userName="knowlysis\Destroyer" password="Kn0wlys1s"/>
    <!--  DYNAMIC DEBUG COMPILATION
      Set compilation debug="true" to enable ASPX debugging.  Otherwise, setting this value to
      false will improve runtime performance of this application. 
      Set compilation debug="true" to insert debugging symbols (.pdb information)
      into the compiled page. Because this creates a larger file that executes
      more slowly, you should set this value to true only when debugging and to
      false at all other times. For more information, refer to the documentation about
      debugging ASP.NET files.
  -->
    <compilation defaultLanguage="c#" debug="true" targetFramework="4.8"/>
    <!--  CUSTOM ERROR MESSAGES
      Set customErrors mode="On" or "RemoteOnly" to enable custom error messages, "Off" to disable. 
      Add <error> tags for each of the errors you want to handle.

      "On" Always display custom (friendly) messages.
      "Off" Always display detailed ASP.NET error information.
      "RemoteOnly" Display custom (friendly) messages only to users not running 
      on the local Web server. This setting is recommended for security purposes, so 
      that you do not display application detail information to remote clients.
  -->
    <customErrors mode="RemoteOnly"/>
    <!--  AUTHENTICATION 
      This section sets the authentication policies of the application. Possible modes are "Windows", 
      "Forms", "Passport" and "None"

      "None" No authentication is performed. 
      "Windows" IIS performs authentication (Basic, Digest, or Integrated Windows) according to 
      its settings for the application. Anonymous access must be disabled in IIS. 
      "Forms" You provide a custom form (Web page) for users to enter their credentials, and then 
      you authenticate them in your application. A user credential token is stored in a cookie.
      "Passport" Authentication is performed via a centralized authentication service provided
      by Microsoft that offers a single logon and core profile services for member sites.
  -->
    <authentication mode="Windows"/>
    <!--  AUTHORIZATION 
      This section sets the authorization policies of the application. You can allow or deny access
      to application resources by user or role. Wildcards: "*" mean everyone, "?" means anonymous 
      (unauthenticated) users.
  -->
    <authorization>
      <allow users="*"/>
      <!-- Allow all users -->
      <!--  <allow     users="[comma separated list of users]"
                roles="[comma separated list of roles]"/>
          <deny      users="[comma separated list of users]"
                roles="[comma separated list of roles]"/>
      -->
    </authorization>
    <!--  APPLICATION-LEVEL TRACE LOGGING
      Application-level tracing enables trace log output for every page within an application. 
      Set trace enabled="true" to enable application trace logging.  If pageOutput="true", the
      trace information will be displayed at the bottom of each page.  Otherwise, you can view the 
      application trace log by browsing the "trace.axd" page from your web application
      root. 
  -->
    <trace enabled="false" requestLimit="10" pageOutput="false" traceMode="SortByTime" localOnly="true"/>
    <!--  SESSION STATE SETTINGS
      By default ASP.NET uses cookies to identify which requests belong to a particular session. 
      If cookies are not available, a session can be tracked by adding a session identifier to the URL. 
      To disable cookies, set sessionState cookieless="true".
  -->
    <sessionState mode="InProc" stateConnectionString="tcpip=127.0.0.1:42424" sqlConnectionString="data source=127.0.0.1;Trusted_Connection=yes" cookieless="false" timeout="20"/>
    <!--  GLOBALIZATION
      This section sets the globalization settings of the application. 
  -->
    <globalization requestEncoding="utf-8" responseEncoding="utf-8"/>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
  </system.web>
  <appSettings>
    <!-- no longer using the web_appSettings.config file approach, now using VS 2010 Build configurations -->
    <!-- 2010-07-07 sburton: I believe these next two are not used.
    <add key="ConnectionString" value="Password=Kn0wlys1s;Persist Security Info=True;User ID=sa;Initial Catalog=Portal;Data Source=fafstaging"/>
    <add key="C2bConnectionString" value="Password=Kn0wlys1s;Persist Security Info=True;User ID=sa;Initial Catalog=C2BImposter;Data Source=fafstaging"/>
    -->
    <add key="DbConnectionString" value="Password=Kn0wlys1s;Persist Security Info=True;User ID=sa;Initial Catalog=sdox_commondev_main;Data Source=2k8sql8wgd"/>
    <add key="c2bWebReferenceUrl" value="https://66.243.40.91/C2BSubscriptionService/SubscriptionService.asmx"/>
    <add key="Book_ContentFolder" value="\\2k8sdoxwgd\Destroyer_Content_Indexing_Staging\commonDevBooks\"/>
    <add key="Book_ResourceFolder" value="resources"/>
    <add key="Book_MakefileSchemaPath" value="\\fafstaging\Destroyer_Content_Indexing\D_Makefile.xsd"/>
    <!-- sburton:  The next line bypasses the security model.  Comment it out if you want security -->
    <add key="User_SecurityBypassDomain" value="proflitplus;fasb;gasb"/>
    <add key="EndecaHostname" value="endeca1"/>
    <add key="EndecaPort" value="15000"/>
    <!-- The following are destroyer specific configuration settings -->
    <add key="SessionIdCheckTimeInSeconds" value="60"/>
    <add key="ApiSessionTimeoutInSeconds" value="900"/>
    <add key="DefaultActionPermission" value="1024"/>
    <add key="SiteIndex_ContentFolder" value="\destroyer_content\sites"/>
    <add key="SiteIndex_SiteXmlFilename" value="Destroyer_Site.xml"/>
    <!-- Site XML filename used as input for Endeca builds -->
    <add key="SiteIndex_SiteXmlFilename" value="Destroyer_Site.xml"/>
    <!-- Endeca project folders -->
    <add key="SiteIndex_EndecaTemplateProjectFolder" value="\\ENDECA\Destroyer_Content_Indexing\template_project"/>
    <add key="SiteIndex_EndecaStagingProjectFolder" value="\\action_desk\c$\Destroyer_Content_Indexing_Staging\staging_project"/>
    <add key="SiteIndex_EndecaProductionProjectFolder" value="\\destroyer\c$\Destroyer_Content_Indexing_Staging\production_project"/>
    <!-- Endeca relative file paths -->
    <add key="SiteIndex_EndecaPipelineRelativePath" value="data\forge_input\Pipeline.epx"/>
    <!-- Endeca navigation engine connection information -->
    <add key="SiteIndex_EndecaStagingHostname" value="action_desk"/>
    <add key="SiteIndex_EndecaStagingPort" value="8000"/>
    <add key="SiteIndex_EndecaProductionHostname" value="destroyer"/>
    <add key="SiteIndex_EndecaProductionPort" value="8000"/>
    <!-- Endeca site indexing service connection information -->
    <add key="SiteIndex_EndecaStagingDataIndexingServiceUrl" value="http://action_desk:8888/services/DataIndexing"/>
    <add key="SiteIndex_EndecaProductionDataIndexingServiceUrl" value="http://destroyer:8888/services/DataIndexing"/>
    <!-- Endeca site indexing service credentials (set in Endeca's tomcat-users.xml) -->
    <add key="SiteIndex_EndecaProductionDataIndexingServiceUsername" value="webservices"/>
    <add key="SiteIndex_EndecaStagingDataIndexingServiceUsername" value="webservices"/>
    <add key="SiteIndex_EndecaProductionDataIndexingServicePassword" value="webservices"/>
    <add key="SiteIndex_EndecaStagingDataIndexingServicePassword" value="webservices"/>
  </appSettings>
  <!--

  ***Configuring the Applications EventLog***
   
  The application will log events to the Database EventLog table according to the 
  severity level of the event log being written. If the severity level's integer value
  is less than or equal to to the configured log level for the method, module, or event
  type than the event will be logged to the database.

  The EventLog will support logging three different types of events.
    1. Error: Events that occured because of a runtime execution error.
    2. Usage: Events that are used to determine how the application is being used.
    3. Info: "Trace-like" detailed events that are useful for debugging.
    
  Logging Configuration Order of Precedence:
    1. Is there a method logging rule that matches the method writing the log?
    2. Is there a module logging rule that matches the module writing the log?
    3. Is there a default rule applied to the event type?

  Examples:
    1. Setting '<method name="GetContent" level="4"/>' will instruct the application to
    log all 'GetContent' events of severity 1-4.
    2. If there is not a rule for the method, the module's log-level is used. Setting
    '<module name="Document" level="5">' will instruct the application to log all
    loggable events occuring within 'Document' that have a severity of 1-5.
    3. Setting '<event type="Usage" level="6">' will log all events of type Usage that don't have a
    more granular module/method log-level configuration.
    
  -->
  <eventlog>
    <event type="Error" level="5">
      <module name="Book" level="5">
        <method name="BookBuild" level="8"/>
      </module>
      <module name="Site" level="5">
        <method name="SiteBuild" level="8"/>
      </module>
      <module name="SiteIndex" level="5">
        <method name="SiteIndexBuild" level="8"/>
      </module>
    </event>
    <event type="Info" level="5"/>
    <event type="Usage" level="6">
      <module name="Document" level="4">
        <method name="GetContent" level="10"/>
      </module>
      <module name="Site" level="4">
        <method name="GetBook" level="8"/>
      </module>
      <!-- used by the D_UnitTester do not remove or test cases will fail -->
      <module name="CreateEvent" level="5">
        <method name="LogEvent_SpecificMethodSetting" level="10"/>
        <method name="LogEvent_SpecificMethodSettingWithUser" level="10"/>
        <method name="DO_NOT_LogEvent_SpecificMethodSetting" level="1"/>
        <method name="DO_NOT_LogEvent_SpecificMethodSettingWithUser" level="1"/>
      </module>
    </event>
  </eventlog>
</configuration>