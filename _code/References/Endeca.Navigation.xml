<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Endeca.Navigation</name>
    </assembly>
    <members>
        <member name="T:antlr.CharScanner">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStream">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ICharScannerDebugSubject">
            <exclude/>
        </member>
        <member name="T:antlr.debug.IDebugSubject">
            <exclude/>
        </member>
        <member name="F:antlr.CharScanner.tokenCreator">
            <summary>Used for creating Token instances.</summary>
        </member>
        <member name="F:antlr.CharScanner.cached_LA1">
            <summary>Used for caching lookahead characters.</summary>
        </member>
        <member name="M:antlr.CharScanner.panic(System.String)">
            <summary>
            This method is executed by ANTLR internally when it detected an illegal
            state that cannot be recovered from.
            The previous implementation of this method called <see cref="M:System.Environment.Exit(System.Int32)"/>
            and writes directly to <see cref="P:System.Console.Error"/>, which is usually not 
            appropriate when a translator is embedded into a larger application.
            </summary>
            <param name="s">Error message.</param>
        </member>
        <member name="T:antlr.TokenCreator">
            <exclude/>
             <summary>
             A creator of Token object instances.
             </summary>
             <remarks>
             <para>
             This class and it's sub-classes exists primarily as an optimization
             of the reflection-based mechanism(s) previously used exclusively to 
             create instances of Token objects.
             </para>
             <para>
             Since Lexers in ANTLR use a single Token type, each TokenCreator can 
             create one class of Token objects (that's why it's not called TokenFactory).
             </para>
             </remarks>
        </member>
        <member name="M:antlr.TokenCreator.Create">
            <summary>
            Constructs a <see cref="T:antlr.Token"/> instance.
            </summary>
        </member>
        <member name="P:antlr.TokenCreator.TokenTypeName">
            <summary>
            Returns the fully qualified name of the Token type that this
            class creates.
            </summary>
        </member>
        <member name="F:antlr.CharScanner.ReflectionBasedTokenCreator.tokenTypeName">
            <summary>
            The fully qualified name of the Token type to create.
            </summary>
        </member>
        <member name="F:antlr.CharScanner.ReflectionBasedTokenCreator.tokenTypeObject">
            <summary>
            Type object used as a template for creating tokens by reflection.
            </summary>
        </member>
        <member name="M:antlr.CharScanner.ReflectionBasedTokenCreator.SetTokenType(System.String)">
            <summary>
            Returns the fully qualified name of the Token type that this
            class creates.
            </summary>
        </member>
        <member name="M:antlr.CharScanner.ReflectionBasedTokenCreator.Create">
            <summary>
            Constructs a <see cref="T:antlr.Token"/> instance.
            </summary>
        </member>
        <member name="P:antlr.CharScanner.ReflectionBasedTokenCreator.TokenTypeName">
            <summary>
            Returns the fully qualified name of the Token type that this
            class creates.
            </summary>
        </member>
        <member name="T:antlr.LLkParser">
            <exclude/>
        </member>
        <member name="T:antlr.Parser">
            <exclude/>
        </member>
        <member name="T:antlr.debug.IParserDebugSubject">
            <exclude/>
        </member>
        <member name="M:antlr.Parser.panic">
            <summary>
            @deprecated as of 2.7.2. This method calls System.exit() and writes
            directly to stderr, which is usually not appropriate when
            a parser is embedded into a larger application. Since the method is
            <code>static</code>, it cannot be overridden to avoid these problems.
            ANTLR no longer uses this method internally or in generated code.
            </summary>
            
        </member>
        <member name="M:antlr.Parser.setASTFactory(antlr.ASTFactory)">
            <summary>
            Specify an object with support code (shared by Parser and TreeParser.
            Normally, the programmer does not play with this, using 
            <see cref="M:antlr.Parser.setASTNodeClass(System.String)"/> instead.
            </summary>
            <param name="f"></param>
        </member>
        <member name="M:antlr.Parser.setASTNodeClass(System.String)">
            <summary>
            Specify the type of node to create during tree building. 
            </summary>
            <param name="cl">Fully qualified AST Node type name.</param>
        </member>
        <member name="M:antlr.Parser.setASTNodeType(System.String)">
            <summary>
            Specify the type of node to create during tree building. 
            use <see cref="M:antlr.Parser.setASTNodeClass(System.String)"/> now to be consistent with 
            Token Object Type accessor.
            </summary>
            <param name="nodeType">Fully qualified AST Node type name.</param>
        </member>
        <member name="E:antlr.Parser.EnterRule">
            <summary>
            
            </summary>
        </member>
        <member name="T:Endeca.Navigation.Analytics.AnalyticsQuery">
            <summary>
            An <b>AnalyticsQuery</b> is an ordered list of
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> objects.
            </summary>
            <remarks>
            After creation, the <b>AnalyticsQuery</b> object is set 
            in an <see cref="T:Endeca.Navigation.ENEQuery"/> object
            via the <see cref="P:Endeca.Navigation.ENEQuery.AnalyticsQuery"/> setter property.
            <para>
            When the query is executed on the MDEX Engine, each
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> transforms an input set of records 
            into a resulting stream of aggregated records. Each <see cref="T:Endeca.Navigation.Analytics.Statement"/>
            operates on the record set produced by some previous <see cref="T:Endeca.Navigation.Analytics.Statement"/>, 
            or on the records in the Navigation State, or on all the 
            records in the MDEX Engine. Note that each 
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> in the <b>AnalyticsQuery</b>
            must have a unique name.
            </para>
            <para>
            Users can construct an <b>AnalyticsQuery</b> with either the
            programmatic interface or a text-based syntax. 
            Much of the text-based syntax is based on a subset of the SQL 
            language. Use the <see cref="M:Endeca.Navigation.Analytics.AnalyticsQuery.parseQuery(System.String)"/> parser method to 
            create an <b>AnalyticsQuery</b> from the String representation 
            of the query. For example, if <c>str</c> is a String that 
            has been initialized to a valid query, then the statement:
            <code>
            AnalyticsQuery analytics = AnalyticsQuery.parseQuery(str);
            </code>
            creates an <b>AnalyticsQuery</b> when the <c>str</c> query is parsed.
            </para>
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.IObjectList">
            <summary>
            IObjectList is an interface for handling a collection of objects.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IObjectList.Get(System.Int32)">
            <summary>
            Returns the object at index
            </summary>
            <param name="index">The index of the object</param>
            <returns>The object</returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IObjectList.Size">
            <summary>
            Returns the size of this collection
            </summary>
            <returns>The size</returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IObjectList.Add(System.Object)">
            <summary>
            Appends an object to the end of the collection
            </summary>
            <param name="obj">The object to be added</param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IObjectList.Remove(System.Int32)">
            <summary>
            Get the object at index and remove it from the list
            </summary>
            <param name="index">The index of the object</param>
            <returns>The removed object</returns>
        </member>
        <member name="T:Endeca.Navigation.Analytics.IQueryNode">
            <summary>
            <b>IQueryNode</b> is the interface for all parts of an Endeca Analytics query.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IQueryNode.ToString">
            <summary>
            Returns the String form of this query node.
            </summary>
            <returns>
            The String form of this query node.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IQueryNode.ToWire">
            <summary>
            Returns the wire form of this query node.
            </summary>
            <returns>
            The wire form of this query node.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.IQueryNode.ValidateSyntax">
            <summary>
            Validates the syntax of this query node.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.#ctor">
            <summary>
            Constructs a new, empty <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.escape(System.String)">
            <summary>
            This project-level method is used to escape parts of the query that may 
            contain %,(, and ). These characters are used by the wire format so they 
            must be escaped when they are used in Statement names, field names, etc.
            </summary>
            <param name="input">The input string</param>
            <returns>The escaped string</returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.backslashEscape(System.String,System.Char)">
            <summary>
            Escape each quote and backslash with a backslash.
            Supports either ' or " as the quote character.
            This is used for the various ToString() methods
            (the above method is used for ToWire()).
            </summary>
            <param name="input">The input string</param>
            <returns>The escaped string</returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.parseQuery(System.String)">
            <summary>
            Parses a String form of a <see cref="T:Endeca.Navigation.Analytics.Statement"/> query and 
            returns an instance of an <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/> 
            if the query is well-formed.
            </summary>
            <param name="query">
            A <see cref="T:Endeca.Navigation.Analytics.Statement"/> query in a String text-based syntax.
            </param>
            <returns>
            An <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/> object 
            </returns>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the query is malformed or <c>null</c> or is malformed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.Get(System.Int32)">
            <summary>
            Gets a <see cref="T:Endeca.Navigation.Analytics.Statement"/> from the <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
            <param name="index">
            The index of the desired <see cref="T:Endeca.Navigation.Analytics.Statement"/> object.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.Statement"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.Size">
            <summary>
            Returns the number of <see cref="T:Endeca.Navigation.Analytics.Statement"/> objects in 
            this <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
            <returns>
            The number of <see cref="T:Endeca.Navigation.Analytics.Statement"/> objects in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.Add(System.Object)">
            <summary>
            Appends a <see cref="T:Endeca.Navigation.Analytics.Statement"/> object to the end of the collection.
            </summary>
            <param name="obj">
            The <see cref="T:Endeca.Navigation.Analytics.Statement"/> object to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="obj"/> is not a <see cref="T:Endeca.Navigation.Analytics.Statement"/> object.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.Remove(System.Int32)">
            <summary>
            Removes a <see cref="T:Endeca.Navigation.Analytics.Statement"/> object from the <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
            <param name="index">
            The index offset of the <see cref="T:Endeca.Navigation.Analytics.Statement"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.Statement"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.ToString">
            <summary>
            Returns the string form of the syntax tree rooted 
            at this <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            Semicolons will delimit multiple <see cref="T:Endeca.Navigation.Analytics.Statement"/> objects.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.AnalyticsQuery.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/>.
            </summary>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/> is valid if it contains 
            at least one <see cref="T:Endeca.Navigation.Analytics.Statement"/>, and all its 
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> objects are themselves valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            if the <see cref="T:Endeca.Navigation.Analytics.AnalyticsQuery"/> does not contain
            at least one <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.Analytics.CoalesceList">
            <summary> 
            <b>CoalesceList</b> instances represent a list of expressions used
            to return the the first non-null value in the list.
            These coalesce expressions are objects of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/>.
            </summary>
            <remarks>
            Coalesce expressions provide the ability to evalute records for multiple 
            values and return the first non-null value encountered, in the order specified.
            The <b>CoalesceList</b> saves the expressions in the form of a list, in the same order 
            as specified in the query. 
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.#ctor">
            <summary>
            Constructs a new, empty <b>CoalesceList</b>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.Get(System.Int32)">
            <summary>
            Gets the coalesce expression (an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object) from the <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </summary>
            <param name="index">
            The index of the desired coalesce expression. The required index corresponds to the 
            order in which the original query was entered.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.Size">
            <summary>
            Returns the number of coalesce expressions in this <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </summary>
            <returns>
            The number of coalesce expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects) in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.Add(System.Object)">
            <summary>
            Appends a coalesce expression to the end of the collection.
            </summary>
            <param name="obj">
            The coalesce expression (an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object) to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.Remove(System.Int32)">
            <summary>
            Removes a coalesce expression (an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object) from the <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </summary>
            <param name="index">
            The index of the <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/> format is:
            <code>
            <i>expression1</i>, <i>expression2</i>...
            </code>
            where <i>expression</i> is the string form of the expression.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.CoalesceList.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/> is valid if all of its expressions 
            are themselves valid. Note that a <see cref="T:Endeca.Navigation.Analytics.CoalesceList"/> with 
            no elements is syntactically valid.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprAggregate">
            <summary>
            Instances of the <b>ExprAggregate</b> class represent
            aggregate functions over the members of the associated
            aggregated record.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.Analytics.IExpr">
            <summary> 
            <b>IExpr</b> is the interface for various types of composable
            <c>Select</c> derived property expressions.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.SUM">
            <summary>
            Sum function.
            </summary>
            <remarks>
            Computes the sum of the subexpression 
            across all input values.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.AVG">
            <summary>
            Average function. 
            </summary>
            <remarks>
            Computes the average (arithmetic mean) of all input values.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.VARIANCE">
            <summary>
            Variance function.
            </summary>
            <remarks>
            Computes the variance for a field.
            The variance is the square of the standard deviation.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.STDDEV">
            <summary>
            Standard Deviation function.
            </summary>
            <remarks>
            Computes the standard deviation for a field.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.MIN">
            <summary>
            Minimum function.
            </summary>
            <remarks>
            Computes the minimum value of the subexpression across all input values.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.MAX">
            <summary>
            Maximum function.
            </summary>
            <remarks>
            Computes the maximum value of the subexpression across all input values.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.COUNT">
            <summary>
            Count function. 
            </summary>
            <remarks>
            Counts the values in a field.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.COUNTDISTINCT">
            <summary>
            Count Distinct function. 
            </summary>
            <remarks>
            Counts the distinct values in a field, with no repetition.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.MEDIAN">
            <summary>
            Median function.
            </summary>
            <remarks>
            Finds the median value for a field. 
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprAggregate.ARB">
            <summary>
            Arbitrary function.
            </summary>
            <remarks>
            Selects an arbitrary but consistent value 
            from the set of values in a field. 
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprAggregate.#ctor(Endeca.Navigation.Analytics.ExprAggregate.ExprAggregateOp,Endeca.Navigation.Analytics.IExpr)">
            <summary> 
            Creates a new <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>, which
            will compute an aggregate function over the evaluation
            of the subexpression <paramref name="expr"/> on the members of the
            aggregated record.
            </summary>
            <param name="function">
            An aggregate function of type <see cref="T:Endeca.Navigation.Analytics.ExprAggregate.ExprAggregateOp"/>.
            See the <see cref="P:Endeca.Navigation.Analytics.ExprAggregate.Function"/> property for a list of the
            function names.
            </param>
            <param name="expr">
            An object of type <see cref="P:Endeca.Navigation.Analytics.ExprAggregate.IExpr"/> that will be
            the subexpression for this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </param>
            <remarks>
            <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/> nodes may not be nested. That is,
            neither the specified subexpression <paramref name="expr"/> 
            nor any of its descendant subexpressions may be instances of
            <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>; otherwise, the resulting expression
            is semantically invalid (note that this will not be caught by
            the <see cref="M:Endeca.Navigation.Analytics.ExprAggregate.ValidateSyntax"/> method).
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprAggregate.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprAggregate.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/> format is:
            <code>
            FUNCTION(<i>subexpression</i>)
            </code>
            where <c>FUNCTION</c> is an aggregate function name.
            <para>
            The format for an <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/> with a filter is:
            <code>
            FUNCTION(<i>subexpression</i>) WHERE <i>filter</i>
            </code>
            where <i>filter</i> is the filter added by the <see cref="P:Endeca.Navigation.Analytics.ExprAggregate.Filter"/> setting property.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprAggregate.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/> is valid if the function is
            not null and the subexpression is non-null and itself valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprAggregate.Function">
            <summary> 
            Gets and sets the aggregate function for this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </summary>
            <value>
            An aggregate function of type <see cref="T:Endeca.Navigation.Analytics.ExprAggregate.ExprAggregateOp"/>.
            </value>
            <remarks>
            The aggregate functions are: <c>ExprAggregate.ARB</c>,
            <c>ExprAggregate.AVG</c>, <c>ExprAggregate.COUNT</c>,
            <c>ExprAggregate.COUNTDISTINCT</c>, <c>ExprFunction.EXTRACT</c>,
            <c>ExprAggregate.MAX</c>, <c>ExprAggregate.MEDIAN</c>,
            <c>ExprAggregate.MIN</c>, <c>ExprAggregate.STDDEV</c>,
            <c>ExprAggregate.ROUND</c>, <c>ExprFunction.SIGN</c>,
            <c>ExprFunction.SUM</c>, and <c>ExprAggregate.VARIANCE</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprAggregate.IExpr">
            <summary> 
            Gets and sets the subexpression for this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            The aggregate function will be evaluated on this subexpression.
            </summary>
            <value>
            An object of type <see cref="P:Endeca.Navigation.Analytics.ExprAggregate.IExpr"/> that is
            the subexpression for this <see cref="T:Endeca.Navigation.Analytics.ExprAggregate"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprAggregate.Filter">
            <summary>
            Gets and sets the filter associated with this expression.
            </summary>
            <value>
            The filter (of type <see cref="T:Endeca.Navigation.Analytics.IFilter"/>) associated with this expression.
            </value>
            <remarks>
            For the getter version, only records in the associated aggregate that satisfy
            the returned filter contribute to the derived value
            represented by this expression.
            <para>
            For the setter version, adding a filter to this expression causes only records
            that satisfy the filter to be taken into account by this aggregate.
            </para>
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprAggregate.ExprAggregateOp">
            <summary>
            Enumeration of Endeca aggregate functions.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprAggregate.ExprAggregateOp.ToWire">
            <summary>
            Returns the wire form of the aggregate function.
            </summary>
            <returns>
            The wire form of the aggregate function.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprAggregate.ExprAggregateOp.ToString">
            <summary>
            Returns the string form of the aggregate function.
            </summary>
            <returns>
            The string form of the aggregate function.
            </returns>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprBinary">
            <summary>
            An <b>ExprBinary</b> is a type of <see cref="T:Endeca.Navigation.Analytics.IExpr"/> that
            represents a binary scalar expression. These expressions
            provide a full range of mathematical functions, such as 
            addition and subtraction operators.
            </summary>
            <example>
            This code subtracts one from an integer property named <c>Year</c>:
            <code>
            LookupList lookup = new LookupList();
            lookup.add(new ExprBinary(ExprBinary.MINUS, new ExprKey("Year"), new ExprConstant("1")));
            </code>
            In the example, the <c>ExprBinary</c> object is set in a <see cref="T:Endeca.Navigation.Analytics.LookupList"/> object.
            </example>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.PLUS">
            <summary>
            Addition operator.
            </summary>
            <remarks>
            Adds the right-hand and left-hand sides of the expression.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.MINUS">
            <summary>
            Subtraction operator.
            </summary>
            <remarks>
            Subtracts the right-hand side of the 
            expression from the left-hand side.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.MULTIPLY">
            <summary>
            Multiplication operator.
            </summary>
            <remarks>
            Multiplies the left-hand side of 
            the expression by the value in the right-hand side.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.DIVIDE">
            <summary>
            Division operator.
            </summary>
            <remarks>
            Divides the left-hand side of the expression 
            by the value in the right-hand side.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.LOG">
            <summary>
            Logarithm operator.
            </summary>
            <remarks>
            Returns the logarithm of the right-hand side, 
            where the value in the left-hand side is the base.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.MOD">
            <summary>
            Modulo (remainder) operator.
            </summary>
            <remarks>
            Returns the remainder of the division of the left-hand 
            side by the value in the right-hand side.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.POWER">
            <summary>
            Exponentiation operator.
            </summary>
            <remarks>
            Returns the value of the left-hand 
            side raised to the power of the value in the right-hand side.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.ROUND">
            <summary>
            Round operator.
            </summary>
            <remarks>
            Rounds the number in the left-hand side
            to the number of decimal places specified by the integer 
            in the right-hand side.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprBinary.TRUNC">
            <summary>
            Truncation operator.
            </summary>
            <remarks>
            Truncates the number in the left-hand side
            to the number of decimal places specified by the integer in the right-hand side.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprBinary.#ctor(Endeca.Navigation.Analytics.ExprBinary.ExprBinaryOp,Endeca.Navigation.Analytics.IExpr,Endeca.Navigation.Analytics.IExpr)">
            <summary> 
            The <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/> will compute the specified
            specified <paramref name="function"/> on the specified 
            <paramref name="lhs"/> and <paramref name="rhs"/> parameters.
            </summary>
            <param name="function">
            A mathematical function (of type <see cref="T:Endeca.Navigation.Analytics.ExprBinary.ExprBinaryOp"/>)
            that specifies the type of operation to be made.
            See the <see cref="P:Endeca.Navigation.Analytics.ExprBinary.Function"/> property for a list of the
            function names.
            </param>
            <param name="lhs">
            An object of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/> that will be
            the left-hand side of this binary expression.
            </param>
            <param name="rhs">
            An object of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/> that will be
            the right-hand side of this binary expression.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprBinary.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprBinary.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </returns>
            <remarks>
            The format for the DIVIDE, MINUS, MULTIPLY, and PLUS operators is:
            <code>
            "<i>lhs-expression</i> <i>sign</i> <i>rhs-expression</i>"
            </code>
            where <i>sign</i> is / (for DIVIDE), - (for MINUS), * (for
            MULTIPY), or + (for PLUS).
            <para>
            The format for the other operators is:
            <code>
            "<i>op</i>(<i>lhs-expression</i>, <i>rhs-expression</i>)"
            </code>
            where <i>op</i> is LOG, MOD, POWER, BROUND, or BTRUNC.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprBinary.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/> is valid if both the 
            right-hand side and left-hand side subexpressions are 
            non-null and valid, and the function is not null.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprBinary.Lhs">
            <summary>
            Gets and sets the left-hand side of this binary expression.
            </summary>
            <value>
            An object of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/> that is
            the left-hand side for this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprBinary.Rhs">
            <summary>
            Gets and sets the right-hand side of this binary expression.
            </summary>
            <value>
            An object of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/> that is
            the right-hand side for this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprBinary.Function">
            <summary>
            Gets and sets the the mathematical function 
            for this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </summary>
            <value>
            An object of type <see cref="T:Endeca.Navigation.Analytics.ExprBinary.ExprBinaryOp"/> that is
            the function for this <see cref="T:Endeca.Navigation.Analytics.ExprBinary"/>.
            </value>
            <remarks>
            The mathematical functions are: <c>ExprBinary.DIVIDE</c>,
            <c>ExprBinary.LOG</c>, <c>ExprBinary.MINUS</c>,
            <c>ExprBinary.MOD</c>, <c>ExprBinary.MULTIPLY</c>,
            <c>ExprBinary.PLUS</c>, <c>ExprBinary.POWER</c>,
            <c>ExprBinary.ROUND</c>, and <c>ExprBinary.TRUNC</c>.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprBinary.ExprBinaryOp">
            <summary>
            Enumeration of Endeca mathematical operators.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprBinary.ExprBinaryOp.ToWire">
            <summary>
            Returns the wire form of the mathematical operator.
            </summary>
            <returns>
            The wire form of the mathematical operator.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprBinary.ExprBinaryOp.ToString">
            <summary>
            Returns the string form of the mathematical operator.
            </summary>
            <returns>
            The string form of the mathematical operator.
            </returns>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprCoalesce">
            <summary> 
            <b>ExprCoalesce</b> instances represent a coalesce expression holding multiple
            keys. The keys can be evaluated over the associated records, and the first non-null
            value is computed for each record.
            </summary>
            
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprCoalesce.#ctor(Endeca.Navigation.Analytics.CoalesceList)">
            <summary> 
            Constructs a new <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>. 
            </summary>
            <param name="cList">
            A <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/> object that has been populated
            with expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects).
            The <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/> represents a list of expressions 
            to be evaluted on each record to find the first non-null expression
            for the record. The list must hold expressions in the same order
            as entered in the query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprCoalesce.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprCoalesce.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/> format is:
            <code>
            COALESCE(<i>expression1</i>, <i>expression2</i>...)
            </code>
            where each <i>expression</i> is a coalesce expression in the <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprCoalesce.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/> is valid if the <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/>
            is not null and is valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList">
            <summary>
            Gets and sets the <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/> for this <see cref="T:Endeca.Navigation.Analytics.ExprCoalesce"/>.
            </summary>
            <value>
            A <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/> object that has been populated
            with expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects).
            The <see cref="P:Endeca.Navigation.Analytics.ExprCoalesce.CoalesceList"/> represents a list of expressions 
            that can be evaluated for each record to return the first non-null value 
            for that record.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprConstant">
            <summary>
            Instances of <b>ExprConstant</b> represent constants.
            </summary>
            <remarks>
            Constants are used in expressions, such as the "2" 
            in "x + 2". Both string and numeric constants
            are treated identically.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprConstant.#ctor(System.String)">
            <summary> 
            Creates a new <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/> expression node 
            representing the specified constant <paramref name="val"/>.
            </summary>
            <param name="val">
            The constant to be used in an expression.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprConstant.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprConstant.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/>.
            </returns>
            <remarks>
            <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/> uses a format that is
            illustrated by these three examples:
            <code>
            'john'
            '3'
            '56.903'
            </code>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprConstant.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/> is valid if the String representing
            the value is non-null and non-empty. Note that the String should 
            represent a numeric value, but this is not enforced during validation.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprConstant.Value">
            <summary> 
            Gets and sets the constant value for this <see cref="T:Endeca.Navigation.Analytics.ExprConstant"/>.
            </summary>
            <value> 
            The constant to be used in an expression
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprFunction">
            <summary> 
            <b>ExprFunction</b> instances represent unary scalar
            function expressions.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.SECOND">
            <summary>
            Second constant.
            </summary>
            <remarks>
            Used to designate that a second be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.MINUTE">
            <summary>
            Minute constant.
            </summary>
            <remarks>
            Used to designate that a minute be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.HOUR">
            <summary>
            Hour constant.
            </summary>
            <remarks>
            Used to designate that an hour be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.DAY_OF_WEEK">
            <summary>
            Day-of-week constant.
            </summary>
            <remarks>
            Used to designate that a day in the week be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.DAY_OF_MONTH">
            <summary>
            Day-of-month constant.
            </summary>
            <remarks>
            Used to designate that a day of the month be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.DAY_OF_YEAR">
            <summary>
            Day-of-year constant.
            </summary>
            <remarks>
            Used to designate that a day of the year be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.DATE">
            <summary>
            Date constant.
            </summary>
            <remarks>
            Used to designate the date as a day in the month, as the
            value for the <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.WEEK">
            <summary>
            Week constant.
            </summary>
            <remarks>
            Used to designate that a week be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.MONTH">
            <summary>
            Month constant.
            </summary>
            <remarks>
            Used to designate that a month be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.QUARTER">
            <summary>
            Quarter year constant.
            </summary>
            <remarks>
            Used to designate that a quarter in a year be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.YEAR">
            <summary>
            Year constant.
            </summary>
            <remarks>
            Used to designate that a year be the value for the
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.ABS">
            <summary>
            Absolute value function.
            </summary>
            <remarks>
            Returns the absolute value of a number.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.CEIL">
            <summary>
            Ceiling function.
            </summary>
            <remarks>
            Returns the smallest integer that is greater 
            than or equal to a given numeric expression.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.COS">
            <summary>
            Cosine function.
            </summary>
            <remarks>
            Returns the cosine, in radians, of an angle.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.EXP">
            <summary>
            Exponential function.
            </summary>
            <remarks>
            Returns the log exponential (base e) 
            value of a given numeric expression.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT">
            <summary>
            Date Extraction function.
            </summary>
            <remarks>
            Extracts a portion of a <c>DateTime</c> property value, 
            such as the day of the week or month of the year.
            The portion to be extracted is specified with an integer in 
            the <i>decPlaces</i> parameter of the 
            <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/> constructor.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.FLOOR">
            <summary>
            Floor function.
            </summary>
            <remarks>
            Returns the largest integer less than
            or equal to a given numeric expression.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.LAG">
            <summary>
            Lag function.
            </summary>
            <remarks>
            Returns a value in a row a specified number of rows
            from a current row. <b>LAG</b> provides access to a row at
            a given offset prior to the current position. The offset is 
            specified with the <i>decPlaces</i> parameter
            of the <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/> constructor.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.LEAD">
            <summary>
            Lead function.
            </summary>
            <remarks>
            Returns a value in a row a specified number of 
            rows from a current row. <b>LEAD</b> provides access to a 
            row at a given offset after 
            the current position. The offset is specified with 
            the <i>decPlaces</i> parameter
            of the <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/> constructor.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.LN">
            <summary>
            Natural logarithm function.
            </summary>
            <remarks>
            Returns the logarithm of its 
            single argument, the base of which is e.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.ROUND">
            <summary>
            Round function.
            </summary>
            <remarks>
            Rounds a number to the nearest integer.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.SIGN">
            <summary>
            Sign function.
            </summary>
            <remarks>
            Returns the sign of a given numeric expression. 
            <b>SIGN</b> returns <c>-1</c> (if the expression is less than zero),
            <c>0</c> (if the expression is zero), or <c>1</c> (if the expression 
            is greater than zero).
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.SIN">
            <summary>
            Sine function.
            </summary>
            <remarks>
            Returns the sine, in radians, of an angle.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.SQRT">
            <summary>
            Square root function.
            </summary>
            <remarks>
            Returns the square root of a given numeric expression.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.TAN">
            <summary>
            Tangent function.
            </summary>
            <remarks>
            Returns the tangent, in radians, of an angle.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC">
            <summary>
            Date Truncation function.
            </summary>
            <remarks>
            Rounds the value of a DateTime property down to a coarser granularity.
            The granularity is specified with an integer in the 
            <paramref name="decPlaces"/> parameter
            of the <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/> constructor.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.ExprFunction.TO_DURATION">
            <summary>
            Duration function.
            </summary>
            <remarks>
            Casts an integer into a number of milliseconds,
            so that it can be used as a duration.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprFunction.#ctor(Endeca.Navigation.Analytics.ExprFunction.ExprFunctionOp,Endeca.Navigation.Analytics.IExpr,System.Int32)">
            <summary>
            Creates a new <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/> of the specified 
            subexpression <paramref name="subExpr"/>.
            </summary>
            <param name="func">
            A function of type <see cref="T:Endeca.Navigation.Analytics.ExprFunction.ExprFunctionOp"/> that
            specifies the type of operation to be made.
            </param>
            <param name="subExpr">
            An object of type <see cref="P:Endeca.Navigation.Analytics.ExprFunction.IExpr"/> that will be
            the subexpression for this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            <para>
            If <paramref name="func"/> is <see cref="F:Endeca.Navigation.Analytics.ExprFunction.LAG"/> or 
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.LEAD"/>, then <paramref name="subExpr"/>
            must be an <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </para>
            </param>
            <param name="decPlaces">
            An integer to be used only with the <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/>, 
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.LAG"/>, <see cref="F:Endeca.Navigation.Analytics.ExprFunction.LEAD"/>, <see cref="F:Endeca.Navigation.Analytics.ExprFunction.ROUND"/>,
            and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> functions.
            <para>
            For <see cref="F:Endeca.Navigation.Analytics.ExprFunction.ROUND"/> and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/>, positive 
            numbers round to the equivalent number of decimal places; 
            negative numbers round to the equivalent place to
            the left of the decimal place.
            </para>
            <para>
            For <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/> (when <paramref name="subExpr"/> is a
            date/time) and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/>, <paramref name="decPlaces"/> 
            is a constant such as <see cref="F:Endeca.Navigation.Analytics.ExprFunction.HOUR"/> or <see cref="F:Endeca.Navigation.Analytics.ExprFunction.YEAR"/>.
            </para>
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprFunction.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprFunction.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </returns>
            <remarks>
            The format for the <see cref="F:Endeca.Navigation.Analytics.ExprFunction.EXTRACT"/>, <see cref="F:Endeca.Navigation.Analytics.ExprFunction.LAG"/>,
            <see cref="F:Endeca.Navigation.Analytics.ExprFunction.LEAD"/>, <see cref="F:Endeca.Navigation.Analytics.ExprFunction.ROUND"/>, and <see cref="F:Endeca.Navigation.Analytics.ExprFunction.TRUNC"/>
            functions is:
            <code>
            FUNCTION(<i>subexpression</i>), <i>decPlaces</i>
            </code>
            where <c>FUNCTION</c> is a function name.
            <para>
            The format for the other functions omits the <i>decPlaces</i> setting.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprFunction.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/> is valid if the function is
            not null and the subexpression is non-null and itself valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprFunction.Function">
            <summary>
            Gets and sets the function for this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </summary>
            <value>
            A function of type <see cref="T:Endeca.Navigation.Analytics.ExprFunction.ExprFunctionOp"/>.
            </value>
            <remarks>
            The functions are: <c>ExprFunction.ABS</c>,
            <c>ExprFunction.CEIL</c>, <c>ExprFunction.COS</c>,
            <c>ExprFunction.EXP</c>, <c>ExprFunction.EXTRACT</c>,
            <c>ExprFunction.FLOOR</c>, <c>ExprFunction.LAG</c>,
            <c>ExprFunction.LEAD</c>, <c>ExprFunction.LN</c>,
            <c>ExprFunction.ROUND</c>, <c>ExprFunction.SIGN</c>,
            <c>ExprFunction.SIN</c>, <c>ExprFunction.SQRT</c>,
            <c>ExprFunction.TAN</c>, <c>ExprFunction.TO_DURATION</c>,
            and <c>ExprFunction.TRUNC</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprFunction.IExpr">
            <summary> 
            Gets and sets the subexpression for this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </summary>
            <value>
            An object of type <see cref="P:Endeca.Navigation.Analytics.ExprFunction.IExpr"/> that is
            the subexpression for this <see cref="T:Endeca.Navigation.Analytics.ExprFunction"/>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprFunction.ExprFunctionOp">
            <summary>
            Enumeration of Endeca unary scalar functions.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprFunction.ExprFunctionOp.ToWire">
            <summary>
            Returns the wire form of the unary scalar function.
            </summary>
            <returns>
            The wire form of the function.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprFunction.ExprFunctionOp.ToString">
            <summary>
            Returns the string form of the unary scalar function.
            </summary>
            <returns>
            The string form of the function.
            </returns>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprKey">
            <summary> 
            Instances of <b>ExprKey</b> represent record field names.
            The fields are Endeca properties or dimensions.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprKey.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Endeca.Navigation.Analytics.ExprKey"/> expression node 
            representing the specified record field name.
            </summary>
            <param name="val">
            The name of an Endeca property or dimension.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprKey.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprKey.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.ExprKey"/> format is the value of 
            the <i>val</i> parameter of the constructor, such
            as "price" or "revenue ($)".
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprKey.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprKey"/> is valid if its value (the <i>val</i> 
            parameter of the constructor) is non-null and non-empty.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprKey.Value">
            <summary>
            Gets and sets the value for this <see cref="T:Endeca.Navigation.Analytics.ExprKey"/>.
            </summary>
            <value>
            The name of an Endeca property or dimension.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.ExprLookup">
            <summary> 
            <b>ExprLookup</b> instances represent an access to a derived property 
            of a record in a foreign table.
            </summary>
            <remarks>
            <c>MyTable[{expr1}, {expr2}].field</c> is semantically correct if <c>MyTable</c>
            is GROUPed by the same number of fields as the number of expressions
            within brackets	"[...]", and field is a derived property defined 
            on <c>MyTable</c>. Brackets with no expression list within represent access
            to a table that is GROUPed to a single record.
            <para>
            Note that because the implicit tables <c>NavStateRecords</c> and <c>AllBaseRecords</c> 
            are not GROUPED, it is not possible to do a lookup on these tables.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprLookup.#ctor(System.String,System.String,Endeca.Navigation.Analytics.LookupList)">
            <summary> 
            Constructs a new <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>. 
            </summary>
            <param name="tableName">
            The name of the table. Note that the table names
            <c>NavStateRecords</c> and <c>AllBaseRecords</c>
            are reserved and therefore cannot be specified.
            </param>
            <param name="fieldName">
            A derived property of the table specified by <paramref name="tableName"/>.
            </param>
            <param name="lList">
            A <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/> object that has been populated
            with lookup expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects).
            The <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/> represents a list of expressions 
            that evaluate to a list of values that uniquely identify a 
            record in the table.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprLookup.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprLookup.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/> format is:
            <code>
            <i>tableName</i>[<i>expression1</i>, <i>expression2</i>...].<i>fieldName</i>
            </code>
            where each <i>expression</i> is a lookup expression in the <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.ExprLookup.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/> is valid if the table name and 
            field name are non-null and non-empty. The <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/>
            itself must also be valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprLookup.TableName">
            <summary>
            Gets and sets the table name for this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </summary>
            <value>
            The table name of this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            Note that for the setter, the table names
            <c>NavStateRecords</c> and <c>AllBaseRecords</c>
            are reserved and therefore cannot be specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprLookup.FieldName">
            <summary>
            Gets and sets the the field name for this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </summary>
            <value>
            A derived property of the table specified for this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.ExprLookup.LookupList">
            <summary>
            Gets and sets the <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/> for this <see cref="T:Endeca.Navigation.Analytics.ExprLookup"/>.
            </summary>
            <value>
            A <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/> object that has been populated
            with lookup expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects).
            The <see cref="P:Endeca.Navigation.Analytics.ExprLookup.LookupList"/> represents a list of expressions 
            that evaluate to a list of values that uniquely identify a 
            record in the table.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.FilterAnd">
            <summary>
            A <b>FilterAnd</b> is a <see cref="T:Endeca.Navigation.Analytics.IFilter"/> implementing a Boolean
            n-way <c>AND</c> operation.
            </summary>
            <remarks>
            The filter evaluates to <c>true</c> for a given record
            if all of its child Filters evaluate to <c>true</c> 
            for that record. This type of filter provides an
            <see cref="T:Endeca.Navigation.Analytics.IObjectList"/> interface, where the List 
            elements represent child <see cref="T:Endeca.Navigation.Analytics.IFilter"/> operations.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.IFilter">
            <summary> 
            <b>IFilter</b> is the interface for various types of composable
            record filter operators.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.#ctor">
            <summary>
            Creates a new <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/> with no children.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.Get(System.Int32)">
            <summary>
            Gets an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object from the <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </summary>
            <param name="index">
            The index offset of the desired <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.Size">
            <summary>
            Returns the number of <see cref="T:Endeca.Navigation.Analytics.IFilter"/> objects in this <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </summary>
            <returns>
            The number of <see cref="T:Endeca.Navigation.Analytics.IFilter"/> objects in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.Add(System.Object)">
            <summary>
            Appends an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object to the end of the collection.
            </summary>
            <param name="obj">
            The <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="obj"/> is not an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.Remove(System.Int32)">
            <summary>
            Removes an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object from the <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </summary>
            <param name="index">
            The index offset of the <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </summary>
            <returns>
            The string format of this <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/> format is:
            <code>
            (<i>filter1</i> AND <i>filter2</i> ...)
            </code>
            where each <i>filter</i> is the string form of an <see cref="T:Endeca.Navigation.Analytics.IFilter"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterAnd.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/> is valid if the number of
            sub-filters (<see cref="T:Endeca.Navigation.Analytics.IFilter"/> elements) is 
            greater than zero and each sub-filter is itself valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/> does not contain at least
            one sub-filter.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.Analytics.FilterCompare">
            <summary>
            A <b>FilterCompare</b> is a type of <see cref="T:Endeca.Navigation.Analytics.IFilter"/> 
            that performs a value comparison.
            </summary>
            <remarks>
            After being created, the <b>FilterCompare</b> object
            is then set in a <see cref="T:Endeca.Navigation.Analytics.Statement"/> object with the
            <see cref="P:Endeca.Navigation.Analytics.Statement.HavingFilter"/> or <see cref="P:Endeca.Navigation.Analytics.Statement.WhereFilter"/>
            methods.
            <para>
            A <b>FilterCompare</b> can also be used to determine if
            the value of an Endeca property or dimension is null or non-null.
            </para>
            </remarks>
            <example>
            A typical use of this class is to compare the 
            value of an Endeca property or dimension to a 
            specified literal value. This can be considered 
            as a programmatic equivalent of the SQL <c>HAVING</c> 
            and <c>WHERE</c> clauses. For example, this 
            text-based syntax snippet:
            <code>
            RETURN Reps AS
            WHERE Region = 'West'
            </code>
            can be expressed programmatically as:
            <code>
            Statement reps = new Statement();
            reps.Name = "Reps";
            FilterCompare whFilter = new FilterCompare("Region", FilterCompare.EQ, "West");
            reps.WhereFilter = whFilter;
            </code>
            </example>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.EQ">
            <summary>
            EQUAL TO operator.
            </summary>
            <remarks>
            Determines if the value of <i>fieldName</i> is
            equal to the value of the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.NEQ">
            <summary>
            NOT EQUAL TO operator.
            </summary>
            <remarks>
            Determines if the value of <i>fieldName</i> is
            not equal to the value of the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.LT">
            <summary>
            LESS THAN operator.
            </summary>
            <remarks>
            Determines if the value of <i>fieldName</i> is
            less than the value of the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.LTE">
            <summary>
            LESS THAN OR EQUAL TO operator.
            </summary>
            <remarks>
            Determines if the value of <i>fieldName</i> is
            less than or equal to the value of the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.GT">
            <summary>
            GREATER THAN operator.
            </summary>
            <remarks>
            Determines if the value of <i>fieldName</i> is
            greater than the value of the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.GTE">
            <summary>
            GREATER THAN OR EQUAL TO operator.
            </summary>
            <remarks>
            Determines if the value of <i>fieldName</i> is
            less than the value of the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.IS_NULL">
            <summary>
            NULL operator.
            </summary>
            <remarks>
            Determines if the <i>fieldName</i> is null. The
            <i>val</i> parameter is ignored.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.IS_NOT_NULL">
            <summary>
            NON-NULL operator.
            </summary>
            <remarks>
            Determines if the <i>fieldName</i> is null. The
            <i>val</i> parameter is ignored.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.Analytics.FilterCompare.DVAL">
            <summary>
            DVAL operator.
            </summary>
            <remarks>
            Used to filter records by a dimension value with
            an ID specified by the <i>val</i> parameter.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterCompare.#ctor(System.String,Endeca.Navigation.Analytics.FilterCompare.FilterCompareOp,System.String)">
            <summary> 
            Creates a new <b>FilterCompare</b> object.
            </summary>
            <param name="fieldName">
            The name of an Endeca property or dimension. The value 
            of <paramref name="fieldName"/> will be compared to the literal 
            value of <paramref name="val"/>. Note that this value is 
            ignored for the <see cref="F:Endeca.Navigation.Analytics.FilterCompare.DVAL"/> function.
            </param>
            <param name="function">
            A comparison function of type <see cref="T:Endeca.Navigation.Analytics.FilterCompare.FilterCompareOp"/>.
            See the <see cref="P:Endeca.Navigation.Analytics.FilterCompare.Function"/> property for a list of the
            comparison function names.
            </param>
            <param name="val">
            A literal value to be compared to the value of <paramref name="fieldName"/>.
            For the <c>FilterCompare.DVAL</c> function, this value specifies the 
            ID of a dimension value.
            <para>
            Note that this value is ignored for the <c>FilterCompare.IS_NULL</c>
            and <c>FilterCompare.IS_NOT_NULL</c> functions.
            </para>
            </param>
            <remarks>
            The <b>FilterCompare</b> compares the value for the
            Endeca property or dimension <paramref name="fieldName"/> 
            to the value specified by <paramref name="val"/> using 
            the function specified by <paramref name="function"/>.
            <para>
            The filter evaluates to <c>true</c> for a given record if 
            the specified comparison function evaluates to <c>true</c> when 
            applied to the value for <paramref name="fieldName"/> from the 
            record (lhs) and the specified <paramref name="val"/> (rhs).
            For example, if <paramref name="fieldName"/> is "Price"
            and the record has a Price of 1.00, and the function is
            <c>FilterCompare.LT</c> and <paramref name="val"/>
            is 2.00, then the filter would evaluate to <c>true</c>.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterCompare.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterCompare.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/> format is:
            <code>
            ("<i>fieldName</i>" "<i>compare-function</i>" '<i>compare-value</i>')
            </code>
            Note that <i>compare-value</i> is not returned for the
            <c>FilterCompare.IS_NULL</c> and <c>FilterCompare.IS_NOT_NULL</c> functions.
            <para>
            For the <c>FilterCompare.DVAL</c> function, the format is:
            <code>
            (DVAL("<i>value</i>")
            </code>
            For example:
            <code>
            ("SalesTotal" "FilterCompare.GT" '10000')
            </code>
            is returned if the property name is "SalesTotal" and a GREATER THAN
            comparison is being made to the value of 10000.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterCompare.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/> is valid if the <i>function</i>
            is non-null and the <i>fieldName</i> and <i>val</i> are 
            non-null and non-empty.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.FilterCompare.FieldName">
            <summary>
            Gets and sets the <i>fieldName</i> for this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </summary>
            <value>
            The name of an Endeca property or dimension that is
            the <i>fieldName</i> setting for this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            <para>
            The value of this field will either be tested for a null value 
            or will be compared to the <i>val</i> parameter. Note that 
            this value is ignored for the <see cref="F:Endeca.Navigation.Analytics.FilterCompare.DVAL"/> function.
            </para>
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.FilterCompare.Function">
            <summary>
            Gets and sets the comparison function for this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </summary>
            <value>
            The comparison function (of type <see cref="T:Endeca.Navigation.Analytics.FilterCompare.FilterCompareOp"/>)
            for this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>. An example is 
            <c>FilterCompare.LT</c> for the LESS THAN operator.
            </value>
            <remarks>
            The comparison functions are: <c>FilterCompare.EQ</c>,
            <c>FilterCompare.NEQ</c>, <c>FilterCompare.LT</c>,
            <c>FilterCompare.LTE</c>, <c>FilterCompare.GT</c>,
            <c>FilterCompare.GTE</c>, <c>FilterCompare.IS_NULL</c>,
            <c>FilterCompare.IS_NOT_NULL</c>, and <c>FilterCompare.DVAL</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.FilterCompare.Value">
            <summary>
            Gets and sets the value for this <see cref="T:Endeca.Navigation.Analytics.FilterCompare"/>.
            </summary>
            <value>
            The value to be compared.
            </value>
            <remarks>
            The value will be compared to the value of the <i>fieldName</i>,
            using the specified comparison function. For the 
            <see cref="F:Endeca.Navigation.Analytics.FilterCompare.DVAL"/> function, <i>value</i> specifies 
            the ID of the dimension value that will be used 
            to filter records.
            <para>
            Note that this value is ignored for the <see cref="F:Endeca.Navigation.Analytics.FilterCompare.IS_NULL"/>
            and <see cref="F:Endeca.Navigation.Analytics.FilterCompare.IS_NOT_NULL"/> functions.
            </para>
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.FilterCompare.FilterCompareOp">
            <summary>
            Enumeration of Endeca comparison operators.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterCompare.FilterCompareOp.ToWire">
            <summary>
            Returns the wire form of the comparison operator.
            </summary>
            <returns>
            The wire form of the comparison operator.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterCompare.FilterCompareOp.ToString">
            <summary>
            Returns the string form of the comparison operator.
            </summary>
            <returns>
            The string form of the comparison operator.
            </returns>
        </member>
        <member name="T:Endeca.Navigation.Analytics.FilterIn">
            <summary>
            A <b>FilterIn</b> is an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> that 
            checks membership of a given set of values in a table. 
            The membership is checked with a set of lookup expressions 
            in a <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/> that is set in
            the <b>FilterIn</b>.
            </summary>
            <remarks>
            This filter:
            <code>
            "[<i>expression1</i>, <i>expression2</i>] IN MyTable"
            </code>
            is semantically correct if <c>MyTable</c> is GROUPED
            by the same number of fields as the number of expressions within 
            brackets "[...]". In this way, the contents of the brackets 
            uniquely identify a record in <c>MyTable</c>. Brackets with 
            no expression list within represent access to a table that 
            is GROUPed to a single record.
            <para>
            Because the implicit tables <c>NavStateRecords</c> and 
            <c>AllBaseRecords</c> are not GROUPED, it is not possible 
            to do a lookup on these tables.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterIn.#ctor(System.String,Endeca.Navigation.Analytics.LookupList)">
            <summary> 
            Constructs a new <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>. 
            </summary>
            <param name="tableName">
            The name of the table. Note that the table names
            <c>NavStateRecords</c> and <c>AllBaseRecords</c>
            are reserved and therefore cannot be specified.
            </param>
            <param name="lList">
            A <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/> object that has been populated
            with lookup expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects).
            The <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/> represents a list of expressions 
            that evaluate to a list of values that uniquely identify a 
            record in the table.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterIn.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterIn.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.FilterIn"/> format is:
            <code>
            [<i>expression1</i>, <i>expression2</i>...] IN <i>table-name</i>
            </code>
            where each <i>expression</i> is a lookup expression in the <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterIn.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.FilterIn"/> is valid if the table name is  
            non-null and non-empty ahd the <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/>
            is itself valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.FilterIn.TableName">
            <summary>
            Gets and sets the table name for this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </summary>
            <value>
            The table name of this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            Note that for the setter, the table names
            <c>NavStateRecords</c> and <c>AllBaseRecords</c>
            are reserved and therefore cannot be specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.FilterIn.LookupList">
            <summary>
            Gets and sets the <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/> for this <see cref="T:Endeca.Navigation.Analytics.FilterIn"/>.
            </summary>
            <value>
            A <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/> object that has been populated
            with lookup expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects).
            The <see cref="P:Endeca.Navigation.Analytics.FilterIn.LookupList"/> represents a list of expressions 
            that evaluate to a list of values that uniquely identify a 
            record in the table.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.FilterNot">
            <summary>
            A <see cref="T:Endeca.Navigation.Analytics.FilterNot"/> is an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> implementing a 
            Boolean <c>NOT</c> operation. The filter evaluates 
            to <c>true</c> for a given record if its child filter 
            evaluates to <c>false</c> for that record.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterNot.#ctor(Endeca.Navigation.Analytics.IFilter)">
            <summary> 
            Creates a new <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </summary>
            <param name="filter">
            The filter sub-expression (of type <see cref="T:Endeca.Navigation.Analytics.IFilter"/>) 
            for this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </param>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.FilterNot"/> represents the negation 
            of the filter sub-expression <paramref name="filter"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterNot.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterNot.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.FilterNot"/> format is:
            <code>
            NOT(<i>subfilter</i>)
            </code>
            where <i>subfilter</i> is the filter sub-expression.
            </remarks>
            <example>
            This string:
            <code>
            NOT("SalesTotal" "FilterCompare.GT" "10000")
            </code>
            is returned if a NOT operation is performed on the 
            result of the GREATER THAN comparison.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterNot.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.FilterNot"/> is valid if it contains a
            a sub-filter and that sub-filter is itself valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.FilterNot.Filter">
            <summary>
            Gets and sets the filter sub-expression for this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </summary>
            <value>
            The filter sub-expression (of type <see cref="T:Endeca.Navigation.Analytics.IFilter"/>) 
            for this <see cref="T:Endeca.Navigation.Analytics.FilterNot"/>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.FilterOr">
            <summary> 
            A <b>FilterOr</b> is an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> implementing 
            a Boolean n-way <c>OR</c> operation.
            </summary>
            <remarks>
            The filter evaluates to <c>true</c> for a given record
            if any of its child Filters evaluate to <c>true</c> for 
            that record.
            <para>
            This type of filter provides a List (<see cref="T:Endeca.Navigation.Analytics.IObjectList"/>) 
            interface, where the List elements represent child <see cref="T:Endeca.Navigation.Analytics.IFilter"/>
            operations.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.#ctor">
            <summary>
            Creates a new <see cref="T:Endeca.Navigation.Analytics.FilterOr"/> with no children
            (no <see cref="T:Endeca.Navigation.Analytics.IFilter"/> sub-filters).
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.Get(System.Int32)">
            <summary>
            Gets an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object from the <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </summary>
            <param name="index">
            The index offset of the desired <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.Size">
            <summary>
            Returns the number of <see cref="T:Endeca.Navigation.Analytics.IFilter"/> objects in this <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </summary>
            <returns>
            The number of <see cref="T:Endeca.Navigation.Analytics.IFilter"/> objects in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.Add(System.Object)">
            <summary>
            Appends an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object to the end of the collection.
            </summary>
            <param name="obj">
            The <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="obj"/> is not an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.Remove(System.Int32)">
            <summary>
            Removes an <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object from the <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </summary>
            <param name="index">
            The index offset of the <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.IFilter"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </summary>
            <returns>
            The string format of this <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.FilterOr"/> format is:
            <code>
            (<i>filter1</i> OR <i>filter2</i> ...)
            </code>
            where each <i>filter</i> is the string form of an <see cref="T:Endeca.Navigation.Analytics.IFilter"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.FilterOr.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.FilterOr"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.FilterOr"/> is valid if the number of
            sub-filters (<see cref="T:Endeca.Navigation.Analytics.IFilter"/> elements) is 
            greater than zero and each sub-filter is itself valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the <see cref="T:Endeca.Navigation.Analytics.FilterAnd"/> does not contain at least
            one sub-filter.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.Analytics.GroupBy">
            <summary> 
            A <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> defines a single dimension of 
            record grouping for a containing <see cref="T:Endeca.Navigation.Analytics.Statement"/>
            operation.
            </summary>
            <remarks>
            Basically, a <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> represents an 
            Endeca property or dimension by which records will 
            be grouped. Input records for the containing 
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> operation are grouped together 
            by common assignment from the <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> 
            property or dimension. <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>
            instances are encapsulated in a <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>,
            which in turn is set in the <see cref="T:Endeca.Navigation.Analytics.Statement"/> object.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.#ctor(System.String)">
            <summary> 
            Constructs a new <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>. 
            </summary>
            <param name="groupingKey">
            The name of the Endeca property or dimension
            by which the records will be aggregated.
            </param>
            <remarks>
            This one-parameter constructor will request
            aggregation of records into groups based on the Endeca 
            property or dimension named <paramref name="groupingKey"/>.
            </remarks>
            <example>
            This code:
            <code>
            GroupByList g = new GroupByList();
            GroupBy grByYr = new GroupBy("Year");
            g.add(grBy);
            </code>
            performs a leaf-level grouping of records based 
            on the Endeca dimension named <c>Year</c>.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.#ctor(System.String,System.Int32)">
            <summary> 
            Constructs a new <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>, which will request
            aggregation of records into groups based on the Endeca 
            property or dimension named <paramref name="groupingKey"/>.
            </summary>
            <param name="groupingKey">
            The name of the Endeca property or dimension
            by which the records will be aggregated.
            </param>
            <param name="depth">
            The level of a dimension hierarchy at which
            the grouping will be performed.
            </param>
            <remarks>
            This two-parameter constructor will request
            aggregation of records into groups based on the Endeca 
            property or dimension named <paramref name="groupingKey"/>.
            For dimensions, the grouping will depend on the value's ancestor
            at <paramref name="depth"/> from the root 
            of the dimension's hierarchy.
            <para>
            Note that a <paramref name="depth"/> of zero does not
            indicate grouping at the root of the hierarchy, but rather 
            it denotes that depth will not be taken into account at 
            all, so grouping will be performed based on the values encountered.
            </para>
            </remarks>
            <example>
            If a dimension named <c>Region</c> contains a hierarchy of 
            <c>Country</c>, <c>State</c>, and <c>City</c>, and the grouping 
            was desired at the <c>State</c> level (one level below the root 
            of the dimension hierarchy), the constructor code would be:
            <code>
            GroupByList g = new GroupByList();
            GroupBy grByReg = new GroupBy("Region",1);
            g.add(grByReg);
            </code>
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> format is:
            <code>
            "<i>grouping-key-name</i>"
            </code>
            if no <i>depth</i> has been set.
            <para>
            The format:
            <code>
            "<i>grouping-key-name</i>:<i>depth</i>"
            </code>
            is used if <i>depth</i> has been specified.
            </para>
            </remarks>
            <example>
            The string:
            <code>
            Region:2
            </code>
            is returned if the grouping key is a dimension named <c>Region</c>
            with a grouping level of 2 (that is, two levels below the root of 
            the dimension hierarchy).
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.Equals(System.Object)">
            <summary>
            Indicates whether this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> has an equivalence
            to a reference <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> specified by <paramref name="obj"/>.
            </summary>
            <param name="obj">
            The reference <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> with which to compare.
            </param>
            <returns>
            <c>true</c> if this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> is the same
            as <paramref name="obj"/>; <c>false</c> otherwise.
            </returns>
            <remarks>
            Note that the the depth settings of the two <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> 
            objects are not compared.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.GetHashCode">
            <summary>
            Returns the hashcode of the object.
            </summary>
            <returns>
            The hashcode.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupBy.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> is valid if the grouping key name is
            non-null and non-empty, and the depth is non-negative.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.GroupBy.FieldName">
            <summary> 
            Gets and sets the name of the grouping property or dimension 
            for this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </summary>
            <value>
            The name of the Endeca property or dimension
            by which the records will be grouped.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.GroupBy.Depth">
            <summary> 
            Gets and sets the dimension depth for the aggregates 
            defined by this <see cref="T:Endeca.Navigation.Analytics.GroupBy"/>.
            </summary>
            <value>
            An integer representing the level of a dimension hierarchy 
            at which the grouping is performed.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.GroupByList">
            <summary> 
            A <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> is a list of 
            <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> instances.
            </summary>
            <remarks>
            Each <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> instance in the <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>
            represents a single dimension of record grouping.
            Additionally, the <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> may be tagged with
            a method for computing subtotal aggregates, which are basically
            aggregates grouped by subsets of the <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> dimensions.
            <para>
            If an empty <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> is attached to a 
            <see cref="T:Endeca.Navigation.Analytics.Statement"/>, this indicates that the input records 
            will be GROUPed to a single record.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.#ctor">
            <summary>
            Constructs a new, empty <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.Get(System.Int32)">
            <summary>
            Gets a <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object from the <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
            <param name="index">
            The index of the desired <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.Size">
            <summary>
            Returns the number of <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> objects in this <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
            <returns>
            The number of <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> objects in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.Add(System.Object)">
            <summary>
            Appends a <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object to the end of the collection.
            </summary>
            <param name="obj">
            The <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="obj"/> is not a <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.Remove(System.Int32)">
            <summary>
            Removes a <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object from the <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
            <param name="index">
            The index offset of the <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> format for an empty <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> is:
            <code>
            GROUP
            </code>
            An empty <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> indicates a GROUP operation that will 
            result in a single result record.
            <para>
            The format:
            <code>
            GROUP BY <i>grouping-key-name1</i>, ...
            </code>
            is used if the <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> has one or 
            more <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> objects.
            </para>
            </remarks>
            <example>
            The string:
            <code>
            GROUP BY Region, Year
            </code>
            is returned if the aggregated records are grouped by the <c>Region</c>
            and <c>Year</c> combination.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.GroupByList.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> is valid if any 
            <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> element it contains is itself valid.
            An empty <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> is valid because it 
            represents grouping to a single record (bucket).
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.LookupList">
            <summary> 
            <b>LookupList</b> instances represent a list of expressions used
            to uniquely identify a record in a table (foreign or local).
            These lookup expressions are objects of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/>.
            </summary>
            <remarks>
            Lookup expressions provide the ability to refer to values in record sets
            that have been previously computed. Lookups can only refer to record sets
            that were grouped and the <b>LookupList</b> must match the
            <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> fields of the lookup record set.
            <para> 
            A lookup expression maps a record in the current statement’s 
            record set to a record in the lookup record set. A <b>LookupList</b> 
            should therefore contain the same number of expressions as the 
            size of the <see cref="T:Endeca.Navigation.Analytics.GroupByList"/> of the table it is 
            used to key into.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.#ctor">
            <summary>
            Constructs a new, empty <b>LookupList</b>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.Get(System.Int32)">
            <summary>
            Gets the lookup expression (an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object) from the <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </summary>
            <param name="index">
            The index of the desired lookup expression.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.Size">
            <summary>
            Returns the number of lookup expressions in this <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </summary>
            <returns>
            The number of lookup expressions (<see cref="T:Endeca.Navigation.Analytics.IExpr"/> objects) in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.Add(System.Object)">
            <summary>
            Appends a lookup expression to the end of the collection.
            </summary>
            <param name="obj">
            The lookup expression (an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object) to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.Remove(System.Int32)">
            <summary>
            Removes a lookup expression (an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object) from the <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </summary>
            <param name="index">
            The index of the <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.IExpr"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.LookupList"/> format is:
            <code>
            <i>expression1</i>, <i>expression2</i>...
            </code>
            where <i>expression</i> is the string form of the lookup expression.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.LookupList.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.LookupList"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.LookupList"/> is valid if all of its expressions 
            are themselves valid. Note that a <see cref="T:Endeca.Navigation.Analytics.LookupList"/> with 
            no elements is syntactically valid.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Analytics.OrderBy">
            <summary> 
            An <b>OrderBy</b> defines an ordering on a set of records, 
            based on the natural ordering of the specified field.
            </summary>
            <remarks>
            An <b>OrderBy</b> allows records to be ordered by any of
            their property, dimension, or derived values, by ascending 
            or descending sort, in any combination. <b>OrderBy</b> 
            instances are encapsulated in an <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>, 
            which in turn is set in the <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderBy.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </summary>
            <param name="fieldName">
            The name of the Endeca property or dimension
            by which the records will be ordered.
            </param>
            <param name="isAscending">
            <c>true</c> for an ascending sort or
            <c>false</c> for a descending sort.
            </param>
            <remarks>
            The new <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> specifies a sort
            on an Endeca property or dimension indicated by 
            <paramref name="fieldName"/> in a sort direction 
            specified by <paramref name="isAscending"/>.
            </remarks>
            <example>
            This sample:
            <code>
            OrderByList o = new OrderByList();
            o.add(new OrderBy("Total", false));
            </code>
            specifies an ordering based on the <c>Total</c> property 
            with a descending sort of the records.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderBy.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderBy.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </returns>
            <remarks>
            For an ascending sort, the <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> format is:
            <code>
            <i>key-sort-name</i> ASC
            </code>
            For a descending sort, the format is:
            <code>
            <i>key-sort-name</i> DESC
            </code>
            where <i>key-sort-name</i> is the Endeca property 
            or dimension by which the records will be sorted.
            </remarks>
            <example>
            This string:
            <code>
            YearSales ASC
            </code>
            is returned if the sorting key is a property named <c>YearSales</c>
            and an ascending sort direction has been set.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderBy.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> is valid if the key sorting name is
            non-null and non-empty.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.OrderBy.FieldName">
            <summary> 
            Gets and sets the name of the sorting 
            property or dimension for this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </summary>
            <value>
            The name of the Endeca property or dimension
            by which the records will be ordered.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.OrderBy.Ascending">
            <summary> 
            Gets and sets the sort direction of 
            this <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </summary>
            <value>
            <c>true</c> for an ascending sort or
            <c>false</c> for a descending sort.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.OrderByList">
            <summary> 
            An <b>OrderByList</b> is a list of <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> instances.
            </summary>
            <remarks>
            Unlike a <see cref="T:Endeca.Navigation.Analytics.GroupByList"/>, an <see cref="T:Endeca.Navigation.Analytics.OrderByList"/> 
            may not be empty, because an empty list does not imply a repeatable order.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.#ctor">
            <summary>
            Constructs a new, empty <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.Get(System.Int32)">
            <summary>
            Gets an <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object from the <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </summary>
            <param name="index">
            The index of the desired <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.Size">
            <summary>
            Returns the number of <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> objects in this <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </summary>
            <returns>
            The number of <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> objects in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.Add(System.Object)">
            <summary>
            Appends an <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object to the end of the collection.
            </summary>
            <param name="obj">
            The <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="obj"/> is not an <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.Remove(System.Int32)">
            <summary>
            Removes an <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object from the <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </summary>
            <param name="index">
            The index offset of the <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.OrderByList"/> format is:
            <code>
            ORDER BY <i>key-sort-name1</i> <i>sortdir</i>, <i>key-sort-name2</i> <i>sortdir</i> ...
            </code>
            where <i>sortdir</i> is either <c>ASC</c> or <c>DESC</c>.
            </remarks>
            <example>
            The string:
            <code>
            ORDER BY Total DESC
            </code>
            is returned if the sorting key is a property named <c>Total</c>
            and a descending sort direction has been set.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.OrderByList.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.OrderByList"/>.
            </summary>
            <remarks>
            An <see cref="T:Endeca.Navigation.Analytics.OrderByList"/> is valid if it is 
            non-empty (must contain at least one <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> 
            element) and all its <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> elements 
            are themselves valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the  <see cref="T:Endeca.Navigation.Analytics.OrderByList"/> does not contain at least
            one <see cref="T:Endeca.Navigation.Analytics.OrderBy"/>.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.Analytics.Select">
            <summary> 
            A <b>Select</b> operation represents the assignment of a named
            derived value to a record produced as the result of 
            a <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <remarks>
            The definition of the derived value is given by an expression.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Select.#ctor(System.String,Endeca.Navigation.Analytics.IExpr)">
            <summary> 
            Constructs a new <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </summary>
            <param name="field">
            The name of the derived property that 
            this <see cref="T:Endeca.Navigation.Analytics.Select"/> should produce.
            </param>
            <param name="expr">
            The derived property expression as an object 
            of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/>.
            </param>
            <remarks>
            The new <see cref="T:Endeca.Navigation.Analytics.Select"/> will associate
            the result of <paramref name="expr"/> with 
            the derived property named <paramref name="field"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Select.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Select.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.Select"/> format is:
            <code>
            <i>expression</i> AS <i>derived-prop-name</i>
            </code>
            where <i>expression</i> is the string form of an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> expression 
            and <i>derived-prop-name</i> is the name of the derived property that will
            be produced.
            </remarks>
            <example>
            This string:
            <code>
            AVG(Amount) / MAX(Amount) AS AvgOverMax
            </code>
            is returned if the derived property name is <c>AvgOverMax</c> and the
            expression assigns the ratio of the average <c>Amount</c> value to the
            maximum "Amount" value.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Select.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.Select"/> is valid if the derived property name
            is non-null and non-empty and the expression is valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Select.FieldName">
            <summary> 
            Gets and sets the name of the derived property 
            that this <see cref="T:Endeca.Navigation.Analytics.Select"/> should produce.
            </summary>
            <value>
            The name of the derived property that
            this <see cref="T:Endeca.Navigation.Analytics.Select"/> should produce.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Select.Expr">
            <summary> 
            Gets and sets the derived property expression 
            for this <see cref="T:Endeca.Navigation.Analytics.Select"/>.
            </summary>
            <value>
            The derived property expression as an object 
            of type <see cref="T:Endeca.Navigation.Analytics.IExpr"/>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.SelectList">
            <summary> 
            A <b>SelectList</b> is a list of <see cref="T:Endeca.Navigation.Analytics.Select"/> expressions.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.#ctor">
            <summary>
            Constructs a new, empty <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.Get(System.Int32)">
            <summary>
            Gets a <see cref="T:Endeca.Navigation.Analytics.Select"/> expression from the <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
            <param name="index">
            The index of the desired <see cref="T:Endeca.Navigation.Analytics.Select"/> object.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.Analytics.Select"/> object at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.Size">
            <summary>
            Returns the number of <see cref="T:Endeca.Navigation.Analytics.Select"/> expressions in 
            this <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
            <returns>
            The number of <see cref="T:Endeca.Navigation.Analytics.Select"/> objects in the collection.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.Add(System.Object)">
            <summary>
            Appends a <see cref="T:Endeca.Navigation.Analytics.Select"/> object to the end of the collection.
            </summary>
            <param name="obj">
            The <see cref="T:Endeca.Navigation.Analytics.Select"/> object to be added.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="obj"/> is a null reference.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="obj"/> is not a <see cref="T:Endeca.Navigation.Analytics.Select"/> object.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.Remove(System.Int32)">
            <summary>
            Removes a <see cref="T:Endeca.Navigation.Analytics.Select"/> object from the <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
            <param name="index">
            The index offset of the <see cref="T:Endeca.Navigation.Analytics.Select"/> object to be removed.
            </param>
            <returns>
            The removed <see cref="T:Endeca.Navigation.Analytics.Select"/> object that was previously 
            at position <paramref name="index"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </returns>
            <remarks>
            The <see cref="T:Endeca.Navigation.Analytics.SelectList"/> format is:
            <code>
            SELECT <i>expression1</i> AS <i>derived-prop-name1</i>, <i>expression2</i> AS <i>derived-prop-name2</i>...
            </code>
            where <i>expression</i> is the string form of an <see cref="T:Endeca.Navigation.Analytics.IExpr"/> expression 
            and <i>derived-prop-name</i> is the name of the derived property that will
            be produced. 
            </remarks>
            <example>
            The string:
            <code>
            SELECT COUNT(TransId) AS NumTrans
            </code>
            is returned if the derived property name is <c>NumTrans</c> and 
            the expression uses the COUNT function to compute the number 
            of transactions by the <c>TransId</c> field.
            </example>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SelectList.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.SelectList"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.SelectList"/> is valid if it is non-empty and 
            all its <see cref="T:Endeca.Navigation.Analytics.Select"/> elements are themselves valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the <see cref="T:Endeca.Navigation.Analytics.SelectList"/> is empty.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.Analytics.Statement">
            <summary> 
            A <see cref="T:Endeca.Navigation.Analytics.Statement"/> represents a pass over a set of input records
            (those of the <c>FROM</c> table) to generate a set of output records.
            </summary>
            <remarks>
            Input records and output records may be filtered; 
            output records are populated with derived values, and with 
            values by which the records are GROUPed.
            The output record set may be sorted and paged.
            <para>
            A <see cref="T:Endeca.Navigation.Analytics.Statement"/> has the form:
            </para>
            <list type="bullet">
            <item><description>RETURN {table-name} AS	// required: RETURN or DEFINE: see <see cref="P:Endeca.Navigation.Analytics.Statement.Shown"/></description></item>
            <item><description>SELECT					// required</description></item>
            <item><description>{expr1} AS {field1},	// required: at least one assignment.</description></item>
            <item><description>{expr2} AS {field2},</description></item>
            <item><description>...</description></item>
            <item><description>WHERE {filter}			// optional</description></item>
            <item><description>FROM {table-name}		// optional</description></item>
            <item><description>GROUP					// optional: or GROUP BY {field}, {field},...</description></item>
            <item><description>HAVING {filter}				// optional</description></item>
            <item><description>ORDER BY {field},{field}...	// optional</description></item>
            <item><description>PAGE({start}, {end})		// optional</description></item>
            </list>
            <para>
            <c>NavStateRecords</c> and <c>AllBaseRecords</c> are reserved table names.
            <c>NavStateRecords</c> is the default if the <c>FROM</c> clause is omitted.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Statement.#ctor">
            <summary> 
            Constructs a new, empty <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <remarks>
            An empty <see cref="T:Endeca.Navigation.Analytics.Statement"/> will act as 
            a simple pass-through of records.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Statement.SetReturnRows(System.Int32,System.Int32)">
            <summary>
            Sets the rows to return for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <param name="first">
            The starting row.
            </param>
            <param name="num">
            The number of rows to return.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Statement.ToWire">
            <summary>
            Returns the wire form of this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <returns>
            The wire form of this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </returns>
            <remarks>
            This method is not intended for public use because 
            the wire format is subject to change.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Statement.ToString">
            <summary>
            Returns the string form of this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <returns>
            The string form of this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </returns>
            <remarks>
            See the class comments for the form of the <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Analytics.Statement.ValidateSyntax">
            <summary>
            Validates the syntax of this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.Statement"/> is valid if 
            (1) the table-name is non-null and non-empty,
            (2) the <see cref="P:Endeca.Navigation.Analytics.Statement.SelectList"/> is non-null and valid, 
            and (3) if any of <see cref="P:Endeca.Navigation.Analytics.Statement.GroupByList"/>, 
            <see cref="P:Endeca.Navigation.Analytics.Statement.OrderByList"/>, <c>whereFilter</c>, 
            and <c>havingFilter</c> are non-null, they must be valid.
            </remarks>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the syntax requirements are not met.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.FromStatementName">
            <summary>
            Gets and sets the name of the <c>FROM</c> Statement.
            </summary>
            <value>
            The name of the <c>FROM</c> Statement. Note that 
            the name may be <c>null</c>; when the <see cref="T:Endeca.Navigation.Analytics.Statement"/> 
            is computed, a missing <c>FROM</c> clause is interpreted 
            as <c>FROM NavStateRecords</c>.
            </value>
            <remarks>
            The <c>FROM</c> statement is the statement whose records are
            the input for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.Name">
            <summary>
            Gets and sets the name of the current <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            The name of the current <see cref="T:Endeca.Navigation.Analytics.Statement"/>. 
            If no name has been set, the getting version 
            returns <c>null</c>.
            </value>
            <remarks>
            The name of the <see cref="T:Endeca.Navigation.Analytics.Statement"/> must be non-null 
            for the <see cref="T:Endeca.Navigation.Analytics.Statement"/> to be syntactically valid.
            <para>
            Once the query is sent to the MDEX Engine and a 
            response is returned, the <see cref="T:Endeca.Navigation.Analytics.Statement"/> name 
            must be used as the parameter to the
            <see cref="M:Endeca.Navigation.Navigation.GetAnalyticsStatementResult(System.String)"/> method 
            to obtain an <see cref="T:Endeca.Navigation.AnalyticsStatementResult"/> containing 
            the records associated with the <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.Shown">
            <summary>
            Gets and sets whether the <see cref="T:Endeca.Navigation.Analytics.Statement"/> is 
            a <c>Return</c> or <c>Define</c> <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            <c>true</c> if the current <see cref="T:Endeca.Navigation.Analytics.Statement"/> is
            a <c>Return</c> statement (indicates that the application 
            wants to see its result records), or <c>false</c> if it is
            a <c>Define</c> statement (indicates that it is only used 
            as an intermediate calculation).
            </value>
            <remarks>
            <c>Return</c> means that the results should be returned to 
            the client, while <c>Define</c> means that it will only be 
            used to compute other results.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.SelectList">
            <summary>
            Gets and sets the list of <see cref="T:Endeca.Navigation.Analytics.Select"/> expressions 
            for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            A <see cref="P:Endeca.Navigation.Analytics.Statement.SelectList"/> containing the <see cref="T:Endeca.Navigation.Analytics.Select"/>
            expressions for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </value>
            <remarks>
            Each <see cref="T:Endeca.Navigation.Analytics.Select"/> associates a derived value with 
            each result aggregated record produced by this
            <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.WhereFilter">
            <summary>
            Gets and sets the <c>WHERE clause</c> for 
            this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            An <see cref="T:Endeca.Navigation.Analytics.IFilter"/> containing the <c>WHERE clause</c>
            for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </value>
            <remarks> 
            The <c>WHERE clause</c> acts as a filter on
            input records that will be grouped into result 
            aggregates. In other words, it specifies a 
            pre-filter for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.HavingFilter">
            <summary>
            Gets and sets the <c>HAVING clause</c> for 
            this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            An <see cref="T:Endeca.Navigation.Analytics.IFilter"/> containing the <c>HAVING clause</c>
            for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </value>
            <remarks>
            A <c>HAVING clause</c> acts as a filter on output aggregated 
            records. In other words, it specifies a post-filter for 
            this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.GroupByList">
            <summary>
            Gets and sets the <see cref="P:Endeca.Navigation.Analytics.Statement.GroupByList"/>  
            for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            The <see cref="P:Endeca.Navigation.Analytics.Statement.GroupByList"/> for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </value>
            <remarks>
            The <see cref="P:Endeca.Navigation.Analytics.Statement.GroupByList"/> determines the way that 
            input records are grouped into result aggregated records.
            <para> 
            Basically, each <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> in the specified 
            <see cref="P:Endeca.Navigation.Analytics.Statement.GroupByList"/> represents a grouping property 
            or dimension, and input records are assigned to a
            resulting aggregate based on their values for these 
            properties and dimensions. Note that if an empty 
            <see cref="P:Endeca.Navigation.Analytics.Statement.GroupByList"/> is attached to 
            a <see cref="T:Endeca.Navigation.Analytics.Statement"/>, it indicates that the
            input records will be GROUPed to a single record.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.OrderByList">
            <summary>
            Gets and sets the <see cref="P:Endeca.Navigation.Analytics.Statement.OrderByList"/>  
            for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            </summary>
            <value>
            The <see cref="P:Endeca.Navigation.Analytics.Statement.OrderByList"/> for this <see cref="T:Endeca.Navigation.Analytics.Statement"/>.
            Note that the <see cref="P:Endeca.Navigation.Analytics.Statement.OrderByList"/> cannot be empty.
            </value>
            <remarks>
            The list of <see cref="T:Endeca.Navigation.Analytics.OrderBy"/> specifications for the
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> determines the order in which result
            aggregated records will be returned, and determines the ranks
            of result aggregated records used by paging controls
            associated with <see cref="T:Endeca.Navigation.Analytics.GroupBy"/> specifications.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.Paged">
            <summary>
            Tests whether this <see cref="T:Endeca.Navigation.Analytics.Statement"/> is paged.
            </summary>
            <value>
            <c>true</c> if this <see cref="T:Endeca.Navigation.Analytics.Statement"/> is paged, 
            <c>false</c> otherwise.
            </value>
            <remarks>
            A <see cref="T:Endeca.Navigation.Analytics.Statement"/> is paged if the application only wants 
            a subset of the records that the <see cref="T:Endeca.Navigation.Analytics.Statement"/> computes.
            <para>
            By default, the <c>paged</c> setting is <c>false</c>. 
            Calling the <see cref="M:Endeca.Navigation.Analytics.Statement.SetReturnRows(System.Int32,System.Int32)"/> method
            sets <c>paged</c> to <c>true</c>.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.FirstPage">
            <summary>
            Gets the first row-number requested.
            </summary>
            <value>
            If the <see cref="T:Endeca.Navigation.Analytics.Statement"/> is paged, returns an integer 
            representing the first row-number requested. If the 
            <see cref="T:Endeca.Navigation.Analytics.Statement"/> is not paged, <c>0</c> is returned.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Analytics.Statement.PagesRequested">
            <summary>
            Gets the number of pages requested.
            </summary>
            <value>
            If the <see cref="T:Endeca.Navigation.Analytics.Statement"/> is paged, returns an integer 
            representing the number of rows requested. Returns <c>0</c> if 
            the <see cref="T:Endeca.Navigation.Analytics.Statement"/> is not paged.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Analytics.SyntaxException">
            <summary>
            Analytics Syntax Exception representing an error due to a malformed query.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SyntaxException.#ctor">
            <summary>
            Construct a new, default syntax exception with no message.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Analytics.SyntaxException.#ctor(System.String)">
            <summary>
            Construct a new syntax exception with the specified message.
            </summary>
            <param name="s">The message string</param>
        </member>
        <member name="T:antlr.ANTLRException">
            <exclude/>
        </member>
        <member name="T:antlr.ANTLRPanicException">
            <exclude/>
        </member>
        <member name="T:antlr.ASTFactory">
            <exclude/>
             <summary>
             AST Support code shared by TreeParser and Parser.
             </summary>
             <remarks>
             <para>
             We use delegation to share code (and have only one 
             bit of code to maintain) rather than subclassing
             or superclassing (forces AST support code to be
             loaded even when you don't want to do AST stuff).
             </para>
             <para>
             Typically, <see cref="M:antlr.ASTFactory.setASTNodeType(System.String)"/>  is used to specify the
             homogeneous type of node to create, but you can override
             <see cref="M:antlr.ASTFactory.create"/>  to make heterogeneous nodes etc...
             </para>
             </remarks>
        </member>
        <member name="M:antlr.ASTFactory.#ctor">
            <summary>
            Constructs an <c>ASTFactory</c> with the default AST node type of
            <see cref="T:antlr.CommonAST"/>.
            </summary>
        </member>
        <member name="M:antlr.ASTFactory.#ctor(System.String)">
            <summary>
            Constructs an <c>ASTFactory</c> and use the specified AST node type
            as the default.
            </summary>
            <param name="nodeTypeName">
            	Name of default AST node type for this factory.
            </param>
        </member>
        <member name="F:antlr.ASTFactory.defaultASTNodeTypeObject_">
            <summary>
            Stores the Type of the default AST node class to be used during tree construction.
            </summary>
        </member>
        <member name="F:antlr.ASTFactory.heteroList_">
            <summary>
            Stores the mapping between custom AST NodeTypes and their NodeTypeName/NodeTypeClass
            and ASTNodeCreator.
            </summary>
        </member>
        <member name="F:antlr.ASTFactory.typename2creator_">
            <summary>
            Stores the mapping between AST node typenames and their token ID.
            </summary>
        </member>
        <member name="M:antlr.ASTFactory.setTokenTypeASTNodeType(System.Int32,System.String)">
            <summary>
            Specify an "override" for the <see cref="T:antlr.collections.AST"/> type created for
            the specified Token type.
            </summary>
            <remarks>
            This method is useful for situations that ANTLR cannot oridinarily deal 
            with (i.e., when you  create a token based upon a nonliteral token symbol 
            like #[LT(1)].  This is a runtime value and ANTLR cannot determine the token 
            type (and hence the AST) statically.
            </remarks>
            <param name="tokenType">Token type to override.</param>
            <param name="NodeTypeName">
            	Fully qualified AST typename (or null to specify 
            	the factory's default AST type).
            </param>
        </member>
        <member name="M:antlr.ASTFactory.registerFactory(System.Int32,System.String)">
            <summary>
            Register an AST Node Type for a given Token type ID.
            </summary>
            <param name="NodeType">The Token type ID.</param>
            <param name="NodeTypeName">The AST Node Type to register.</param>
        </member>
        <member name="M:antlr.ASTFactory.setTokenTypeASTNodeCreator(System.Int32,antlr.ASTNodeCreator)">
            <summary>
            Register an ASTNodeCreator for a given Token type ID.
            </summary>
            <param name="NodeType">The Token type ID.</param>
            <param name="creator">The creater to register.</param>
        </member>
        <member name="M:antlr.ASTFactory.setASTNodeCreator(antlr.ASTNodeCreator)">
            <summary>
            Register an ASTNodeCreator to be used for creating node by default.
            </summary>
            <param name="creator">The ASTNodeCreator.</param>
        </member>
        <member name="M:antlr.ASTFactory.setMaxNodeType(System.Int32)">
            <summary>
            Pre-expands the internal list of TokenTypeID-to-ASTNodeType mappings
            to the specified size.
            This is primarily a convenience method that can be used to prevent 
            unnecessary and costly re-org of the mappings list.
            </summary>
            <param name="NodeType">Maximum Token Type ID.</param>
        </member>
        <member name="M:antlr.ASTFactory.addASTChild(antlr.ASTPair,antlr.collections.AST)">
            <summary>
            Add a child to the current AST
            </summary>
            <param name="currentAST">The AST to add a child to</param>
            <param name="child">The child AST to be added</param>
        </member>
        <member name="M:antlr.ASTFactory.create">
            <summary>
            Creates a new uninitialized AST node. Since a specific AST Node Type
            wasn't indicated, the new AST node is created using the current default
            AST Node type - <see cref="F:antlr.ASTFactory.defaultASTNodeTypeObject_"/>
            </summary>
            <returns>An uninitialized AST node object.</returns>
        </member>
        <member name="M:antlr.ASTFactory.create(System.Int32)">
            <summary>
            Creates and initializes a new AST node using the specified Token Type ID.
            The <see cref="T:System.Type"/> used for creating this new AST node is 
            determined by the following:
            <list type="bullet">
            	<item>the current TokenTypeID-to-ASTNodeType mapping (if any) or,</item>
            	<item>the <see cref="F:antlr.ASTFactory.defaultASTNodeTypeObject_"/> otherwise</item>
            </list>
            </summary>
            <param name="type">Token type ID to be used to create new AST Node.</param>
            <returns>An initialized AST node object.</returns>
        </member>
        <member name="M:antlr.ASTFactory.create(System.Int32,System.String)">
            <summary>
            Creates and initializes a new AST node using the specified Token Type ID.
            The <see cref="T:System.Type"/> used for creating this new AST node is 
            determined by the following:
            <list type="bullet">
            	<item>the current TokenTypeID-to-ASTNodeType mapping (if any) or,</item>
            	<item>the <see cref="F:antlr.ASTFactory.defaultASTNodeTypeObject_"/> otherwise</item>
            </list>
            </summary>
            <param name="type">Token type ID to be used to create new AST Node.</param>
            <param name="txt">Text for initializing the new AST Node.</param>
            <returns>An initialized AST node object.</returns>
        </member>
        <member name="M:antlr.ASTFactory.create(System.Int32,System.String,System.String)">
            <summary>
            Creates a new AST node using the specified AST Node Type name. Once created,
            the new AST node is initialized with the specified Token type ID and string.
            The <see cref="T:System.Type"/> used for creating this new AST node is 
            determined solely by <c>ASTNodeTypeName</c>.
            The AST Node type must have a default/parameterless constructor.
            </summary>
            <param name="type">Token type ID to be used to create new AST Node.</param>
            <param name="txt">Text for initializing the new AST Node.</param>
            <param name="ASTNodeTypeName">Fully qualified name of the Type to be used for creating the new AST Node.</param>
            <returns>An initialized AST node object.</returns>
        </member>
        <member name="M:antlr.ASTFactory.create(antlr.IToken,System.String)">
            <summary>
            Creates a new AST node using the specified AST Node Type name.
            </summary>
            <param name="tok">Token instance to be used to initialize the new AST Node.</param>
            <param name="ASTNodeTypeName">
            	Fully qualified name of the Type to be used for creating the new AST Node.
            </param>
            <returns>A newly created and initialized AST node object.</returns>
            <remarks>
            Once created, the new AST node is initialized with the specified Token 
            instance. The <see cref="T:System.Type"/> used for creating this new AST 
            node is  determined solely by <c>ASTNodeTypeName</c>.
            <para>The AST Node type must have a default/parameterless constructor.</para>
            </remarks>
        </member>
        <member name="M:antlr.ASTFactory.create(antlr.collections.AST)">
            <summary>
            Creates and initializes a new AST node using the specified AST Node instance.
            the new AST node is initialized with the specified Token type ID and string.
            The <see cref="T:System.Type"/> used for creating this new AST node is 
            determined solely by <c>aNode</c>.
            The AST Node type must have a default/parameterless constructor.
            </summary>
            <param name="aNode">AST Node instance to be used for creating the new AST Node.</param>
            <returns>An initialized AST node object.</returns>
        </member>
        <member name="M:antlr.ASTFactory.create(antlr.IToken)">
            <summary>
            Creates and initializes a new AST node using the specified Token instance.
            The <see cref="T:System.Type"/> used for creating this new AST node is 
            determined by the following:
            <list type="bullet">
            	<item>the current TokenTypeID-to-ASTNodeType mapping (if any) or,</item>
            	<item>the <see cref="F:antlr.ASTFactory.defaultASTNodeTypeObject_"/> otherwise</item>
            </list>
            </summary>
            <param name="tok">Token instance to be used to create new AST Node.</param>
            <returns>An initialized AST node object.</returns>
        </member>
        <member name="M:antlr.ASTFactory.dup(antlr.collections.AST)">
            <summary>
            Returns a copy of the specified AST Node instance. The copy is obtained by
            using the <see cref="T:System.ICloneable"/> method Clone().
            </summary>
            <param name="t">AST Node to copy.</param>
            <returns>An AST Node (or null if <c>t</c> is null).</returns>
        </member>
        <member name="M:antlr.ASTFactory.dupList(antlr.collections.AST)">
            <summary>
            Duplicate AST Node tree rooted at specified AST node and all of it's siblings.
            </summary>
            <param name="t">Root of AST Node tree.</param>
            <returns>Root node of new AST Node tree (or null if <c>t</c> is null).</returns>
        </member>
        <member name="M:antlr.ASTFactory.dupTree(antlr.collections.AST)">
            <summary>
            Duplicate AST Node tree rooted at specified AST node. Ignore it's siblings.
            </summary>
            <param name="t">Root of AST Node tree.</param>
            <returns>Root node of new AST Node tree (or null if <c>t</c> is null).</returns>
        </member>
        <member name="M:antlr.ASTFactory.make(antlr.collections.AST[])">
            <summary>
            Make a tree from a list of nodes.  The first element in the
            array is the root.  If the root is null, then the tree is
            a simple list not a tree.  Handles null children nodes correctly.
            For example, build(a, b, null, c) yields tree (a b c).  build(null,a,b)
            yields tree (nil a b).
            </summary>
            <param name="nodes">List of Nodes.</param>
            <returns>AST Node tree.</returns>
        </member>
        <member name="M:antlr.ASTFactory.make(antlr.collections.impl.ASTArray)">
            <summary>
            Make a tree from a list of nodes, where the nodes are contained
            in an ASTArray object.
            </summary>
            <param name="nodes">List of Nodes.</param>
            <returns>AST Node tree.</returns>
        </member>
        <member name="M:antlr.ASTFactory.makeASTRoot(antlr.ASTPair,antlr.collections.AST)">
            <summary>
            Make an AST the root of current AST.
            </summary>
            <param name="currentAST"></param>
            <param name="root"></param>
        </member>
        <member name="M:antlr.ASTFactory.setASTNodeType(System.String)">
            <summary>
            Sets the global default AST Node Type for this ASTFactory instance.
            This method also attempts to load the <see cref="T:System.Type"/> instance
            for the specified typename.
            </summary>
            <param name="t">Fully qualified AST Node Type name.</param>
        </member>
        <member name="M:antlr.ASTFactory.error(System.String)">
            <summary>
            To change where error messages go, can subclass/override this method
            and then setASTFactory in Parser and TreeParser.  This method removes
            a prior dependency on class antlr.Tool.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:antlr.ASTNodeCreator">
            <exclude/>
             <summary>
             A creator of AST node instances.
             </summary>
             <remarks>
             <para>
             This class and it's sub-classes exists primarily as an optimization
             of the reflection-based mechanism(s) previously used exclusively to 
             create instances of AST node objects.
             </para>
             <para>
             Parsers and TreeParsers already use the ASTFactory class in ANTLR whenever
             they need to create an AST node objeect. What this class does is to support
             performant extensibility of the basic ASTFactory. The ASTFactory can now be
             extnded as run-time to support more new AST node types without using needing
             to use reflection.
             </para>
             </remarks>
        </member>
        <member name="M:antlr.ASTNodeCreator.Create">
            <summary>
            Constructs an <see cref="T:antlr.collections.AST"/> instance.
            </summary>
        </member>
        <member name="P:antlr.ASTNodeCreator.ASTNodeTypeName">
            <summary>
            Returns the fully qualified name of the AST type that this
            class creates.
            </summary>
        </member>
        <member name="T:antlr.ASTNULLType">
            <exclude/>
        </member>
        <member name="T:antlr.collections.AST">
            <exclude/>
             <summary>
             Minimal AST node interface used by ANTLR AST generation and tree-walker.
             </summary>
        </member>
        <member name="M:antlr.collections.AST.addChild(antlr.collections.AST)">
            <summary>
            Add a (rightmost) child to this node
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:antlr.collections.AST.getFirstChild">
            <summary>
            Get the first child of this node; null if no children
            </summary>
        </member>
        <member name="M:antlr.collections.AST.getNextSibling">
            <summary>
            Get	the next sibling in line after this one
            </summary>
        </member>
        <member name="M:antlr.collections.AST.getText">
            <summary>
            Get the token text for this node
            </summary>
            <returns></returns>
        </member>
        <member name="M:antlr.collections.AST.getNumberOfChildren">
            <summary>
            Get number of children of this node; if leaf, returns 0
            </summary>
            <returns>Number of children</returns>
        </member>
        <member name="M:antlr.collections.AST.setFirstChild(antlr.collections.AST)">
            <summary>
            Set the first child of a node.
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:antlr.collections.AST.setNextSibling(antlr.collections.AST)">
            <summary>
            Set the next sibling after this one.
            </summary>
            <param name="n"></param>
        </member>
        <member name="M:antlr.collections.AST.setText(System.String)">
            <summary>
            Set the token text for this node
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:antlr.collections.AST.setType(System.Int32)">
            <summary>
            Set the token type for this node
            </summary>
            <param name="ttype"></param>
        </member>
        <member name="P:antlr.collections.AST.Type">
            <summary>
            Get the token type for this node
            </summary>
        </member>
        <member name="T:antlr.ASTPair">
            <exclude/>
        </member>
        <member name="T:antlr.ASTVisitor">
            <exclude/>
             <summary>
             Summary description for ASTVisitor.
             </summary>
        </member>
        <member name="T:antlr.BaseAST">
            <exclude/>
        </member>
        <member name="M:antlr.BaseAST.getNumberOfChildren">
            <summary>
            Get number of children of this node; if leaf, returns 0
            </summary>
            <returns>Number of children</returns>
        </member>
        <member name="T:antlr.ByteBuffer">
            <exclude/>
        </member>
        <member name="T:antlr.InputBuffer">
            <exclude/>
             <summary>
             Represents a stream of characters fed to the lexer from that can be rewound 
             via mark()/rewind() methods.
             </summary>
             <remarks>
             <para>
             A dynamic array is used to buffer up all the input characters.  Normally,
             "k" characters are stored in the buffer.  More characters may be stored 
             during guess mode (testing syntactic predicate), or when LT(i>k) is referenced.
             Consumption of characters is deferred.  In other words, reading the next
             character is not done by conume(), but deferred until needed by LA or LT.
             </para>
             </remarks>
        </member>
        <member name="F:antlr.ByteBuffer.buf">
            <summary>
            Small buffer used to avoid reading individual chars
            </summary>
        </member>
        <member name="T:antlr.CharBuffer">
            <exclude/>
        </member>
        <member name="F:antlr.CharBuffer.buf">
            <summary>
            Small buffer used to avoid reading individual chars
            </summary>
        </member>
        <member name="T:antlr.CharQueue">
            <exclude/>
        </member>
        <member name="T:antlr.CharStreamException">
            <exclude/>
        </member>
        <member name="T:antlr.CharStreamIOException">
            <exclude/>
        </member>
        <member name="T:antlr.CommonAST">
            <exclude/>
        </member>
        <member name="M:antlr.CommonAST.CommonASTCreator.Create">
            <summary>
            Constructs a <see cref="T:antlr.collections.AST"/> instance.
            </summary>
        </member>
        <member name="P:antlr.CommonAST.CommonASTCreator.ASTNodeTypeName">
            <summary>
            Returns the fully qualified name of the AST type that this
            class creates.
            </summary>
        </member>
        <member name="T:antlr.CommonASTWithHiddenTokens">
            <exclude/>
        </member>
        <member name="M:antlr.CommonASTWithHiddenTokens.CommonASTWithHiddenTokensCreator.Create">
            <summary>
            Constructs a <see cref="T:antlr.collections.AST"/> instance.
            </summary>
        </member>
        <member name="P:antlr.CommonASTWithHiddenTokens.CommonASTWithHiddenTokensCreator.ASTNodeTypeName">
            <summary>
            Returns the fully qualified name of the AST type that this
            class creates.
            </summary>
        </member>
        <member name="T:antlr.CommonHiddenStreamToken">
            <exclude/>
        </member>
        <member name="T:antlr.CommonToken">
            <exclude/>
        </member>
        <member name="T:antlr.Token">
            <exclude/>
        </member>
        <member name="T:antlr.IToken">
            <exclude/>
             <summary>
             A token is minimally a token type.  Subclasses can add the text matched
             for the token and line info. 
             </summary>
        </member>
        <member name="M:antlr.CommonToken.CommonTokenCreator.Create">
            <summary>
            Constructs a <see cref="T:antlr.Token"/> instance.
            </summary>
        </member>
        <member name="P:antlr.CommonToken.CommonTokenCreator.TokenTypeName">
            <summary>
            Returns the fully qualified name of the Token type that this
            class creates.
            </summary>
        </member>
        <member name="T:antlr.IHiddenStreamToken">
            <exclude/>
        </member>
        <member name="M:antlr.CommonHiddenStreamToken.CommonHiddenStreamTokenCreator.Create">
            <summary>
            Constructs a <see cref="T:antlr.Token"/> instance.
            </summary>
        </member>
        <member name="P:antlr.CommonHiddenStreamToken.CommonHiddenStreamTokenCreator.TokenTypeName">
            <summary>
            Returns the fully qualified name of the Token type that this
            class creates.
            </summary>
        </member>
        <member name="T:antlr.DefaultFileLineFormatter">
            <exclude/>
        </member>
        <member name="T:antlr.FileLineFormatter">
            <exclude/>
        </member>
        <member name="T:antlr.DumpASTVisitor">
            <exclude/>
             <summary>
             Summary description for DumpASTVisitor.
             </summary>
            Simple class to dump the contents of an AST to the output 
        </member>
        <member name="T:antlr.LexerSharedInputState">
            <exclude/>
        </member>
        <member name="T:antlr.MismatchedCharException">
            <exclude/>
        </member>
        <member name="T:antlr.RecognitionException">
            <exclude/>
        </member>
        <member name="M:antlr.MismatchedCharException.appendCharName(System.Text.StringBuilder,System.Int32)">
            <summary>
            Append a char to the msg buffer.  If special, then show escaped version
            </summary>
            <param name="sb">Message buffer</param>
            <param name="c">Char to append</param>
        </member>
        <member name="T:antlr.MismatchedTokenException">
            <exclude/>
        </member>
        <member name="T:antlr.NoViableAltException">
            <exclude/>
        </member>
        <member name="T:antlr.NoViableAltForCharException">
            <exclude/>
        </member>
        <member name="T:antlr.ParserSharedInputState">
            <exclude/>
        </member>
        <member name="T:antlr.ParseTree">
            <exclude/>
        </member>
        <member name="M:antlr.ParseTree.getLeftmostDerivationStep(System.Int32)">
            <summary>
            Walk parse tree and return requested number of derivation steps.
            If steps less-than 0, return node text.  If steps equals 1, return derivation
            string at step.
            </summary>
            <param name="step">derivation steps</param>
            <returns></returns>
        </member>
        <member name="M:antlr.ParseTree.getLeftmostDerivation(System.Text.StringBuilder,System.Int32)">
            <summary>
            Get derivation and return how many you did (less than requested for
            subtree roots.
            </summary>
            <param name="buf">string buffer</param>
            <param name="step">derivation steps</param>
            <returns></returns>
        </member>
        <member name="T:antlr.ParseTreeRule">
            <exclude/>
        </member>
        <member name="M:antlr.ParseTreeRule.getLeftmostDerivation(System.Text.StringBuilder,System.Int32)">
            <summary>
            Do a step-first walk, building up a buffer of tokens until
            you've reached a particular step and print out any rule subroots
            insteads of descending.
            </summary>
            <param name="buf">derivation buffer</param>
            <param name="step">derivation steps</param>
            <returns></returns>
        </member>
        <member name="T:antlr.ParseTreeToken">
            <exclude/>
        </member>
        <member name="T:antlr.SemanticException">
            <exclude/>
        </member>
        <member name="T:antlr.StringUtils">
            <exclude/>
        </member>
        <member name="T:antlr.TokenBuffer">
            <exclude/>
        </member>
        <member name="T:antlr.TokenQueue">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamBasicFilter">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamException">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamHiddenTokenFilter">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamIOException">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamRecognitionException">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamRetryException">
            <exclude/>
        </member>
        <member name="T:antlr.TokenStreamRewriteEngine">
            <exclude/>
             <summary>
             This token stream tracks the *entire* token stream coming from
             a lexer, but does not pass on the whitespace (or whatever else
             you want to discard) to the parser.
             </summary>
             <remarks>
             <para>
             This class can then be asked for the ith token in the input stream.
             Useful for dumping out the input stream exactly after doing some
             augmentation or other manipulations.  Tokens are index from 0..n-1
             </para>
             <para>
             You can insert stuff, replace, and delete chunks.  Note that the
             operations are done lazily--only if you convert the buffer to a
             string.  This is very efficient because you are not moving data around
             all the time.  As the buffer of tokens is converted to strings, the
             toString() method(s) check to see if there is an operation at the
             current index.  If so, the operation is done and then normal string
             rendering continues on the buffer.  This is like having multiple Turing
             machine instruction streams (programs) operating on a single input tape. :)
             </para>
             <para>
             Since the operations are done lazily at toString-time, operations do not
             screw up the token index values.  That is, an insert operation at token
             index i does not change the index values for tokens i+1..n-1.
             </para>
             <para>
             Because operations never actually alter the buffer, you may always get
             the original token stream back without undoing anything.  Since
             the instructions are queued up, you can easily simulate transactions and
             roll back any changes if there is an error just by removing instructions.
             For example,
             </para>
             <example>For example:
             <code>
             TokenStreamRewriteEngine rewriteEngine = new TokenStreamRewriteEngine(lexer);
             JavaRecognizer           parser        = new JavaRecognizer(rewriteEngine);
             ...
             rewriteEngine.insertAfter("pass1", t, "foobar");}
             rewriteEngine.insertAfter("pass2", u, "start");}
             System.Console.Out.WriteLine(rewriteEngine.ToString("pass1"));
             System.Console.Out.WriteLine(rewriteEngine.ToString("pass2"));
             </code>
             </example>
             <para>
             You can also have multiple "instruction streams" and get multiple
             rewrites from a single pass over the input.  Just name the instruction
             streams and use that name again when printing the buffer.  This could be
             useful for generating a C file and also its header file--all from the
             same buffer.
             </para>
             <para>
             If you don't use named rewrite streams, a "default" stream is used.
             </para>
             <para>
             Terence Parr, parrt@cs.usfca.edu
             University of San Francisco
             February 2004
             </para>
             </remarks>
        </member>
        <member name="F:antlr.TokenStreamRewriteEngine.tokens">
            <summary>
            Track the incoming list of tokens
            </summary>
        </member>
        <member name="F:antlr.TokenStreamRewriteEngine.programs">
            <summary>
            You may have multiple, named streams of rewrite operations.
            I'm calling these things "programs."
            Maps string (name) -> rewrite (List)
            </summary>
        </member>
        <member name="F:antlr.TokenStreamRewriteEngine.lastRewriteTokenIndexes">
            <summary>
            Map string (program name) -> Integer index
            </summary>
        </member>
        <member name="F:antlr.TokenStreamRewriteEngine.index">
            <summary>
            track index of tokens
            </summary>
        </member>
        <member name="F:antlr.TokenStreamRewriteEngine.stream">
            <summary>
            Who do we suck tokens from?
            </summary>
        </member>
        <member name="F:antlr.TokenStreamRewriteEngine.discardMask">
            <summary>
            Which (whitespace) token(s) to throw out
            </summary>
        </member>
        <member name="M:antlr.TokenStreamRewriteEngine.rollback(System.String,System.Int32)">
            <summary>
            Rollback the instruction stream for a program so that
            the indicated instruction (via instructionIndex) is no
            longer in the stream.
            </summary>
            <remarks>
            UNTESTED!
            </remarks>
            <param name="programName"></param>
            <param name="instructionIndex"></param>
        </member>
        <member name="M:antlr.TokenStreamRewriteEngine.deleteProgram(System.String)">
            <summary>
            Reset the program so that no instructions exist
            </summary>
            <param name="programName"></param>
        </member>
        <member name="M:antlr.TokenStreamRewriteEngine.addToSortedRewriteList(antlr.TokenStreamRewriteEngine.RewriteOperation)">
            <summary>
            If op.index > lastRewriteTokenIndexes, just add to the end.
            Otherwise, do linear
            </summary>
            <param name="op"></param>
        </member>
        <member name="M:antlr.TokenStreamRewriteEngine.RewriteOperation.execute(System.Text.StringBuilder)">
            <summary>
            Execute the rewrite operation by possibly adding to the buffer.
            </summary>
            <param name="buf">rewrite buffer</param>
            <returns>The index of the next token to operate on.</returns>
        </member>
        <member name="T:antlr.TokenStreamSelector">
            <exclude/>
        </member>
        <member name="T:antlr.TokenWithIndex">
            <exclude/>
             <summary>
             This token tracks it's own index 0..n-1 relative to the beginning 
             of the stream. It is designed to work with 
             <see cref="T:antlr.TokenStreamRewriteEngine"/> in TokenStreamRewriteEngine.cs
             </summary> 
        </member>
        <member name="F:antlr.TokenWithIndex.index">
            <summary>
            Index into token array indicating position in input stream
            </summary>
        </member>
        <member name="T:antlr.TreeParser">
            <exclude/>
        </member>
        <member name="M:antlr.TreeParser.panic">
            <summary>
            @deprecated as of 2.7.2. This method calls System.exit() and writes
            directly to stderr, which is usually not appropriate when
            a parser is embedded into a larger application. Since the method is
            <code>static</code>, it cannot be overridden to avoid these problems.
            ANTLR no longer uses this method internally or in generated code.
            </summary>
            
        </member>
        <member name="T:antlr.TreeParserSharedInputState">
            <exclude/>
        </member>
        <member name="T:antlr.collections.impl.ASTArray">
            <exclude/>
        </member>
        <member name="T:antlr.collections.impl.BitSet">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ANTLREventArgs">
            <exclude/>
        </member>
        <member name="F:antlr.debug.ANTLREventArgs.type_">
            <summary>
            Event type.
            </summary>
        </member>
        <member name="T:antlr.debug.DebuggingCharScanner">
            <exclude/>
        </member>
        <member name="T:antlr.debug.DebuggingParser">
            <exclude/>
             <summary> This type was created in VisualAge.
             </summary>
        </member>
        <member name="M:antlr.debug.DebuggingCharScanner.reportError(antlr.MismatchedCharException)">
            <summary>Report exception errors caught in nextToken() 
            </summary>
        </member>
        <member name="M:antlr.debug.DebuggingCharScanner.reportError(System.String)">
            <summary>Parser error-reporting function can be overridden in subclass 
            </summary>
        </member>
        <member name="M:antlr.debug.DebuggingCharScanner.reportWarning(System.String)">
            <summary>Parser warning-reporting function can be overridden in subclass 
            </summary>
        </member>
        <member name="T:antlr.debug.DebuggingInputBuffer">
            <exclude/>
        </member>
        <member name="T:antlr.debug.GuessingEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.GuessingEventArgs.setValues(System.Int32,System.Int32)">
            <exclude/>
             <summary>This should NOT be called from anyone other than ParserEventSupport! 
             </summary>
        </member>
        <member name="T:antlr.debug.InputBufferEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.InputBufferEventArgs.setValues(System.Int32,System.Char,System.Int32)">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:antlr.debug.InputBufferEventSupport">
            <exclude/>
        </member>
        <member name="T:antlr.debug.InputBufferListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.Listener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.InputBufferListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.InputBufferListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.InputBufferListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.InputBufferListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.InputBufferListenerBase.inputBufferConsume(System.Object,antlr.debug.InputBufferEventArgs)">
            <summary>
            Handle the "CharConsumed" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.InputBufferListenerBase.inputBufferLA(System.Object,antlr.debug.InputBufferEventArgs)">
            <summary>
            Handle the "CharLA" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.InputBufferListenerBase.inputBufferMark(System.Object,antlr.debug.InputBufferEventArgs)">
            <summary>
            Handle the "Mark" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.InputBufferListenerBase.inputBufferRewind(System.Object,antlr.debug.InputBufferEventArgs)">
            <summary>
            Handle the "Rewind" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.InputBufferReporter">
            <exclude/>
        </member>
        <member name="M:antlr.debug.InputBufferReporter.inputBufferConsume(System.Object,antlr.debug.InputBufferEventArgs)">
            <summary> charBufferConsume method comment.
            </summary>
        </member>
        <member name="M:antlr.debug.InputBufferReporter.inputBufferLA(System.Object,antlr.debug.InputBufferEventArgs)">
            <summary> charBufferLA method comment.
            </summary>
        </member>
        <member name="T:antlr.debug.LLkDebuggingParser">
            <exclude/>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.consume">
            <summary>Get another token object from the token stream 
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.LA(System.Int32)">
            <summary>Return the token type of the ith token of lookahead where i=1
            is the current token being examined by the parser (i.e., it
            has not been matched yet).
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.match(System.Int32)">
            <summary>Make sure current lookahead symbol matches token type <tt>t</tt>.
            Throw an exception upon mismatch, which is catch by either the
            error handler or by the syntactic predicate.
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.match(antlr.collections.impl.BitSet)">
            <summary>Make sure current lookahead symbol matches the given set
            Throw an exception upon mismatch, which is catch by either the
            error handler or by the syntactic predicate.
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.reportError(antlr.RecognitionException)">
            <summary>Parser error-reporting function can be overridden in subclass 
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.reportError(System.String)">
            <summary>Parser error-reporting function can be overridden in subclass 
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.reportWarning(System.String)">
            <summary>Parser warning-reporting function can be overridden in subclass 
            </summary>
        </member>
        <member name="M:antlr.debug.LLkDebuggingParser.setupDebugging(antlr.TokenStream,antlr.TokenBuffer)">
            <summary>User can override to do their own debugging 
            </summary>
        </member>
        <member name="T:antlr.debug.MessageEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.MessageEventArgs.setValues(System.Int32,System.String)">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:antlr.debug.MessageListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.MessageListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.MessageListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.MessageListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.MessageListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.MessageListenerBase.reportError(System.Object,antlr.debug.MessageEventArgs)">
            <summary>
            Handle the "ReportError" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.MessageListenerBase.reportWarning(System.Object,antlr.debug.MessageEventArgs)">
            <summary>
            Handle the "ReportWarning" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.NewLineEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.NewLineEventArgs.ToString">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:antlr.debug.NewLineListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ParserController">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ParserListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.SemanticPredicateListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ParserMatchListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ParserTokenListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.TraceListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.SyntacticPredicateListener">
            <exclude/>
        </member>
        <member name="T:antlr.debug.MessageEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.NewLineEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.MatchEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.TokenEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.SemanticPredicateEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.SyntacticPredicateEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.TraceEventHandler">
            <exclude/>
        </member>
        <member name="T:antlr.debug.ParserEventSupport">
            <exclude/>
             <summary>A class to assist in firing parser events
             NOTE: I intentionally _did_not_ synchronize the event firing and
             add/remove listener methods.  This is because the add/remove should
             _only_ be called by the parser at its start/end, and the _same_thread_
             should be performing the parsing.  This should help performance a tad...
             </summary>
        </member>
        <member name="T:antlr.debug.ParserListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.ParserListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.ParserListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.enterRule(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "EnterRule" event
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.exitRule(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "ExitRule" event
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.parserConsume(System.Object,antlr.debug.TokenEventArgs)">
            <summary>
            Handle the "Consume" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.parserLA(System.Object,antlr.debug.TokenEventArgs)">
            <summary>
            Handle the "ParserLA" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.parserMatch(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "Match" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.parserMatchNot(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "MatchNot" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.parserMismatch(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "MisMatch" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.parserMismatchNot(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "MisMatchNot" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.reportError(System.Object,antlr.debug.MessageEventArgs)">
            <summary>
            Handle the "ReportError" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.reportWarning(System.Object,antlr.debug.MessageEventArgs)">
            <summary>
            Handle the "ReportWarning" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.semanticPredicateEvaluated(System.Object,antlr.debug.SemanticPredicateEventArgs)">
            <summary>
            Handle the "SemPreEvaluated" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.syntacticPredicateFailed(System.Object,antlr.debug.SyntacticPredicateEventArgs)">
            <summary>
            Handle the "SynPredFailed" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.syntacticPredicateStarted(System.Object,antlr.debug.SyntacticPredicateEventArgs)">
            <summary>
            Handle the "SynPredStarted" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserListenerBase.syntacticPredicateSucceeded(System.Object,antlr.debug.SyntacticPredicateEventArgs)">
            <summary>
            Handle the "SynPredSucceeded" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.MatchEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.MatchEventArgs.setValues(System.Int32,System.Int32,System.Object,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:antlr.debug.ParserMatchListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.ParserMatchListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.ParserMatchListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.ParserMatchListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserMatchListenerBase.parserMatch(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "Match" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserMatchListenerBase.parserMatchNot(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "MatchNot" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserMatchListenerBase.parserMismatch(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "MisMatch" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserMatchListenerBase.parserMismatchNot(System.Object,antlr.debug.MatchEventArgs)">
            <summary>
            Handle the "MisMatchNot" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.ParserReporter">
            <exclude/>
        </member>
        <member name="T:antlr.debug.Tracer">
            <exclude/>
        </member>
        <member name="T:antlr.debug.TraceListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.TraceListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.TraceListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.TraceListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.TraceListenerBase.enterRule(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "EnterRule" event
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.TraceListenerBase.exitRule(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "ExitRule" event
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.TokenEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.TokenEventArgs.setValues(System.Int32,System.Int32,System.Int32)">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:antlr.debug.ParserTokenListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.ParserTokenListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.ParserTokenListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.ParserTokenListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserTokenListenerBase.parserConsume(System.Object,antlr.debug.TokenEventArgs)">
            <summary>
            Handle the "Consume" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.ParserTokenListenerBase.parserLA(System.Object,antlr.debug.TokenEventArgs)">
            <summary>
            Handle the "ParserLA" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.ParseTreeDebugParser">
            <exclude/>
             <summary>
             Specifies the behaviour required (i.e. parser modifications) 
             specifically to support parse tree debugging and derivation.
             </summary>
             <remarks>
             <para>
             Override the standard matching and rule entry/exit routines
             to build parse trees.  This class is useful for 2.7.3 where
             you can specify a superclass like
             </para>
             <para>
             class TinyCParser extends Parser(ParseTreeDebugParser);
             </para>
             </remarks>
        </member>
        <member name="F:antlr.debug.ParseTreeDebugParser.currentParseTreeRoot">
            <summary>
            Each new rule invocation must have it's own subtree. Tokens are
            added to the current root so we must have a stack of subtree roots.
            </summary>
        </member>
        <member name="F:antlr.debug.ParseTreeDebugParser.mostRecentParseTreeRoot">
            <summary>
            Track most recently created parse subtree so that when parsing
            is finished, we can get to the root.
            </summary>
        </member>
        <member name="F:antlr.debug.ParseTreeDebugParser.numberOfDerivationSteps">
            <summary>
            For every rule replacement with a production, we bump up count.
            </summary>
        </member>
        <member name="M:antlr.debug.ParseTreeDebugParser.addCurrentTokenToParseTree">
            <summary>
            Adds LT(1) to the current parse subtree.
            </summary>
            <remarks>
            <para>
            Note that the match() routines add the node before checking for 
            correct match.  This means that, upon mismatched token, there 
            will a token node in the tree corresponding to where that token 
            was expected.  For no viable alternative errors, no node will 
            be in the tree as nothing was matched() (the lookahead failed 
            to predict an alternative).
            </para>
            </remarks>
        </member>
        <member name="M:antlr.debug.ParseTreeDebugParser.traceIn(System.String)">
            <summary>
            Create a rule node, add to current tree, and make it current root
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:antlr.debug.ParseTreeDebugParser.traceOut(System.String)">
            <summary>
            Pop current root; back to adding to old root
            </summary>
            <param name="s"></param>
        </member>
        <member name="T:antlr.debug.ScannerEventSupport">
            <exclude/>
             <summary>A class to assist in firing parser events
             NOTE: I intentionally _did_not_ synchronize the event firing and
             add/remove listener methods.  This is because the add/remove should
             _only_ be called by the parser at its start/end, and the _same_thread_
             should be performing the parsing.  This should help performance a tad...
             </summary>
        </member>
        <member name="T:antlr.debug.SemanticPredicateEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.SemanticPredicateEventArgs.setValues(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:antlr.debug.SemanticPredicateListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.SemanticPredicateListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.SemanticPredicateListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.SemanticPredicateListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.SemanticPredicateListenerBase.semanticPredicateEvaluated(System.Object,antlr.debug.SemanticPredicateEventArgs)">
            <summary>
            Handle the "SemPreEvaluated" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.SyntacticPredicateEventArgs">
            <exclude/>
        </member>
        <member name="T:antlr.debug.SyntacticPredicateListenerBase">
            <exclude/>
             <summary>
             Provides an abstract base for implementing <see cref="T:antlr.debug.SyntacticPredicateListener"/> subclasses.
             </summary>
             <remarks>
            		<param>
            		This abstract class is provided to make it easier to create <see cref="T:antlr.debug.SyntacticPredicateListener"/>s. 
            		You should extend this base class rather than creating your own.
            		</param>
             </remarks>
        </member>
        <member name="M:antlr.debug.SyntacticPredicateListenerBase.doneParsing(System.Object,antlr.debug.TraceEventArgs)">
            <summary>
            Handle the "Done" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.SyntacticPredicateListenerBase.syntacticPredicateFailed(System.Object,antlr.debug.SyntacticPredicateEventArgs)">
            <summary>
            Handle the "SynPredFailed" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.SyntacticPredicateListenerBase.syntacticPredicateStarted(System.Object,antlr.debug.SyntacticPredicateEventArgs)">
            <summary>
            Handle the "SynPredStarted" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="M:antlr.debug.SyntacticPredicateListenerBase.syntacticPredicateSucceeded(System.Object,antlr.debug.SyntacticPredicateEventArgs)">
            <summary>
            Handle the "SynPredSucceeded" event.
            </summary>
            <param name="source">Event source object</param>
            <param name="e">Event data object</param>
        </member>
        <member name="T:antlr.debug.TraceEventArgs">
            <exclude/>
        </member>
        <member name="M:antlr.debug.TraceEventArgs.setValues(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>This should NOT be called from anyone other than ParserEventSupport! 
            </summary>
        </member>
        <member name="T:Endeca.Navigation.Charting.Cell">
            <summary>
            Represents a value in a <see cref="T:Endeca.Navigation.Charting.Grid"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Cell.#ctor(System.String,System.Collections.ArrayList)">
            <summary>
            Construct a new Cell with the specified value and labels.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Cell.GetLabel(System.Int32)">
            <summary>
            Returns the specified label.
            </summary>
            <param name="axis">
            The axis that references the label.
            </param>
            <returns>
            The specified label (a <see cref="T:Endeca.Navigation.Charting.Label"/> object).
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Cell.ToString">
            <summary> 
            Returns a user-readable string representation of the value.
            </summary>
            <returns>
            The value as a String.
            </returns>
            <remarks>
            This method is equivalent to the <see cref="P:Endeca.Navigation.Charting.Cell.Value"/> property.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Charting.Cell.Labels">
            <summary>
            Returns the labels.
            </summary>
            <value>
            A list containg grid labels (<see cref="T:Endeca.Navigation.Charting.Label"/> objects).
            </value>
        </member>
        <member name="P:Endeca.Navigation.Charting.Cell.Value">
            <summary>
            Returns the value.
            </summary>
            <value>
            The value as a String.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Charting.CordaChartBuilder">
            <summary>
            A helper class to build Corda PopChart charts from Endeca data.
            It builds the Corda PCXML string that can be used to create the chart.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.CordaChartBuilder.#ctor(System.String,Endeca.Navigation.Charting.Grid)">
            <summary>
            Constructs a new <see cref="T:Endeca.Navigation.Charting.CordaChartBuilder"/> with the given name and data.
            </summary>
            <param name="graphName">
            The name of the graph object. Usually the name will be "graph".
            </param>
            <param name="grid">
            The data to display (a <see cref="T:Endeca.Navigation.Charting.Grid"/> object). 
            The <see cref="T:Endeca.Navigation.Charting.Grid"/> may have either one axis 
            (for a standard 2-D chart) or 2 axes (for a 3-D cross-tab chart).
            </param>
        </member>
        <member name="M:Endeca.Navigation.Charting.CordaChartBuilder.SetDrilldown(Endeca.Navigation.Charting.Drilldown,System.Web.HttpRequest)">
            <summary>
            Enables drilldown for this chart.
            </summary>
            <param name="drilldown">
            The Drilldown object which will return the URL to use when a
            value and/or label are clicked on.
            </param>
            <param name="request">
            The current HTTP request, for use in building the new URL.
            </param>
        </member>
        <member name="P:Endeca.Navigation.Charting.CordaChartBuilder.PCXML">
            <summary>
            Returns the PCXML for the chart.
            </summary>
            <value>
            The PCXML.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Charting.Drilldown">
            <summary>
            This callback interface tells <see cref="T:Endeca.Navigation.Charting.CordaChartBuilder"/> the URLs to use for drilldown.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Drilldown.GetLabelURL(Endeca.Navigation.Charting.Label,System.Web.HttpRequest)">
            <summary>
            Returns the drilldown URL for the specified label.
            </summary>
            <param name="label">
            The label (a <see cref="T:Endeca.Navigation.Charting.Label"/> object).
            </param>
            <param name="request">
            The current request, for help in formulating the URL.
            </param>
            <returns>
            The drilldown URL for the label. Returns <c>null</c> 
            to disable drilldown for this label.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Drilldown.GetValueURL(Endeca.Navigation.Charting.Cell,System.Web.HttpRequest)">
            <summary>
            Returns the drilldown URL for this value.
            </summary>
            <param name="val">
            The value (a <see cref="T:Endeca.Navigation.Charting.Cell"/> object).
            </param>
            <param name="request">
            The current request, for help in formulating the URL.
            </param>
            <returns>
            The drilldown URL for the value. Returns <c>null</c>
            to disable drilldown for this label.
            </returns>
        </member>
        <member name="T:Endeca.Navigation.Charting.Grid">
            <summary>
            This class represents a grid (or multidimensional array) that is built
            from Endeca analytics data. The data is stored in a way that is convenient
            for building graphs, charts, or tables.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Charting.Grid"/> returns values based on one or more "axes".
            For example, suppose you have cross-tab data in the following form:
            <code>
            { Name: Smith,   Quarter: 1Q06,    Sales: 3000 }
            { Name: Smith,   Quarter: 2Q06,    Sales: 4200 }
            { Name: Smith,   Quarter: 3Q06,    Sales: 4500 }
            { Name: Jones,   Quarter: 1Q06,    Sales: 1200 }
            { Name: Jones,   Quarter: 2Q06,    Sales: 1600 }
            </code>
            In this case, you create a <see cref="T:Endeca.Navigation.Charting.Grid"/> with 2 axisNames ("Name" and "Quarter") and with
            a valueName "Sales". The items in each axis (e.g., "Smith" and "3Q06") are called Labels,
            and are typically used as labels for the axes of a graph or table.
            <para>
            These Labels are also used to look up each value to display using 
            the <c>getValue</c> method. In the example above, <c>getValue</c> for the 
            Labels "Smith" and "3Q06" would return "4500".
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.#ctor(System.Collections.IEnumerator,System.String,System.String)">
            <summary>
            Convenience constructor for a one-axis <see cref="T:Endeca.Navigation.Charting.Grid"/>.
            Same as passing in an IList containing the string.
            </summary>
            <param name="analytics">
            The analytics results to use.
            </param>
            <param name="valueName">
            The name of the property or dimension that holds the value to chart.
            </param>
            <param name="axis">
            The names of the properties or dimensions that hold the labels of
            the axis of the grid.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.#ctor(System.Collections.IEnumerator,System.String,System.String,System.String)">
            <summary>
            Convenience constructor for a two-axis <see cref="T:Endeca.Navigation.Charting.Grid"/>.
            Same as passing in an IList containing the two strings.
            </summary>
            <param name="analytics">
            The analytics results to use.
            </param>
            <param name="valueName">
            The name of the property or dimension that holds the value to chart.
            </param>
            <param name="axisOne">
            The names of the properties or dimensions that hold the labels of
            the first axis of the grid.
            </param>
            <param name="axisTwo">
            The names of the properties or dimensions that hold the labels of
            the second axis of the grid.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.#ctor(System.Collections.IEnumerator,System.String,System.Collections.IList)">
            <summary>
            Constructs a <see cref="T:Endeca.Navigation.Charting.Grid"/> from the specified Endeca analytics data.
            </summary>
            <param name="analytics">
            The analytics results to use.
            </param>
            <param name="valueName">
            The name of the property or dimension that holds the value to chart.
            </param>
            <param name="axisNames">
            A list of the names of the properties or dimensions that hold the labels of
            each axis of the grid.
            </param>
            <exception cref="T:System.ArgumentException">
            If any argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.SortLabels(System.Int32,System.Collections.IComparer)">
            <summary>
            Sorts the labels in the specified axis by the
            specified comparator.
            </summary>
            <param name="axis">
            The axis to be sorted.
            </param>
            <param name="comparer">
            The Comparator that will compare the <see cref="T:Endeca.Navigation.Charting.Label"/> objects.
            </param>
            <remarks>
            The next caller to the <see cref="M:Endeca.Navigation.Charting.Grid.GetLabels(System.Int32)"/> method
            will receive the labels in sorted order.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.GetLabels(System.Int32)">
            <summary>
            Returns the List of Labels for the specified axis.  
            </summary>
            <param name="axis">
            The axis whose labels are to returned.
            </param>
            <returns>
            A List of <see cref="T:Endeca.Navigation.Charting.Label"/> objects for the specified axis.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.GetValue(Endeca.Navigation.Charting.Label)">
            <summary>
            Convenience method. Same as passing in a IList containing the Label.
            </summary>
            <param name="label">
            A <see cref="T:Endeca.Navigation.Charting.Label"/> object.
            </param>
            <returns>
            The value as a <see cref="T:Endeca.Navigation.Charting.Cell"/> object.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.GetValue(Endeca.Navigation.Charting.Label,Endeca.Navigation.Charting.Label)">
            <summary>
            Convenience method. Same as passing in an IList containing the two Labels.
            </summary>
            <param name="labelOne">
            The first <see cref="T:Endeca.Navigation.Charting.Label"/> object.
            </param>
            <param name="labelTwo">
            The second <see cref="T:Endeca.Navigation.Charting.Label"/> object.
            </param>
            <returns>
            The value as a <see cref="T:Endeca.Navigation.Charting.Cell"/> object.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.GetValue(System.Collections.IList)">
            <summary>
            Returns the value at the location indicated by the labels.
            </summary>
            <param name="labels">
            A List of <see cref="T:Endeca.Navigation.Charting.Label"/> objects.
            </param>
            <returns>
            The value as a <see cref="T:Endeca.Navigation.Charting.Cell"/> object.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.CreateLabel(Endeca.Navigation.ERec,System.String)">
            <summary>
            Returns the value of the specified property or dimension.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.ToList(System.Object)">
            <summary>
            Helper method to return a List with one item.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Grid.ToList(System.Object,System.Object)">
            <summary>
            Helper method to return a List with two items.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.Charting.Grid.NumAxes">
            <summary>
            Returns the number of axes (i.e., the number of labels) in the <see cref="T:Endeca.Navigation.Charting.Grid"/>.
            </summary>
            <value>
            The number of axes in the <see cref="T:Endeca.Navigation.Charting.Grid"/>.
            </value>
            <remarks>
            This does not count the values as an axis. This value is equal to the
            number of label-lists available from <see cref="M:Endeca.Navigation.Charting.Grid.GetLabels(System.Int32)"/>.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.Charting.Label">
            <summary>
            <see cref="T:Endeca.Navigation.Charting.Label"/> represents a <see cref="T:Endeca.Navigation.Charting.Grid"/> label that came from either
            a dimension value or a property value.
            </summary>
            <remarks>
            Calling <see cref="M:Endeca.Navigation.Charting.Label.ToString"/> will
            return the label's text, suitable for presenting as a label on an
            axis of a chart or table. If this is a dimension value,
            calling <see cref="P:Endeca.Navigation.Charting.Label.DimVal"/> will return the dimension 
            value (<see cref="T:Endeca.Navigation.DimVal"/>,
            which may be useful for navigation.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Charting.Label.#ctor(System.String)">
            <summary>
            Construct a Label with the given property string.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Label.#ctor(Endeca.Navigation.DimVal)">
            <summary>
            Construct a Label with the given Dimension value.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Charting.Label.ToString">
            <summary>
            Returns either the property value or the 
            name of the dimension value.
            </summary>
            <returns>
            The property value, if this is a property.
            Otherwise returns the name of the dimension.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Label.Equals(System.Object)">
            <summary>
            Indicates whether this <see cref="T:Endeca.Navigation.Charting.Label"/> has an equivalence
            to another <see cref="T:Endeca.Navigation.Charting.Label"/>.
            </summary>
            <param name="obj">
            The reference <see cref="T:Endeca.Navigation.Charting.Label"/> with which to compare.
            </param>
            <returns>
            <c>true</c> if this <see cref="T:Endeca.Navigation.Charting.Label"/> is the same
            as <paramref name="obj"/>; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Charting.Label.GetHashCode">
            <summary>
            Returns a unique hash code for this <see cref="T:Endeca.Navigation.Charting.Label"/>.
            </summary>
            <returns>
            The hash code value.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.Charting.Label.DimVal">
            <summary>
            Returns the dimension value. 
            </summary>
            <value>
            The dimension value (a <see cref="T:Endeca.Navigation.DimVal"/> object), 
            if this is a dimension. Otherwise returns <c>null</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Charting.Label.Property">
            <summary>
            Returns the property value. 
            </summary>
            <value>
            The property value, if this is a property. 
            Otherwise returns <c>null</c>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.AcceptAllCertificatePolicy">
            <summary>
            Summary description for AcceptAllCertificatePolicy.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.AggrERec">
            <summary>
            A class composed of multiple records, all sharing a similarity.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.IPropertyContainer">
            <summary>
            Interface for an object that has properties and has those properties exposed
            as a <see cref="T:Endeca.Navigation.PropertyMap"/>.  The purpose for this interface is to allow
            common code to be used in the extraction of any object that supports this
            interface, for example building tag libraries around property containers.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.IPropertyContainer.Properties">
            <summary>
            Gets the properties for this container.
            </summary>
            <value>
            Properties of this container.
            </value>
            <remarks>
            Returns an empty property
            map if there are no properties defined for this container.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AggrERec.Id">
            <summary>
            Gets the ID of the aggregated record.
            </summary>
            <value>The ID of the aggregated record.</value>
            <exception cref="T:System.Exception">Thrown when the specification is not a numeric value.</exception>
        </member>
        <member name="P:Endeca.Navigation.AggrERec.Spec">
            <summary>
            Gets the specification of the aggregated record.
            </summary>
            <value>The specification of the aggregated record.</value>
        </member>
        <member name="P:Endeca.Navigation.AggrERec.Properties">
            <summary>
            Gets the properties of the aggregated record.
            </summary>
            <value>
            The properties of this aggregated record.
            </value>
            <remarks>
            If the aggregated record does not have any properties, 
            an empty <see cref="T:Endeca.Navigation.PropertyMap"/> will still be returned.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AggrERec.Representative">
            <summary>
            Gets the representative record of the aggregated record.
            </summary>
            <value>
            Representative record for aggregated record or 
            <c>null</c> if the records of the aggregated 
            record were not retrieved during the query.
            </value>
            <remarks>
            If the number of records per aggregated record is set to 
            zero in the query this method will return <c>null</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AggrERec.ERecs">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERec"/> objects of this aggregated record.
            </summary>
            <value>
            <see cref="T:Endeca.Navigation.ERec"/> objects of the aggregated record.
            </value>
            <remarks>
            This list may contain all records of the aggregated record, 
            a subset or none, based on the nature of the query that 
            retrieved the aggregated record.  In the case there are none
            an empty <see cref="T:Endeca.Navigation.ERecList"/> will still be returned.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AggrERec.TotalNumERecs">
            <summary>
            Gets the total number of <see cref="T:Endeca.Navigation.ERec"/> objects aggregated
            in this aggregated Endeca record.
            </summary>
            <value>
            The total number of <see cref="T:Endeca.Navigation.ERec"/> objects that compose
            this aggregated Endeca record.
            </value>
            <remarks>
            Based on the query, it is possible that a subset of the
            entire set of Endeca records (<see cref="T:Endeca.Navigation.ERec"/> objects) of the aggregated 
            record are returned or none at all.  This method returns
            the total number that exist.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.AggrERecList">
            <summary>
            List of Endeca aggregated records (<see cref="T:Endeca.Navigation.AggrERec"/> objects) exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.AggrERecList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.AggrERecList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.AggrERecList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.AggrERecList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.AggrERecList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.AggrERecList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AggrERecList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.AggrERecList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AggrERecList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AggrERecList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AggrERecList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AggrERecList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AggrERecList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AggrERecList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AggrERecList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.AggrERec"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.AggrERec"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.AggrERecList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AggrERecList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.AggrERecList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.AggrERecList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AggrERecList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.AggrERecList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.AnalyticsStatementResult">
            <summary>
            Contains the result of an Analytics statement.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.AnalyticsStatementResult.Name">
            <summary>
             Returns the statement name.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.AnalyticsStatementResult.ERecIter">
            <summary>
            Returns an enumerator that provides access to the records
            associated with the statement.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.AnalyticsStatementResult.Error">
            <summary>
            Returns the error message for this statement, or null
            if no error was encountered when processing this statement.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.AnalyticsStatementResult.TotalNumERecs">
            <summary>
            Returns the number of records returned in this particular request.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.AnalyticsStatementResult.ReturnedNumERecs">
            <summary>
            Returns the total number of records that match the Analytics statement.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.AssocDimLocations">
            <summary>
            Class encapsulating a list of dimension locations 
            associated by their dimension.
            </summary>
            <remarks>
            In an <b>AssocDimLocations</b> object, the dimension locations 
            (<see cref="T:Endeca.Navigation.DimLocation"/> objects) are all from the same dimension.
            The <b>DimLocation</b> objects are returned as part of an Endeca
            record via an <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> object in the
            <see cref="T:Endeca.Navigation.ERec"/> data structure. The dimension locations designate 
            the record's location within the dimension hierarchy.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.AssocDimLocations"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.AssocDimLocations"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.AssocDimLocations"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.AssocDimLocations"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.AssocDimLocations"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.AssocDimLocations"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocations.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.AssocDimLocations"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.DimRoot">
            <summary>
            Gets the root value of the dimension all the locations these
            assocatiated locations are from.
            </summary>
            <value>
            Root value (<see cref="T:Endeca.Navigation.DimVal"/> object) from the common dimension of these locations.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.TotalNumLocations">
            <summary>
            Gets the total number of dimension locations belonging to this dimension.
            </summary>
            <value>
            Total number of dimension locations of this group.
            </value>
            <remarks>
            Depending on the nature of the query where an associated dimension 
            locations is obtained, the collection may only contain a 
            subset of the locations of the group. This method gets the 
            total number of the locations.
            <para>Class invariant:</para>
            <code>
            TotalNumberLocations >= Elements.Size()
            </code>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocDimLocations"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocDimLocations"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocDimLocations"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocDimLocations"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimLocation"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimLocation"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.AssocDimLocations"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.AssocDimLocations"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocations.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.AssocDimLocations"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.AssocDimLocationsList">
            <summary>
            List of associated dimension location groups exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
            <remarks>
            The dimension location groups are <see cref="T:Endeca.Navigation.AssocDimLocations"/> objects. 
            Note that for a given <b>AssocDimLocations</b>, the dimension locations
            are all from the same dimension.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.GetAssocDimLocations(System.Int64)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.AssocDimLocations"/> that is from the dimension 
            whose ID is <paramref name="dimensionId"/>.
            </summary>
            <param name="dimensionId">
            Dimension ID of the dimension to which the <see cref="T:Endeca.Navigation.AssocDimLocations"/> belong.
            </param>
            <returns>
            <see cref="T:Endeca.Navigation.AssocDimLocations"/> with a dimension ID of <paramref name="dimensionId"/>.
            </returns>
            <remarks>
            Returns <c>null</c> if no <see cref="T:Endeca.Navigation.AssocDimLocations"/> can be found with associated 
            with dimension ID <paramref name="dimensionId"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.GetAssocDimLocations(System.String)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.AssocDimLocations"/> that is from the dimension 
            wit the name <paramref name="dimensionName"/>.
            </summary>
            <param name="dimensionName">
            Name of the dimension name to which the <see cref="T:Endeca.Navigation.AssocDimLocations"/> belong.
            </param>
            <returns>
            <see cref="T:Endeca.Navigation.AssocDimLocations"/> with a dimension name of <paramref name="dimensionName"/>.
            </returns>
            <remarks>
            Returns <c>null</c> if no <see cref="T:Endeca.Navigation.AssocDimLocations"/> can be found with from 
            the dimension named <paramref name="dimensionName"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocDimLocationsList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocationsList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocationsList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocationsList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.AssocDimLocations"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.AssocDimLocations"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocationsList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocationsList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocDimLocationsList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.AssocNavigationRefs">
            <summary>
            Class encapsulating a group of value intersection references that all 
            share a similar set of dimensions.  That is, every set of values in this
            group are from the same set of dimensions.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefs.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.DimRoots">
            <summary>
            Gets the roots of the set of dimensions that all the intersections 
            in this group share and are from.
            </summary>
            <value>
            <see cref="T:Endeca.Navigation.DimValList"/> containing the roots of the dimensions.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimValList"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimValList"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefs.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.AssocNavigationRefsList">
            <summary>
            List of value intersection groups exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AssocNavigationRefsList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefsList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefsList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefsList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.AssocNavigationRefs"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefsList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefsList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.AssocNavigationRefsList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.AssocNavigationRefsList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ENEAuthenticationException">
            <summary>
            The exception thrown when authentication fails
            </summary>
        </member>
        <member name="T:Endeca.Navigation.ENEQueryException">
            <summary>
            Abstract exception representing a general error while attempting to query
            the Endeca MDEX engine. 
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ENEAuthenticationException.#ctor(System.String)">
            <summary>
            The exception thrown when authentication fails. Includes a message.
            </summary>
            <param name="s">
            The message that describes the current exception.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ENEAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            The exception thrown when authentication fails. Includes a message
            and an Exception instance.
            </summary>
            <param name="s">
            The message that describes the current exception.
            </param>
            <param name="e">
            The <see cref="T:System.Exception"/> instance that caused the current exception.
            </param>
        </member>
        <member name="T:Endeca.Navigation.AuthHttpENEConnection">
            <summary>
            An extention of <see cref="T:Endeca.Navigation.HttpENEConnection"/> that
            provides connections to Endeca MDEX Engines that require
            authentication. Use instances of this class to connect to an
            Endeca MDEX Engine via the Endeca Access Control System.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.HttpENEConnection">
            <summary>
            Provides a connection to an Endeca MDEX Engine over HTTP.  Also
            provides a mechanism for issuing queries to the MDEX Engine.
            </summary>
            <remarks>
            The <see cref="T:Endeca.Navigation.HttpENEConnection"/> is currently the only implementation
            of the <see cref="T:Endeca.Navigation.IENEConnection"/> interface.
            <para>
            This connection is a repository for hostname and port configuration
            parameters for HTTP connections to an Endeca MDEX Engine.  The connection
            does not open a persistant connection to the MDEX Engine.  The
            instantiation of this connection does not initiate an HTTP socket
            connection.  Instead each issuance of the <see cref="M:Endeca.Navigation.HttpENEConnection.Query(Endeca.Navigation.ENEQuery)"/>
            method opens a HTTP socket connection(s), makes the requests, and
            closes the connection(s).
            </para>
            </remarks>
            <example>
            An example usage of the <see cref="T:Endeca.Navigation.HttpENEConnection"/> in C# and ASP.NET:
            <code>
            IENEConnection nec = new HttpENEConnection("engine.endeca.com", 5001);
            ENEQuery usq = new UrlENEQuery(Page.Request.Url.Query);
            ENEQueryResults qr = nec.Query(usq);
            </code>
            </example>
        </member>
        <member name="T:Endeca.Navigation.IENEConnection">
            <summary>
            A connection with an Endeca MDEX Engine.  With a connection, 
            queries can be issued to the MDEX Engine and <see cref="T:Endeca.Navigation.ENEQueryResults"/>
            are returned.
            <para>
            The only current type of connection offered is the <see cref="T:Endeca.Navigation.HttpENEConnection"/>.
            </para>
            </summary>
        </member>
        <member name="M:Endeca.Navigation.IENEConnection.Query(Endeca.Navigation.ENEQuery)">
            <summary>
            Makes a query against an Endeca MDEX Engine.
            </summary>
            <param name="q">
            Query to make.
            </param>
            <returns>
            Results of the query.
            </returns>
            <remarks>
            The query results.
            </remarks>
            <exception cref="T:Endeca.Navigation.ENEQueryException">
            If an Endeca MDEX Engine query fails.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.HttpENEConnection.#ctor">
            <summary>
            Default empty constructor.
            </summary>
            <remarks>
            Hostname and port need to be set before
            <see cref="M:Endeca.Navigation.HttpENEConnection.Query(Endeca.Navigation.ENEQuery)"/> is called, else a
            <see cref="T:Endeca.Navigation.ENEQueryException"/> will be thrown.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.HttpENEConnection.#ctor(System.String,System.String)">
            <summary>
            Constructor for connection to an Endeca MDEX Engine over HTTP.
            </summary>
            <param name="hostname">
            Hostname or IP address of the MDEX Engine.
            Example: 127.0.0.1 or engine.endeca.com.
            </param>
            <param name="port">
            Hostname or IP address of the MDEX Engine.
            Port of the MDEX Engine. Example: 5001.
            </param>
        </member>
        <member name="M:Endeca.Navigation.HttpENEConnection.#ctor(System.String,System.Int32)">
            <summary>
            Constructor for connection to an Endeca MDEX Engine over HTTP.
            </summary>
            <param name="hostname">
            Hostname or IP address of the MDEX Engine.
            Example: 127.0.0.1 or engine.endeca.com.
            </param>
            <param name="port">
            Port of the MDEX Engine. Example: 5001.
            </param>
        </member>
        <member name="M:Endeca.Navigation.HttpENEConnection.Query(Endeca.Navigation.ENEQuery)">
            <summary>
            Issues a query against the MDEX Engine.
            </summary>
            <param name="neq">
            The query object containing the navigation, record etc.
            type requests to the MDEX Engine
            </param>
            <returns>
            Returns a <see cref="T:Endeca.Navigation.ENEQueryResults"/> object which contains
            the resultant objects returned by the MDEX Engine in
            response to the query <paramref name="neq"/>.
            </returns>
            <exception cref="T:Endeca.Navigation.ENEQueryException">
            If there is a problem making the query.
            <para>
            Possible subclasses of <see cref="T:Endeca.Navigation.ENEQueryException"/> that
            could be thrown are <see cref="T:Endeca.Navigation.ENEConnectionException"/>,
            <see cref="T:Endeca.Navigation.EmptyENEQueryException"/>,
            <see cref="T:Endeca.Navigation.PartialENEQueryException"/>,
            <see cref="T:Endeca.Navigation.ENEException"/>,
            <see cref="T:Endeca.Navigation.VersionMismatchException"/>, and so on.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.HttpENEConnection.EnableSSL(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Enables ssl
            </summary>
            <param name="clientCertificate">
            Which private certificate to use
            </param>
        </member>
        <member name="M:Endeca.Navigation.HttpENEConnection.SetPort(System.String)">
            <summary>
            Sets the port of the MDEX Engine.
            </summary>
            <param name="port">
            Port of the MDEX Engine.
            </param>
        </member>
        <member name="P:Endeca.Navigation.HttpENEConnection.Hostname">
            <summary>
            Get and sets the hostname of the MDEX Engine.
            </summary>
            <value>
            The hostname of the MDEX Engine.  <c>null</c>
            if hostname has not been set.
            </value>
        </member>
        <member name="P:Endeca.Navigation.HttpENEConnection.Port">
            <summary>
            Gets and sets the port of the MDEX Engine.
            </summary>
            <value>
            The port of the MDEX Engine.  <c>0</c> if
            port has not been set.
            </value>
        </member>
        <member name="M:Endeca.Navigation.AuthHttpENEConnection.#ctor">
            <summary>
            Default empty constructor.
            </summary>
            <remarks>   
            Hostname and port need to be set and the <see cref="M:Endeca.Navigation.AuthHttpENEConnection.Login(Endeca.Navigation.AccessControl.IAuthCredentialRequestHandler)"/> method will
            need to be called before the <see cref="M:Endeca.Navigation.AuthHttpENEConnection.Query(Endeca.Navigation.ENEQuery)"/> method is
            called, else an <see cref="T:Endeca.Navigation.ENEQueryException"/> will be thrown.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.AuthHttpENEConnection.#ctor(System.String,System.String)">
            <summary>
            Constructor for connection to the Endeca MDEX Engine over HTTP.
            </summary>
            <remarks>
            A user must be authenticated with <see cref="M:Endeca.Navigation.AuthHttpENEConnection.Login(Endeca.Navigation.AccessControl.IAuthCredentialRequestHandler)"/> before the
            <see cref="M:Endeca.Navigation.AuthHttpENEConnection.Query(Endeca.Navigation.ENEQuery)"/> method is called, otherwise 
            an <see cref="T:Endeca.Navigation.ENEAuthenticationException"/> will be thrown.
            </remarks>
            <param name="hostname">
            Hostname or IP address of the MDEX Engine.  
            Example: 127.0.0.1 or engine.endeca.com.
            </param>
            <param name="port">
            Port of the MDEX Engine. Example: 5001.
            </param>
        </member>
        <member name="M:Endeca.Navigation.AuthHttpENEConnection.#ctor(System.String,System.Int32)">
            <summary>
            Constructor for connection to the Endeca MDEX Engine over HTTP.
            </summary>
            <remarks>
            A user must be authenticated with <see cref="M:Endeca.Navigation.AuthHttpENEConnection.Login(Endeca.Navigation.AccessControl.IAuthCredentialRequestHandler)"/> before 
            the <see cref="M:Endeca.Navigation.AuthHttpENEConnection.Query(Endeca.Navigation.ENEQuery)"/> method is called, otherwise 
            an <see cref="T:Endeca.Navigation.ENEAuthenticationException"/> will be thrown.
            </remarks>
            <param name="hostname">
            Hostname or IP address of the MDEX Engine.  
            Example: 127.0.0.1 or engine.endeca.com.
            </param>
            <param name="port">
            Port of the MDEX Engine. Example: 5001.
            </param>
        </member>
        <member name="M:Endeca.Navigation.AuthHttpENEConnection.Query(Endeca.Navigation.ENEQuery)">
            <summary>
            Issues a query against the MDEX Engine.
            </summary>
            <param name="neq">
            The <see cref="T:Endeca.Navigation.ENEQuery"/> object containing the navigation, record, etc. 
            type requests to the MDEX Engine.
            </param>
            <returns>
            An <see cref="T:Endeca.Navigation.ENEQueryResults"/> object which contains 
            the resultant objects returned by the MDEX Engine in 
            response to the query <paramref name="neq"/>.
            </returns>
            <exception cref="T:Endeca.Navigation.ENEQueryException">
            If there is a problem making the query.
            <para>
            Possible subclasses of <see cref="T:Endeca.Navigation.ENEQueryException"/> that 
            could be thrown are <see cref="T:Endeca.Navigation.ENEConnectionException"/>, 
            <see cref="T:Endeca.Navigation.EmptyENEQueryException"/>, 
            <see cref="T:Endeca.Navigation.PartialENEQueryException"/>, 
            <see cref="T:Endeca.Navigation.ENEException"/>, and
            <see cref="T:Endeca.Navigation.VersionMismatchException"/>.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.AuthHttpENEConnection.Login(Endeca.Navigation.AccessControl.IAuthCredentialRequestHandler)">
            <summary>
            Authenticate a user
            </summary>
            <param name="handler">
            An object instance that provides the mechanism to
            obtain credentials for authentication purposes.
            </param>
        </member>
        <member name="M:Endeca.Navigation.AuthHttpENEConnection.FormatGroups">
            <summary>
            Make a record filter to constrain the query.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.Dimension">
            <summary>
            Core component of a navigation state query encapsulating all information 
            known about a dimension at the navigation state.
            </summary>
            <remarks>
            A dimension is a collection of related dimension values 
            (<see cref="T:Endeca.Navigation.DimVal"/> objects), organized into a tree.
            The top-most dimension value in a dimension tree is known as the
            dimension root. A dimension root always has the same name as its dimension.
            <para>
            Each dimension can belong to only a single dimension group 
            (<see cref="T:Endeca.Navigation.DimGroup"/> object). If a dimension is not assigned 
            to an explicit dimension group, it is placed in an implicit 
            dimension group of its own. These implicit groups have no name
            and an ID of zero.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Dimension.IsInNavState">
            <summary>
            isInNavState
            </summary>
            <value>
            boolean
            </value>
        </member>
        <member name="M:Endeca.Navigation.Dimension.IsInEdgeGroups">
            <summary>
            isInEdgeGroups
            </summary>
            <value>
            boolean
            </value>
        </member>
        <member name="M:Endeca.Navigation.Dimension.IsGroupOpen">
            <summary>
            isGroupOpen
            </summary>
            <value>
            boolean
            </value>
        </member>
        <member name="M:Endeca.Navigation.Dimension.IsImplicit">
            <summary> 
            Determines if the dimension is fully implicit.  
            </summary>
            <remarks>
            A dimension is considered fully implicit if the dimension 
            has no non-implicit refinements and has no descriptors. 
            That is, the dimension no longer has any refinments that 
            would narrow the size of the results set and has not had 
            any selections made to it.
            </remarks>
            <returns>
            <c>true</c> if the dimension is fully implicit, and
            <c>false</c> if the dimenension contains any valid
            refinements or a descriptor.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.Dimension.DimGroupName">
            <summary>
            Gets the name of the dimension group to which this dimension belongs.
            </summary>
            <value>
            Name of the dimension group (<see cref="T:Endeca.Navigation.DimGroup"/> object) to which 
            this dimension belongs or <c>null</c> if it does not belong to a group.
            </value>
            <remarks>
            If the dimension does not belong to a dimension group, the method will 
            return <c>null</c>. 
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.DimGroupId">
            <summary>
            Gets the ID of the dimension group to which this dimension belongs.
            </summary>
            <value>
            ID of the dimension group to which this dimension belongs or <c>0</c> 
            if it does not belong to a group.
            </value>
            <remarks>
            If the dimension does not belong to a dimension group, the method will 
            return <c>0</c>. 
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.Id">
            <summary>
            Gets the ID of the dimension.
            </summary>
            <value>
            ID of the dimension.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Dimension.Name">
            <summary>
            Gets the name of the dimension.
            </summary>
            <value>
            The name of the dimension.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Dimension.Root">
            <summary>
            Gets the root dimension value of this dimension.
            </summary>
            <value>
            The root dimension value (<see cref="T:Endeca.Navigation.DimVal"/> object) of this dimension.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Dimension.Descriptor">
            <summary>
            Gets the descriptor for this dimension.
            </summary>
            <value>
            Descriptor (<see cref="T:Endeca.Navigation.DimVal"/> object) for this dimension, or <c>null</c> if there is none.
            </value>
            <remarks>
            If there is no descriptor in this dimension, <c>null</c> is returned.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.RefinementParent">
            <summary>
            Gets the refinements' parent value in this dimension.
            </summary>
            <value>
            Refinements' parent value (<see cref="T:Endeca.Navigation.DimVal"/> object) in this dimension.  Returns <c>null</c>
            if there are no more refinement possiblities in this dimension.
            </value>
            <remarks>
            The parent value is the parent of the refinement options available with respect
            to the current navigation state in this dimension hierarchy.  Returns <c>null</c> 
            if there are no more refinements possible in this dimension.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.InternalId">
            <summary>
            getId
            </summary>
            <value>
            long
            </value>
        </member>
        <member name="P:Endeca.Navigation.Dimension.Ancestors">
            <summary>
            Gets the ancestors pertinent to this dimension.  
            </summary>
            <value>
            Ancestors of the descriptor of this dimension.  If there is no descriptor 
            or the descriptor has no ancestors, the <see cref="T:Endeca.Navigation.DimValList"/> returned 
            will be empty.
            </value>
            <remarks>
            Will still return an empty <see cref="T:Endeca.Navigation.DimValList"/> if there are no 
            ancestors. Ancestors will only appear if there is a descriptor for this 
            dimension and if the descriptor has ancestors in the hierarchy of the 
            dimension. Does not include the dimension root value. Ancestors are 
            ordered from parent to child.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.Intermediates">
            <summary>
            Gets the intermediate non-navigable refinements that have been 
            selected and do not affect the query terms. 
            </summary>
            <value>
            List of intermediates.  If there are no intermediates an empty 
            <see cref="T:Endeca.Navigation.DimValList"/> will be returned.
            </value>
            <remarks>
            If there are no intermediates an empty <see cref="T:Endeca.Navigation.DimValList"/> will be 
            returned. Intermediates are ordered from parent to child.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.ImplicitLocations">
            <summary>
            Gets the implicit dimension locations contained in this dimension.
            </summary>
            <value>
            List of intermediates.  If there are no intermediates an empty 
            <see cref="T:Endeca.Navigation.DimLocationList"/> will be returned.
            </value>		
        </member>
        <member name="P:Endeca.Navigation.Dimension.Refinements">
            <summary>
            Gets the refinements available and retrieved in this dimension.  
            </summary>
            <value>
            Refinements available in this dimension.  Returns an empty 
            <see cref="T:Endeca.Navigation.DimValList"/> if no refinements are available.
            </value>
            <remarks>
            Returns an empty <see cref="T:Endeca.Navigation.DimValList"/> when there are no refinements
            available.  It is possible that while the refinements may return a empty 
            set, refinements are still possible if not all the refinements were 
            retrieved from the MDEX Engine in the original query. Refinements
            are ordered by the higher ranking to lower ranking where the rankings 
            are determined by the settings in the MDEX Engine and the data.
            <para>
            Each member of this refinement list can be added to the Descriptors
            and will yield at least one results.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Dimension.CompletePath">
            <summary>
            Returns the complete path of the dimension values consolidating ancestors,
            descriptor, and implicits in this order. 
            </summary>
            <remarks>
            Implicits are the the dimension values (<see cref="T:Endeca.Navigation.DimVal"/> objects) 
            that are implicitly shared by all of the
            results in the remaining result set.
            <para>
            In the case where refinements are present in this dimension,
            the complete path will offer the complete path of dimension values, from
            the dimension root, ancestors, descriptor, implicit dimension values, 
            and intermediates to the refinement parent.
            </para>
            <para>
            In the case where there are multiple assignment of dimension values
            to a record in the result set, and there are no refinements 
            remaining in this dimension, the complete path will offer one
            of the complete branches of implicit dimension values.
            </para>
            <para>
            At the minimal case, this list would return the root dimension value of the
            dimension.
            </para>
            </remarks>  
            <value>
            Complete list (as a <see cref="T:Endeca.Navigation.DimValList"/> object) of dimension values from the dimension.
            </value>
        </member>
        <member name="T:Endeca.Navigation.DimensionList">
            <summary>
            List of dimensions (<see cref="T:Endeca.Navigation.Dimension"/> objects).
            </summary>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.GetDimension(System.Int64)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Dimension"/> with the ID <paramref name="dimensionId"/>
            from this list.
            </summary>
            <param name="dimensionId">
            ID of the dimension to get.
            </param>
            <returns>
            Dimension with the ID <paramref name="dimensionId"/> or 
            <c>null</c> if the dimension is not found.
            </returns>
            <remarks>
            If the dimension is not found in this list, <c>null</c> is returned.  
            Note that when dealing with multi-select dimensions, it is possible
            for the list to have multiple <see cref="T:Endeca.Navigation.Dimension"/> objects for the same 
            dimension. In this case, several share the same ID and this method does not
            define which one is returned.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.GetDimension(System.String)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Dimension"/> with the name <paramref name="dimensionName"/>
            from this list.
            </summary>
            <param name="dimensionName">
            Name of the dimension to get.
            </param>
            <returns>
            Dimension with the name <paramref name="dimensionName"/> or 
            <c>null</c> if no such dimension is found.
            </returns>
            <remarks>
            If the dimension is not found in this list <c>null</c> is returned.  
            Note that several <see cref="T:Endeca.Navigation.Dimension"/> objects may share the same name and 
            in this case this method does not define which one is returned.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.DimensionList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimensionList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimensionList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.DimensionList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimensionList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.DimensionList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimensionList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimensionList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimensionList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.DimensionList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimensionList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimensionList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimensionList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimensionList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimensionList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimensionList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimensionList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimensionList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimensionList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Dimension"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.Dimension"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimensionList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimensionList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.DimensionList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimensionList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimensionList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimensionList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.DimensionSearchResult">
            <summary>
            Result class for a value search query.  Class includes values queried
            for as well as other information about the query.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResult.GetDimensionSearchResultGroup(System.Int64)">
            <summary>
            Gets the result group with id <c>dimId</c>. Returns <c>null</c>
            is no group can be found.
            </summary>
            <returns>
            Result group with dimension id <c>dimId</c>.
            </returns>
            <param name="dimId">The single dimension ID to search for.</param>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResult.GetDimensionSearchResultGroup(Endeca.Navigation.DimValIdList)">
            <summary>
            Gets the result group with ids in the list <c>dimIds</c>. Returns <c>null</c>
            if no group can be found.
            </summary>
            <returns>
            Result group with dimension ids <c>dimIds</c>.
            </returns>
            <param name="dimIds">The list of dimension IDs to search.</param>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResult.ESearchReports">
            <summary>
            Gets the <c>IDictionary</c> of <c>ESearchReports</c> for this 
            dimension search result.  Returns an empty set if there are no 
            <c>ESearchReports</c>
            </summary>
            <value>
            An <c>IDictionary</c> of <c>ESearchReport</c>, keyed
            by the search term.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResult.ESearchReportsComplete">
            <summary>
            Gets the <c>IDictionary</c> of <c>IList</c> of <c>ESearchReport</c>for this 
            navigation query result.  Returns an empty set if there are no 
            <c>ESearchReports</c>
            </summary>
            <value>
            An <c>IDictionary</c> of <c>IList</c> of <c>ESearchReport</c>, keyed
            by the search term.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResult.TotalNumResults">
            <summary>
            Gets the total number of value results found even if not all of them
            were returned because of the parameters of the query.
            </summary>
            <value>
            Total number of search results.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResult.Results">
            <summary>
            Gets the results grouped by dimension group. Returns an empty list
            if there are no results.
            </summary>
            <value>
            Results grouped by dimension group.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResult.NumResultGroups">
            <summary>
            Gets the number of result groups.
            </summary>
            <value>
            Number of result groups.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResult.Item(System.Int32)">
            <summary>
            Gets the result group at the specified index.
            </summary>
            <value>
            The result group at the specified index.
            </value>
            <param name="index">The position of the desired result group.</param>
        </member>
        <member name="T:Endeca.Navigation.DimensionSearchResultGroup">
            <summary>
            Class encapsulating a group of value intersection references that all
            share a similar set of dimensions.  That is, every set of values in this
            group are from the same set of dimensions.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroup.TotalNumResults">
            <summary>
            Gets the total number of results for this result group found even if
            not all of them were returned because of the parameters of the query.
            </summary>
            <value>
            Total number of results for the group.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroup.Count">
            <summary>
            Gets the number of results actually contained in this result group.
            </summary>
            <value>
            Number of results actually contained in this result group.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroup.Roots">
            <summary>
            Gets the roots of this result group.
            </summary>
            <value>
            Roots of this result group.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroup.Item(System.Int32)">
            <summary>
            Gets the dimension location list at the specified index.
            </summary>
            <value>
            The result at the specified index.
            </value>
            <param name="index">
            The position of the desired dimension location list.
            </param>
        </member>
        <member name="T:Endeca.Navigation.DimensionSearchResultGroupList">
            <summary>
            List of value intersection groups exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of
            <paramref name="item"/> within the entire
            <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> to a compatible one-dimensional
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements
            copied from <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins.
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimensionSearchResultGroupList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroupList.IsFixedSize">
            <summary>
            Gets a value indicating whether the
            <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroupList.IsReadOnly">
            <summary>
            Gets a value indicating whether the
            <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroupList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimensionSearchResultGroup"/> at the specified index.
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get.
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimensionSearchResultGroup"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroupList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroupList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimensionSearchResultGroupList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimensionSearchResultGroupList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.DimGroup">
            <summary>
            Class encapsulating a group of dimensions.
            </summary>
            <remarks>
            Dimension groups provide a way to impose relationships on dimensions 
            (<see cref="T:Endeca.Navigation.Dimension"/> objects). By creating a dimension group, 
            dimensions can be organized for presentation purposes.
            Each explicit dimension group must be given a name; a unique ID is generated
            when the data is indexed.
            <para>
            If a dimension is not assigned to an explicit dimension group, it is placed in
            an implicit dimension group of its own. These implicit groups have no name
            and an ID of zero.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.IsExplicit">
            <summary>
            Determines if the dimension group is an explicit or implicit 
            dimension group.
            </summary>
            <returns>
            <c>true</c> if the dimension group is an explicit dimension;
            <c>false</c> if it is an implicit dimension group.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.GetDimension(System.Int64)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Dimension"/> with the ID <paramref name="dimensionId"/>
            from this list.
            </summary>
            <param name="dimensionId">
            ID of the <see cref="T:Endeca.Navigation.Dimension"/> to get.
            </param>
            <returns>
            Dimension with the ID <paramref name="dimensionId"/> or 
            <c>null</c> if no dimension is found.
            </returns>
            <remarks>
            Note that when dealing with multi-select dimensions, it is possible
            to have a list with multiple <see cref="T:Endeca.Navigation.Dimension"/> objects for the
            same dimension. In this case, several share the same ID and this
            method does not define which one is returned.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.GetDimension(System.String)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Dimension"/> with the name <paramref name="dimensionName"/>
            from this list.
            </summary>
            <param name="dimensionName">
            Name of the <see cref="T:Endeca.Navigation.Dimension"/> to get.
            </param>
            <returns>
            Dimension with the name <paramref name="dimensionName"/> or 
            <c>null</c> if no dimension was found.
            </returns>
            <remarks>
            If the dimension is not found in this list, <c>null</c> is returned.  
            Several dimensions may share the same name and in this case this 
            method does not define which one is returned.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.DimGroup"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimGroup"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimGroup"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.DimGroup"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimGroup"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.DimGroup"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimGroup"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimGroup"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimGroup"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.DimGroup"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimGroup"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimGroup"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroup.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimGroup"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimGroup"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.Name">
            <summary>
            Gets the name of the dimension group.
            </summary>
            <value>
            Name of the dimension group, or <c>null</c> if it does not 
            have a name (i.e., is an implicit dimension group).
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.Id">
            <summary>
            Gets the ID of the dimension group.
            </summary>
            <value>
            ID of the dimension group. Returns <c>0</c> if the 
            dimension group does not have an ID (i.e., is an implicit dimension group).
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimGroup"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimGroup"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimGroup"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimGroup"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Dimension"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.Dimension"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimGroup"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.DimGroup"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimGroup"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimGroup"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroup.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimGroup"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.DimGroupList">
            <summary>
            List of dimension groups exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
            <remarks>
            The dimension groups (<see cref="T:Endeca.Navigation.DimGroup"/> objects) can be 
            explicit dimension groups (which have a name and a unique ID)
            or implicit dimension groups (which have no name and an ID of zero).
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.GetDimGroup(System.String)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimGroup"/> with the name 
            <paramref name="dimensionGroupName"/> from this list.
            </summary>
            <returns>
            Dimension group with the name <paramref name="dimensionGroupName"/> or 
            <c>null</c> if the dimension group is not found.
            </returns>
            <remarks>
            If the dimension group is not found in this list <c>null</c> is returned.
            </remarks>
            <param name="dimensionGroupName">The name of the dimension group to find.</param>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.DimGroupList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.DimGroupList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimGroupList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.DimGroupList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimGroupList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimGroupList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimGroupList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimGroupList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimGroupList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimGroupList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimGroupList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroupList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimGroupList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimGroupList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroupList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimGroup"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimGroup"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimGroupList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroupList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimGroupList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimGroupList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimGroupList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimGroupList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.DimLocation">
            <summary>
            <b>DimLocation</b> represents a specific location in a dimension.
            </summary>
            <remarks>
            The dimension location comprises one dimension value (<see cref="T:Endeca.Navigation.DimVal"/> object)
            and a <see cref="T:Endeca.Navigation.DimValList"/> that contains all of the 
            dimension location’s ancestors (also <see cref="T:Endeca.Navigation.DimVal"/> objects) 
            up to, but not including, the dimension root.
            <para>
            <b>DimLocation</b> objects are returned as part of 
            an Endeca record, via an <see cref="T:Endeca.Navigation.AssocDimLocationsList"/>
            object in the <see cref="T:Endeca.Navigation.ERec"/> data structure.
            The dimension locations designate the record’s location 
            within the dimension hierarchy.
            </para>
            <para>
            Note that when returned in an <see cref="T:Endeca.Navigation.AssocDimLocations"/> 
            object, the dimension locations are all from the same dimension.
            However, when returned in a <see cref="T:Endeca.Navigation.DimLocationList"/> object,
            the dimension locations can be from different dimensions 
            (which is typically the result of a compound dimension search).
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimLocation.DimValue">
            <summary>
            Gets the dimension value of this dimension location.
            </summary>
            <value>
            Dimension value (<see cref="T:Endeca.Navigation.DimVal"/> object) 
            of this <see cref="T:Endeca.Navigation.DimLocation"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimLocation.Ancestors">
            <summary>
            Gets the ancestors of the dimension location.
            </summary>
            <value>
            A <see cref="T:Endeca.Navigation.DimValList"/> object containing the ancestors 
            of this dimension location.
            </value>
            <remarks>
            Ancestors are ordered from parent to child (the list does not include the 
            dimension root).
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.DimLocationList">
            <summary>
            List containing <see cref="T:Endeca.Navigation.DimLocation"/> objects exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
            <remarks>
            Unlike <see cref="T:Endeca.Navigation.AssocDimLocations"/> objects, the
            <see cref="T:Endeca.Navigation.DimLocation"/> objects in a <b>DimLocationList</b>
            can be from different dimensions. Therefore, the contents of a
            <b>DimLocationList</b> often contain values from different dimensions.
            As such, the intended use of this class is to return results
            from a compound dimension search. Each individual compound dimension
            search result is a <b>DimLocationList</b> and typically
            contains dimension values from multiple dimensions.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.Contains(System.Object)">
            <summary>
            Determines whether a <see cref="T:Endeca.Navigation.DimLocation"/> element is in the <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.DimLocation"/> object to locate in the <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of an element
            in the <see cref="T:Endeca.Navigation.DimLocationList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.DimLocation"/> object to locate in the <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of
            <paramref name="item"/> within the entire
            <see cref="T:Endeca.Navigation.DimLocationList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimLocationList"/> to a compatible one-dimensional
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements
            copied from <see cref="T:Endeca.Navigation.DimLocationList"/>. The <c>Array</c> must have zero-based indexing.
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins.
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimLocationList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimLocationList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimLocationList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimLocationList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimLocationList.IsFixedSize">
            <summary>
            Gets a value indicating whether the
            <see cref="T:Endeca.Navigation.DimLocationList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimLocationList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimLocationList.IsReadOnly">
            <summary>
            Gets a value indicating whether the
            <see cref="T:Endeca.Navigation.DimLocationList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimLocationList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimLocationList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimLocation"/> at the specified index.
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get.
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimLocation"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimLocationList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </summary>
            <value>
            The number of <see cref="T:Endeca.Navigation.DimLocation"/> objects actually 
            contained in the <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimLocationList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimLocationList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimLocationList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimLocationList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimLocationList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.DimSearchResult">
            <summary>
            Result class for a value search query.  Class includes values queried
            for as well as other information about the query.
            </summary>
            <remarks>
            Deprecated: This class may not be available in the future.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimSearchResult.TotalNumResults">
            <summary>
            Gets the total number of value results found even if not all of them
            were returned because of the parameters of the query.
            </summary>
            <value>
            Total number of search results.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimSearchResult.Results">
            <summary>
            Gets the results grouped by dimension.
            </summary>
            <value>
            The results grouped by dimension.  
            </value>
            <remarks>
            Returns an empty list if there are no results.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.DimVal">
            <summary>
            A dimension value is the lowest-level building block that compose dimensions, navigations,
            and classifications of records.
            </summary>
            <remarks>
            A <see cref="T:Endeca.Navigation.Dimension"/> is a collection of related dimension values, 
            organized into a tree. The top-most dimension value in a dimension tree 
            is known as the dimension root. A dimension root always has the same name 
            as its dimension. Every dimension value has a unique ID.
            <para>
            Dimension values are tags that classify the records in a data set.
            Tagging a record with a dimension value identifies the record as a 
            valid result when that dimension value is selected in a navigation query.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimVal.IsLeaf">
            <summary>
            Indicates if this dimension value is a leaf.
            </summary>
            <returns>
            <c>true</c> if this dimension value is a leaf 
            (has no child dimension values). <c>false</c> if it 
            is not (has child dimension values).
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimVal.IsNavigable">
            <summary>
            Indicates if this dimension value is navigable.
            </summary>
            <returns>
            <c>true</c> if this dimension value is navigable, <c>false</c> if it is not.
            </returns>
            <remarks>
            If the dimension value is navigable, it can be placed 
            in the navigation state or classify a record.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimVal.IsMultiSelectAnd">
            <summary>
            Indicates if this dimension value supports "multi-select and" functionality
            </summary>
            <returns>
            <c>true</c> if this dimension value is "multi-select and" capable, <c>false</c> if it is not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimVal.IsMultiSelectOr">
            <summary>
            Indicates if this dimension value supports "multi-select or" functionality
            </summary>
            <returns>
            <c>true</c> if this dimension value is "multi-select or" capable, <c>false</c> if it is not.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.DimVal.Name">
            <summary>
            Gets the name of this dimension value.
            </summary>
            <value>
            The name of this dimension value.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimVal.Id">
            <summary>
            Gets the ID of this dimension value.
            </summary>
            <value>
            The ID of this dimension value.
            </value>
            <remarks>
            Every dimension value has a unique ID.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimVal.DimensionName">
            <summary>
            Gets the name of the dimension to which this dimension value belongs.
            </summary>
            <value>
            Name of the <see cref="T:Endeca.Navigation.Dimension"/> to which this dimension value belongs.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimVal.DimensionId">
            <summary>
            Gets the ID of the dimension to which this dimension value belongs.
            </summary>
            <value>
            ID of the <see cref="T:Endeca.Navigation.Dimension"/> to which this dimension value belongs.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimVal.Properties">
            <summary>
            Gets the properties associated with this dimension value.
            </summary>
            <value>
            A <see cref="T:Endeca.Navigation.PropertyMap"/> containing the properties 
            associated with this dimension value.
            </value>
            <remarks>
            This method will still return a valid but empty property list if there are no 
            properties associated with this dimension value.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.DimValIdList">
            <summary>
            List of dimension value IDs.
            </summary>
            <remarks>
            Every dimension value (<see cref="T:Endeca.Navigation.DimVal"/> object) has a unique ID.
            A <b>DimValIdList</b> object contains a list of dimension value IDs.
            Typically, the developer does not create and populate the <b>DimValIdList</b> object,
            but instead it is returned by get properties such as
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchDimensions"/>. 
            Note that while <b>DimValIdList</b> objects are lists of dimension 
            value IDs, <see cref="T:Endeca.Navigation.DimValList"/> objects are lists of the 
            actual dimension values.
            <para>
            <b>DimValIdList</b> objects are primarily used to generate 
            MDEX Engine queries. For example, dimension value IDs are 
            used before executing a basic navigation query, as the input 
            argument to the <see cref="P:Endeca.Navigation.ENEQuery.NavDescriptors"/>
            property setter. There will be a one-to-one mapping between 
            the IDs in the <c>DimValIdList</c> argument and the 
            dimension values (<see cref="T:Endeca.Navigation.DimVal"/> objects) that 
            are returned by the query.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.#ctor">
            <summary>
            Default constructor that will contain an empty list.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.#ctor(System.String)">
            <summary>
            Constructor that takes a string-based set of dimension value IDs.
            The constructor parses and populates the list with the string.
            </summary>
            <param name="ids">
            Space-delimited sequence of dimension value IDs.
            </param>
            <remarks>
            The string is expected to be a space-delimited sequence of unsigned ints.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.#ctor(Endeca.Navigation.DimValList)">
            <summary>
            Constructor that takes a dimension value list and 
            extracts the IDs from the <see cref="T:Endeca.Navigation.DimVal"/> objects
            in the list.
            </summary>
            <param name="values">
            <see cref="T:Endeca.Navigation.DimValList"/> from which the dimension value IDs will be extracted.
            </param>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.AddDimValueId(System.Int64)">
            <summary>
            Adds a dimension value ID to the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </summary>
            <param name="id">
            Dimension value ID to add to the list.
            </param>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.AddDimValue(Endeca.Navigation.DimVal)">
            <summary>
            Adds a dimension value ID to the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            The ID is extracted from <paramref name="val"/>, 
            which is a dimension value.
            </summary>
            <param name="val">
            <see cref="T:Endeca.Navigation.DimVal"/> object from which the ID will be extracted.
            </param>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.ToString">
            <summary>
            Generates the string-based representation of 
            the <see cref="T:Endeca.Navigation.DimValIdList"/> by returning
            a space-delimited sequence of dimension value IDs.
            </summary>
            <returns>
            Space-delimited sequence of dimension value IDs.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value 
            in the <see cref="T:Endeca.Navigation.DimValIdList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.DimValIdList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.Clear">
            <summary>
            Removes all the elements from the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.DimValIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.DimValIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.DimValIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.DimValIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimValIdList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.DimValIdList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimValIdList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimValIdList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValIdList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimValIdList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimValIdList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimValIdList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimValIdList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValIdList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimValIdList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimValIdList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValIdList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Int64"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:System.Int64"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimValIdList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValIdList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimValIdList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimValIdList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValIdList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimValIdList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.DimValList">
            <summary>
            A list of dimension values (<see cref="T:Endeca.Navigation.DimVal"/> objects).
            </summary>
            <remarks>
            <b>DimValList</b> objects are returned from the
            MDEX Engine by various get properties. 
            For example, <see cref="P:Endeca.Navigation.Dimension.Refinements"/> 
            returns a <b>DimValList</b> object containing 
            the refinements in a given dimension.
            <para>
            Note that a <see cref="T:Endeca.Navigation.DimValIdList"/>{@link } is a list of 
            dimension value IDs, while a <b>DimValList</b> is a list of 
            the actual dimension values (<b>DimVal</b> objects).
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.DimValList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.DimValList"/>.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.DimVal"/> to locate in the <see cref="T:Endeca.Navigation.DimValList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.DimValList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimValList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of an element
            in the <see cref="T:Endeca.Navigation.DimValList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.DimVal"/> to locate in the <see cref="T:Endeca.Navigation.DimValList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.DimValList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.DimValList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.DimValList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.DimValList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.DimValList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.DimValList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.DimValList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.DimValList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.DimValList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.DimValList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.DimValList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.DimValList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimValList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimValList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.DimValList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.DimValList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimVal"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimVal"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.DimValList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.DimValList"/>.
            </summary>
            <value>
            The number of <see cref="T:Endeca.Navigation.DimVal"/> objects actually 
            contained in the <see cref="T:Endeca.Navigation.DimValList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.DimValList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.DimValList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.DimValList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.DimValList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.EmptyENEQueryException">
            <summary>
            Exception signalling that the <c>query</c> method was called with
            an empty query object.  Exception comes from the fact that a query
            object did not express any requests to the Endeca MDEX Engine.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.ENEConnectionException">
            <summary>
            Exception represents an error dealing with the communication with an 
            Endeca MDEX Engine from an <see cref="T:Endeca.Navigation.IENEConnection"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ENEConnectionException.#ctor">
            <summary>
            Initialized a new instance of <see cref="T:Endeca.Navigation.ENEConnectionException"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ENEConnectionException.#ctor(System.String)">
            <summary>
            Initialized a new instance of <see cref="T:Endeca.Navigation.ENEConnectionException"/> 
            with a specified error message.
            </summary>
            <param name="s">
            The message that describes the error.
            </param>
        </member>
        <member name="T:Endeca.Navigation.ENEException">
            <summary>
            Exception represents an exception that comes from the Endeca MDEX Engine.
            Often this means that the <see cref="T:Endeca.Navigation.IENEConnection"/> was able to contact
            the MDEX Engine but the MDEX Engine responded with an error.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ENEException.#ctor">
            <summary>
            Initialized a new instance of <see cref="T:Endeca.Navigation.ENEException"/>.
            </summary>        
        </member>
        <member name="M:Endeca.Navigation.ENEException.#ctor(System.String)">
            <summary>
            Initialized a new instance of <see cref="T:Endeca.Navigation.ENEException"/> 
            with a specified error message.
            </summary>
            <param name="s">
            The message that describes the error.
            </param>
        </member>
        <member name="T:Endeca.Navigation.ENEQuery">
            <summary>
            An object used for expressing queries to an Endeca MDEX Engine.
            </summary>
            <remarks>
            An <b>ENEQuery</b> object is used with a <b>Query</b> method
            (of <see cref="T:Endeca.Navigation.HttpENEConnection"/> or <see cref="T:Endeca.Navigation.AuthHttpENEConnection"/>)
            to query an MDEX Engine, which then returns an 
            <see cref="T:Endeca.Navigation.ENEQueryResults"/> object.
            <para>
            The <b>ENEQuery</b> object can contain one of each of the following: a record query,
            a navigation query, an aggregated record query, a dimension search query,
            and/or a navigation search.
            </para>
            <para>
            While there are many query options, only a few critical setters
            are necessary to make basic queries:
            </para>
            <para>
            <list type="bullet">
            <item>
              <description>Basic navigation queries require a setting <see cref="P:Endeca.Navigation.ENEQuery.NavDescriptors"/>.
              </description>
            </item>
            <item>
              <description>Basic record queries require a setting <see cref="P:Endeca.Navigation.ENEQuery.ERec"/>.
              </description>
            </item>
            <item>
              <description>Basic aggregated record queries require setting <see cref="P:Endeca.Navigation.ENEQuery.AggrERec"/>,
                 <see cref="P:Endeca.Navigation.ENEQuery.AggrERecRollupKey"/>, and <see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavDescriptors"/>.
              </description>
            </item>
            <item>
              <description>Basic dimension search queries require a setting <see cref="P:Endeca.Navigation.ENEQuery.DimSearchTerms"/>.
              </description>
            </item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.NAV_SORT_ASCENDING">
            <summary>
            Sort the navigation query's matching records in ascending order.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.NAV_SORT_DESCENDING">
            <summary>
            Sort the navigation query's matching records in descending order.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.ALL_ERECS_PER_AGGR">
            <summary>
            All records that compose a aggregated record will be returned.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.ONE_EREC_PER_AGGR">
            <summary>
            One of the records that compose a aggregated record will be returned.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.ZERO_ERECS_PER_AGGR">
            <summary>
            None of the records that compose a aggregated record will be returned.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.DIM_SEARCH_ALL_DIM_VALUES">
            <summary>
            All matches from dimension search will be returned from each dimension.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.KEY_PROPS_NONE">
            <summary>
            Request that no key properties will be returned.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ENEQuery.MAX_BULK_ERECS_AVAILABLE">
            <summary>
            All the records that are associated with the current navigation
            state should be returned through the bulk record iterator.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.#ctor">
            <summary>
            Zero argument default constructor.
            </summary>
            <remarks>
            Without specifying specific query fields, querying with this will
            yield a <see cref="T:Endeca.Navigation.EmptyENEQueryException"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.AddSelection(System.String)">
            <summary>
            Adds the field named <c>fieldName</c> to the set of fields that should
            be returned for each record in the result set.
            </summary>
            <value>
            The name of an Endeca property or dimension.
            </value>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.GetNavSortKey">
            <summary>
            Gets the sort key with which the navigation query's records will be sorted.
            </summary>
            <returns>
            The sort key of the navigation query. Returns <c>null</c> if there is no sort
            key specified.
            </returns>
            <remarks>Deprecated: This method may not be available in future versions 
            of the Presentation API. Use <c>GetNavActiveSortKeys()</c> instead.</remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.SetNavSortKey(System.String)">
            <summary>
            Sets the sort key with which the navigation query's records will be sorted.
            </summary>
            <param name="key">
            The <see cref="T:System.String"/> used to sort the navigation 
            query's records.
            </param>
            <remarks>
            Deprecated: This method may not be available in
            future versions of the Presentation API. Use 
            <c>SetNavActiveSortKeys()</c> instead.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.GetNavSortOrder">
            <summary>
            Gets the sort order with which the navigation query's records 
            will be sorted.
            </summary>
            <returns>
            <see cref="F:Endeca.Navigation.ENEQuery.NAV_SORT_ASCENDING"/> if ascending,
            <see cref="F:Endeca.Navigation.ENEQuery.NAV_SORT_DESCENDING"/> if descending.
            </returns>
            <remarks>Deprecated: This method may not be available in future
            versions of the Presentation API. Use <c>GetNavActiveSortKeys()</c>
            instead
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.SetNavSortOrder(System.Int32)">
            <summary>
            Sets the sort order with which the navigation query's records will be sorted.
            </summary>
            <param name="order">
            The <c>int</c> specifying the sort order.
            The sort order can either be <see cref="F:Endeca.Navigation.ENEQuery.NAV_SORT_ASCENDING"/> or
            <see cref="F:Endeca.Navigation.ENEQuery.NAV_SORT_DESCENDING"/>.  Defaults to ascending and is only
            applied if the a sort key is present in query as well.
            </param>
            <remarks>
            Deprecated: This method may not be available in future versions of
            the Presentation API. Use <c>SetNavActiveSortKeys</c> instead.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.GetNavActiveSortKeys">
            <summary>
            Get the list of sort keys with which the navigation query's
            records will be sorted.
            </summary>
            <value>
            The list of keys that will be used to sort the
            records. The order of the keys is significant. The first
            key is the primary sort criterion, the second key is the
            secondary sort criterion, etc.
            </value>
            <returns>
            <c>ERecSortKeyList</c> - The sort keys used in this query.
            The records are sorted by the first key in
            the list, resolving ties with the second key. Ties on the
            second key are resolved using the third key, and so forth.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.SetNavActiveSortKeys(Endeca.Navigation.ERecSortKeyList)">
            <summary>
            Set the list of sort keys with which the navigation query's
            records will be sorted.
            </summary>
            <param name="criteria">
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> used to sort the navigation 
            query's records.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.ContainsNavQuery">
            <summary>
            Returns whether the query includes a navigation query.
            </summary>
            <returns>
            <c>true</c> if query includes a requests for a
            navigation object and <c>false</c> if it does not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.ContainsERecQuery">
            <summary>
            Returns if this query includes a record query.
            </summary>
            <returns>
            <c>true</c> if query includes a record query.
            <c>false</c> if it does not.
            </returns>
            <remarks>
            This method is synonymous with <see cref="M:Endeca.Navigation.ENEQuery.ContainsERecsQuery"/>
            and here for completeness when requesting only one record.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.ContainsERecsQuery">
            <summary>
            Returns if this query includes a query for records.
            </summary>
            <returns>
            <c>true</c> if query includes a query for one or more
            records.  <c>false</c> if it does not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.ContainsAggrERecQuery">
            <summary>
            Returns if this query includes a aggregated record query.
            </summary>
            <returns>
            <c>true</c> if query includes a aggregated record query.
            <c>false</c> if it does not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.ContainsDimSearchQuery">
            <summary>
            Returns if this query includes a dimension search query.
            </summary>
            <returns>
            <c>true</c> if query includes a dimension search query.
            <c>false</c> if it does not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.ContainsQuery">
            <summary>
            Returns whether the query is querying for any of a navigation,
            record, dimension search, or a value set search.
            </summary>
            <returns>
            <c>false</c> if a navigation, record, dimension search,
            value set search are specified in query.
            <c>true</c> if none are.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQuery.Validate">
            <summary>
            Method validates the ene query by checking to see if extraneous
            parameters are specified.
            </summary>
            <remarks>
            Throws exception if extraneous parameters are present without
            the other required parts of the query.  Example, navigation offset
            parameter without the navigation values.
            </remarks>
            <exception cref="T:Endeca.Navigation.PartialENEQueryException">
            Extraneous parameters are present without the other required parts
            of the query.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.QueryInfo">
            <summary>
            Gets and sets the <see cref="T:Endeca.Navigation.ENEQueryInfo"/> object.
            </summary>
            <value>
            <see cref="T:Endeca.Navigation.ENEQueryInfo"/> object.
            </value>
            <remarks>
            This object is used to store information for the back end to log, such
            as Session Ids and Query Ids. These will be used later in generating
            log analysis reports.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavDescriptors">
            <summary>
            Gets and sets the navigation descriptor IDs describing the navigation object
            to be queried for.
            </summary>
            <value>
            The descriptor IDs of the navigation being queried for.
            Returns <c>null</c> if there is none.
            </value>
            <remarks>
            The resulting navigation object's descriptor dimensions will be ordered in
            the same order as these descriptors.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavKeyProperties">
            <summary>
            Get and sets the number of key properties to be returned.
            </summary>
            <value>
            For the setter, use <see cref="F:Endeca.Navigation.ENEQuery.KEY_PROPS_NONE"/> to
            request that no key properties be returned.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavERecsOffset">
            <summary>
            Gets and sets the offset into the navigation record list for navigation query.
            </summary>
            <value>
            The offset in the navigation record list for navigation query.
            </value>
            <remarks>
            Defaults to an offset of <c>0</c> if not set.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavNumERecs">
            <summary>
            Get and sets the max number of records returned for the navigation query.
            </summary>
            <value>
            Max number of records to return for the navigation query.
            </value>
            <remarks>
            Defaults to <c>10</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavNumBulkERecs">
            <summary>
            Gets and sets the max number of records returned in bulk format for the
            navigation query.  If <c>MAX_BULK_ERECS_AVAILABLE</c> is
            passed to this method, then all records for the navigation query
            will be returned.
            </summary>
            <value>
            Max number of bulk records to return for the navigation query.
            </value>
            <remarks>
            Defaults to <c>0</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavNumBulkAggrERecs">
            <summary>
            Gets and sets the max number of aggregated records returned
            in bulk format for the navigation query.
            If <c>MAX_BULK_ERECS_AVAILABLE</c> is passed to this method,
            then all aggregated records for the navigation query will be returned.
            </summary>
            <value>
            Max number of bulk aggregated records to return for the navigation query.
            </value>
            <remarks>
            Defaults to <c>0</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavExposedRefinements">
            <summary>
            Gets and sets the set of refinements that should be exposed / returned
            with the navigation query.
            </summary>
            <value>
            Parents of the refinements that should be returned with the
            navigation query.  <c>null</c> if none have been specified.
            </value>
            <remarks>
            The <c>refinements</c> specifies a list of value Ids that correlate to
            the parents of the refinements that should be returned with the query.
            If the <see cref="P:Endeca.Navigation.ENEQuery.NavAllRefinements"/> returns <c>false</c>,
            no refinements will be returned and thus refinements must be
            specified via this set method to be returned. If
            <see cref="P:Endeca.Navigation.ENEQuery.NavAllRefinements"/> returns <c>true</c> this
            method will be ignored unless it includes non-navigable values.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavRefinementConfigs">
            <summary>
            Gets and sets the list of dynamic refinement 
            configs to be used by the MDEX Engine.
            </summary>
            <value>
            A <code>RefinementConfigList</code> that encapsulates all dynamic refinement configs to be used by the MDEX Engine.
            <c>null</c> if none have been specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavAllRefinements">
            <summary>
            Gets and sets the query such that the navigation query will return with all
            the refinements possible for all dimensions.
            </summary>
            <value>
            <c>true</c> if all refinements will be returned from
            the navigation. <c>false</c> if they will not.
            </value>
            <remarks>
            If this method sets it to <c>false</c>, refinements must be requested for
            explcitly via setting the <see cref="P:Endeca.Navigation.ENEQuery.NavExposedRefinements"/> property.
            The latter, is the default behavior.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.Selection">
            <summary>
            Gets and sets the select list for the query.
            </summary>
            <value>
            The list of fields to return with each record in the navigation query results.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AnalyticsQuery">
            <summary>
            Gets and sets the <c>AnalyticsQuery</c> instance that represents the 
            Analytics query that will be sent to the MDEX Engine. On set, if the query is 
            malformed, it will not be set on the <see cref="T:Endeca.Navigation.HttpENEConnection"/> and a SyntaxException 
            is thrown.  An <c>AnalyticsQuery</c> instance can be built	
            programmatically or by calling the <see cref="M:Endeca.Navigation.Analytics.AnalyticsQuery.parseQuery(System.String)"/> method.
            </summary>
            <value>The Analytics query to run.</value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.Profiles">
            <summary>
            Gets and sets the set of profiles that describe
            the application end user.  
            </summary>
            <value>
            The set of profiles describing the application
            end user.  Returns <c>null</c> if
            profiles were not specified.
            </value>
            <remarks>
            Changing the <c>StringCollection</c> returned
            will change the set of profiles that will
            be sent to the Endeca MDEX Engine.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavRollupKey">
            <summary>
            Gets and sets the rollup key with which the records of the navigation
            query should be rolled up with to create aggregated records.
            </summary>
            <value>
            The rollup key of the navigation. <c>null</c> if none is specified.
            </value>
            <remarks>
            By setting a key with this method, records will not be returned by the
            navigation query but instead Aggr Records will be returned.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavAggrERecsOffset">
            <summary>
            Gets and sets the offset into the navigation aggregated record list for
            navigation query.
            </summary>
            <value>
            The offset in the navigation aggregated record list for navigation query.
            </value>
            <remarks>
            Defaults to an offset of <c>0</c> if not set. Only applicable when
            a aggregated record set is queried for.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavNumAggrERecs">
            <summary>
            Gets and sets the max number of aggregated records returned for the
            navigation query.
            </summary>
            <value>
            Max number of aggregated records to be returned from a navigation query.
            </value>
            <remarks>
            Defaults to <c>10</c>.  Only applicable for aggregated record
            navigation queries.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavERecsPerAggrERec">
            <summary>
            Gets and sets the max number of records to be returned in each
            aggregated record.
            </summary>
            <value>
            Max number of records to return per aggregated record.
            </value>
            <remarks>
            Defaults to one.  Only applicable for aggregated record navigation
            queries. Values possible include <see cref="F:Endeca.Navigation.ENEQuery.ALL_ERECS_PER_AGGR"/>,
            <see cref="F:Endeca.Navigation.ENEQuery.ONE_EREC_PER_AGGR"/>, or <see cref="F:Endeca.Navigation.ENEQuery.ZERO_ERECS_PER_AGGR"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavERecSearches">
            <summary>
            Gets and sets the navigation record searches to perform on the records
            of the navigation query.
            </summary>
            <value>
            Navigation record searches applied to records of the navigation.
            <c>null</c> if none have been previously specified.
            </value>
            <remarks>
            The individual elements of this list are applied in a conjunctive manner
            in that each search narrows and restricts the results of navigation
            record list.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavRelRankERecSearch">
            <summary>
            Gets and sets the navigation relevance ranking record search to perform on the records
            of the navigation query.
            </summary>
            <value>
            Navigation relevance rank record search applied to records of the navigation.
            <c>null</c> if none have been previously specified.
            </value>
            <remarks>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavERecSearchDidYouMean">
            <summary>
            Gets and sets if the fulltext search should turn on the did you mean feature.
            </summary>
            <value>
            <c>true</c> if the did you mean feature is enabled, <c>false</c> if it is not.
            </value>
            <remarks>
            Only used if a fulltext search query is being made with the navigation.
            Defaults to <c>false</c>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavERecSearchComputeAlternativePhrasings">
            <summary>
            Gets and sets if the fulltext search should turn on the compute-autophrase feature.
            </summary>
            <value>
            <c>true</c> if the compute-autophrase feature is enabled, <c>false</c> if it is not.
            </value>
            <remarks>
            Only used if a fulltext search query is being made with the navigation.
            Defaults to <c>false</c>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavERecSearchRewriteQueryWithAnAlternativePhrasing">
            <summary>
            Gets and sets if the fulltext search should turn on the rewrite-autophrase feature.
            </summary>
            <value>
            <c>true</c> if the rewrite-autophrase feature is enabled, <c>false</c> if it is not.
            </value>
            <remarks>
            Only used if a fulltext search query is being made with the navigation.
            Defaults to <c>false</c>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavRangeFilters">
            <summary>
            Gets and sets the navigation range filters on this navigation query.
            </summary>
            <value>
            The navigation range filters of this query or <c>null</c> if none are returned.
            </value>
            <remarks>
            Range filters limit the record results of the query.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavMerchPreviewTime">
            <summary>
            Gets and sets the merch preview time on this navigation query.
            </summary>
            <value>
            The merch preview time of this query or <c>null</c> if none exists.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavMerchRuleFilter">
            <summary>
            Gets and sets the merch rule filter on this navigation query.
            </summary>
            <value>
            The merch rule filter of this query or <c>null</c> if none exists.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavRecordFilter">
            <summary>
            Gets and sets the record filters on this navigation query.
            </summary>
            <value>
            The record filter for this query or <c>null</c> if none is set.
            </value>
            <remarks>
            Record filters are boolean expressions that limit the record results of
            the query.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavRecordStructureExpr">
            <summary>
            Gets and sets the structure expression on this navigation query.
            </summary>
            <value>
            The structure expression for this query or <c>null</c> if none is set.
            </value>
            <remarks>
            Structure expressions enable navigation on the structure of records.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.NavAnalytics">
            <summary>
            Gets and sets the analytics computation for the navigation query so that
            an analytics computation is performed on the navigation records.
            </summary>
            <value>
            Analytics computation of the navigation query or <c>null</c> if none specified.
            </value>
            <remarks>
            The syntax for this currently is a '|' delimited sequence of the
            form:
            <para>
            <c>&lt;function&gt;|&lt;property key&gt;|&lt;rollup key&gt;|&lt;property key&gt;|&lt;model name&gt;|&lt;model name&gt;|...</c>
            </para>
            <para>
            Function can be one of COUNT, SUM, AVG, MIN, MAX, CAVG.
            Specifying an analytics computation causes results to appear in the
            Navigation's supplements.
            </para>
            <para>
            <i>This functionality and syntax is not supported in InFront nor
            enterprise search deployments and may not be supported in further
            releases.</i>
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.ERec">
            <summary>
            Sets the Id of the record to be queried for.
            </summary>
            <value>
            The record Id of the record being queried for.
            </value>
            <remarks>
            This property is shorthand for <see cref="T:Endeca.Navigation.ERecIdList"/> property
            used when only requesting one record.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AccessControlFilter">
            <summary>
            Gets and sets the record filters on this record query.
            </summary>
            <value>
            The record filter for this query or <c>null</c> if none is set.
            </value>
            <remarks>
            Record filters are boolean expressions that limit the
            record results of the query.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.ERecs">
            <summary>
            Gets or sets the Ids of the records to be queried for.  
            </summary>
            <value>
            The record Ids in the query or <c>null</c> if there were none.
            </value>
            <remarks>
            If only one record has been queried for this method still returns a
            <see cref="T:Endeca.Navigation.ERecIdList"/> of one element.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERec">
            <summary>
            Gets or sets the Id of the aggregated record to be queried for.
            </summary>
            <value>
            The aggregated record Id of the aggregated record being queried for.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERecSpec">
            <summary>
            Gets or sets the specification of the aggregated record to be queried for.
            </summary>
            <value>
            The aggregated record specification of the aggregated record being queried for.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERecNavDescriptors">
            <summary>
            Gets or sets the navigation values which the aggregated record will
            be composed in relation to.
            </summary>
            <value>
            Navigation value Ids of the aggregated record is relative to.
            <c>null</c> if none are specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERecNavRangeFilters">
            <summary>
            Gets or sets the navigation range filters which the aggregated record
            will be composed in relation to.
            </summary>
            <value>
            The navigation range filters the aggregated record is
            composed relative to. <c>null</c> if none is present.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERecNavRecordFilter">
            <summary>
            Gets or sets the record filter which the aggregated record will be
            composed in relation to.
            </summary>
            <value>
            The record filter the aggregated record is composed relative to.
            <c>null</c> if none is present.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERecStructureExpr">
            <summary>
            Gets or sets the structure expression used to filter members of
            the aggregated record.
            </summary>
            <value>
            The structure expression used to filter members of the
            aggregated record. <c>null</c> if none is present.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.AggrERecRollupKey">
            <summary>
            Gets or sets the rollup key the aggregated record is composed by.
            </summary>
            <value>
            Rollup key to compose the aggregated record. <c>null</c> if none
            are specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchTerms">
            <summary>
            Gets and sets the search terms the dimension search will use.
            </summary>
            <value>
            Dimension search terms.
            </value>
            <remarks>
            The form is that of the end user input, that is decoded
            and untokenized.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchOpts">
            <summary>
            Gets and sets the option set that dimension search will use.
            </summary>
            <value>
            Dimension search options.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchCompound">
            <summary>
            Gets and sets whether dimension search will include compound results.
            </summary>
            <value>
            Dimension search options.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchNavDescriptors">
            <summary>
            Gets and sets the navigation values that describe a navigation state
            that restrict the number of values that can be searched from.
            </summary>
            <value>
            Values that describe a navigation state restriction on the searchable values.
            </value>
            <remarks>
            By specifying a navigation restriction, the dimension search is not
            made from the entire space of values, but instead just the values that
            are still available as refinements from the specified navigation state.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchNavRangeFilters">
            <summary>
            Gets and sets the navigation range filters that restrict the
            dimension search.
            </summary>
            <value>
            The navigation range filters that restrict this dimension search
            query or <c>null</c> if none are present.
            </value>
            <remarks>
            Range filters limit the navigation record restrictions.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchNavRecordFilter">
            <summary>
            Gets and sets the record filter that will restrict the dimension
            search results.
            </summary>
            <value>
            The record filter for the dimension search query. <c>null</c>
            if none  is present.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchNavRecordStructureExpr">
            <summary>
            Gets and sets the structure expression that will restrict the dimension
            search results.
            </summary>
            <value>
            The structure expression for the dimension search query. <c>null</c>
            if none is present.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchDimension">
            <summary>
            Gets and sets the dimension which which the dimension search can
            search from.
            </summary>
            <value>
            The dimension Ids of the dimensions that the dimension search can
            search from.
            </value>
            <remarks>
            If none is specified, dimension search searches from all dimensions.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchDimensions">
            <summary>
            Gets and sets the dimensions which which the dimension search can
            search from.
            </summary>
            <value>
            The dimension Ids of the dimensions that the dimension search can
            search from.
            </value>
            <remarks>
            If none is specified, dimension search searches from all dimensions.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchNumDimValues">
            <summary>
            Gets and sets the number of values returned from each dimension
            for value search.
            </summary>
            <value>
            Number of values returned from each dimension. <c>-1</c> indicates
            all and is the default.
            </value>
            <remarks>
            Defaults to all (<see cref="F:Endeca.Navigation.ENEQuery.DIM_SEARCH_ALL_DIM_VALUES"/>).
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchResultsOffset">
            <summary>
            Gets and sets the offset with which the dimension search will begin returning
            results per dimension.
            </summary>
            <value>
            The offset into each dimension search result dimension.
            </value>
            <remarks>
            Defaults to <c>0</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.DimSearchRankResults">
            <summary>
            Gets and sets how the dimension search will order its results.
            </summary>
            <value>
            <c>true</c> means that relevance ranking is used to sort dimension 
            results, while <c>false</c> means that default dimension value ranking
            (alpha, numeric, or manual, as set in Developer Studio) is used.
            </value>
            <remarks>
            Default is <c>false</c>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQuery.LanguageId">
            <summary>
            Gets and sets the ISO639 language code to be used for this query.
            
            The language id is sent to the MDEX Engine when the query is
            executed, and specifies the language of any text portion of the 
            query. For example: search terms.
            </summary>
            <value>
            The String representing an ISO639 language code.
            </value>
            
        </member>
        <member name="T:Endeca.Navigation.ENEQueryInfo">
            <summary>
            An object that generates and stores logging-specific query information.
            </summary>
            <remarks>
            <b>ENEQueryInfo</b> is used to create and store logging-specific 
            query information, such as a session ID and query ID. The 
            resulting <b>ENEQueryInfo</b> object can then passed to 
            the Endeca MDEX Engine in an <see cref="T:Endeca.Navigation.ENEQuery"/> object
            by using the <see cref="P:Endeca.Navigation.ENEQuery.QueryInfo"/> setting property.
            The information in the <b>ENEQueryInfo</b> object is then
            entered into the Dgraph log by the MDEX Engine.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor. 
            Takes in <paramref name="sessionId"/> and 
            <paramref name="queryId"/> and sets the IDs as 
            logging parameters for the <c>sid</c> and
            <c>rid</c> keys respectively.
            </summary>
            <param name="sessionId">
            Session ID to pass on as logging information
            with the <c>sid</c> key.
            </param>
            <param name="queryId">
            Query ID to pass on as logging information
            with the <c>rid</c> key.
            </param>
            <remarks>
            Future versions of the MDEX Engine API may
            not support this constructor. Instead, this functionailty
            is preserved by calling the basic constructor for
            <see cref="T:Endeca.Navigation.ENEQueryInfo"/> followed by 
            <see cref="M:Endeca.Navigation.ENEQueryInfo.Add(System.String,System.String)"/> with the IDs and
            their respective keys.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryInfo.#ctor(System.String)">
            <summary>
            Constructor. Takes in <paramref name="sessionId"/>
            and sets it as the value for the <c>sid</c> key.
            The constructor automatically generates the query ID 
            and sets it as the value for the <c>rid</c> key.
            </summary>
            <param name="sessionId">
            Session ID to pass on as logging information
            with the <c>sid</c> key.
            </param>
            <remarks>
            Future versions of the MDEX Engine API may
            not support this constructor. Instead, this functionailty
            is preserved by calling the basic constructor for
            <see cref="T:Endeca.Navigation.ENEQueryInfo"/> followed by 
            <see cref="M:Endeca.Navigation.ENEQueryInfo.Add(System.String,System.String)"/> with the IDs and
            their respective keys.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryInfo.#ctor">
            <summary>
            Constructor. Basic constructor for the <see cref="T:Endeca.Navigation.ENEQueryInfo"/>.
            </summary>
            <remarks>
            Generates two key/value pairs automatically: the
            session ID (the <c>sid</c> key) and the query ID (the <c>rid</c> key).
            This functionality, however, is deprecated and instead developers 
            should generate their own IDs and use the 
            <see cref="M:Endeca.Navigation.ENEQueryInfo.Add(System.String,System.String)"/> method to set them in 
            the object.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryInfo.Add(System.String,System.String)">
            <summary>
            Adds a key/value pair to the <see cref="T:Endeca.Navigation.ENEQueryInfo"/> object.
            </summary>
            <param name="key">
            The key for the key/value pair to be added to 
            the <see cref="T:Endeca.Navigation.ENEQueryInfo"/> object.
            </param>
            <param name="val">
            The value for the <paramref name="key"/>.
            </param>
            <remarks>
            An application may call this method as many times
            as needed, as each call adds to the key/value pairs being
            stored in the <see cref="T:Endeca.Navigation.ENEQueryInfo"/> object.
            This method will discard keys or values that are 
            <c>NULL</c> or empty strings.
            <para>
            All the key/value pairs will be logged in the Dgraph log
            when the <see cref="T:Endeca.Navigation.ENEQueryInfo"/> object is passed
            to the MDEX Engine with the
            the <see cref="P:Endeca.Navigation.ENEQuery.QueryInfo"/> setting property.
            </para>
            <para>
            Note that the current implementation of the basic constructor 
            automatically generates two keys (<c>sid</c> and <c>rid</c>) 
            and their values. This current behavior is deprecated. Therefore, 
            developers should instead generate their own session and query IDs 
            and use this method to override the values of the <c>sid</c> 
            and <c>rid</c> keys.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryInfo.SessionIdentifier">
            <summary>
            Gets the value of the Session ID key or sets it to a specified String.
            </summary>
            <value>
            Session ID (the <c>sid</c> key value) of the query.
            </value>
            <remarks>
            This set property may not be supported in future versions
            of the MDEX Engine API. Use the 
            <see cref="M:Endeca.Navigation.ENEQueryInfo.Add(System.String,System.String)"/> method instead.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryInfo.QueryIdentifier">
            <summary>
            Gets the value of the Query ID key or sets it to a specified String.
            </summary>
            <value>
            Query ID of the query.
            </value>
            <remarks>
            This method may not be supported in future versions
            of the MDEX Engine API.  Instead, one should
            use the <see cref="M:Endeca.Navigation.ENEQueryInfo.Add(System.String,System.String)"/> method instead.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ENEQueryResults">
            <summary>
            Result object returned from a query to an Endeca MDEX Engine.
            </summary>
            <remarks>
            The <b>ENEQueryResults</b> object is returned by the
            <b>Query</b> method of the <see cref="T:Endeca.Navigation.HttpENEConnection"/> and
            <see cref="T:Endeca.Navigation.AuthHttpENEConnection"/> classes.
            The <b>ENEQueryResults</b> object encapsulates these four objects:
            <see cref="T:Endeca.Navigation.Navigation"/>, <see cref="T:Endeca.Navigation.ERecList"/>,
            <see cref="T:Endeca.Navigation.AggrERec"/>, and <see cref="T:Endeca.Navigation.DimensionSearchResult"/>.
            The <b>ENEQueryResults</b> object also contains the total time 
            (in seconds) that was spent waiting for the MDEX Engine to respond.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryResults.ContainsNavigation">
            <summary>
            Indicates whether this query results object contains a
            Navigation object.
            </summary>
            <returns>
            <c>true</c> if a <see cref="T:Endeca.Navigation.Navigation"/> object is present, or <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryResults.ContainsERecs">
            <summary>
            Indicates whether this query results object contains one or more
            Endeca records.
            </summary>
            <returns>
            <c>true</c> if at least one Endeca record (<see cref="T:Endeca.Navigation.ERec"/> object)
            is present, or <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryResults.ContainsERec">
            <summary>
            Indicates whether this query results object contains 
            an Endeca record.
            </summary>
            <returns>
            <c>true</c> if an Endeca record (<see cref="T:Endeca.Navigation.ERec"/> object) is 
            present, or <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryResults.ContainsAggrERec">
            <summary>
            Indicates whether this query results object contains an
            Endeca aggregated record.
            </summary>
            <returns>
            <c>true</c> if an aggregated record (<see cref="T:Endeca.Navigation.AggrERec"/> object)
            is present, or <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryResults.ContainsDimSearch">
            <summary>
            Indicates whether this query results object contains a
            dimension search results object.
            </summary>
            <returns>
            <c>true</c> if a dimension search results object is present, <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryResults.ContainsDimensionSearch">
            <summary>
            Indicates whether this query results object contains a
            dimension search results object.
            </summary>
            <returns>
            <c>true</c> if a dimension search object 
            (<see cref="T:Endeca.Navigation.DimensionSearchResult"/>) 
            is present, or <c>false</c> if not.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.Navigation">
            <summary>
            Gets the navigation object result.
            </summary>
            <value>
            A <see cref="T:Endeca.Navigation.Navigation"/> object, or <c>null</c> if none 
            is present in the <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.ERec">
            <summary>
            Gets the Endeca record object result.
            </summary>
            <value>
            The record requested (an <see cref="T:Endeca.Navigation.ERec"/> object), or <c>null</c> 
            if none is present in the <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </value>
            <remarks>
            If more than one record was requested, this method returns
            the first one. See <see cref="P:Endeca.Navigation.ENEQueryResults.ERecs"/> if more than
            one record was requested.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.ERecs">
            <summary>
            Gets the Endeca records for the result.
            </summary>
            <value>
            An <see cref="T:Endeca.Navigation.ERecList"/> object containing the records requested,
            or <c>null</c> if none is present in the <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </value>
            <remarks>
            If one or more records were requested, this method returns
            a record list containing all the records.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.AggrERec">
            <summary>
            Gets the Endeca aggregated record object result.
            </summary>
            <value>
            The aggregated record requested (an <see cref="T:Endeca.Navigation.AggrERec"/> object), 
            or <c>null</c> if none is present in the <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.DimSearch">
            <summary>
            Gets the dimension search object result.
            </summary>
            <value>
            Dimension search result (<see cref="T:Endeca.Navigation.DimSearchResult"/> object), 
            or <c>null</c> if none is present in the <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.DimensionSearch">
            <summary>
            Gets the dimension search object result.
            </summary>
            <value>
            Dimension search result (<see cref="T:Endeca.Navigation.DimensionSearchResult"/> object), 
            or <c>null</c> if none is present in the <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.TotalNetworkAndComputeTime">
            <summary>
            Gets the total number of seconds spent waiting for the MDEX
            Engine to respond to all queries.
            </summary>
            <value>
            The total time includes network communication time and computation time, 
            plus time spent waiting in the MDEX Engine's request queue.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ENEQueryResults.NavigationEngineRequests">
            <summary>
            Gets an enumerator on the underlying requests that were made
            to the MDEX Engine.
            </summary>
            <value>
            Enumerator to the underlying MDEX Engine requests.
            </value>
            <remarks>
            Each member of the enumerator is of type <see cref="T:System.String"/>.
            This enumerator is meant to be used for debugging.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ENEQueryToolkit">
            <summary>
            <b>ENEQueryToolkit</b> provides static methods for managing the value of
            the primary URL query parameter in a navigation query. This parameter specifies
            the list of refinement dimensions that were used to generate the current
            query results. Managing the parameter's value allows you to maintain 
            application state.
            </summary>
            <remarks>
            With <b>ENEQueryToolkit</b>, you can update the list of refinement dimensions
            to reflect the user's latest refinement selection. That selection may require the
            addition of a new refinement dimension, the removal of a dimension, or the
            substitution of one dimension ID for another (as in the case where the user
            selects a refinement from a nested dimension hierarchy).
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryToolkit.SelectRefinement(Endeca.Navigation.Navigation,Endeca.Navigation.DimVal)">
            <summary>
            Method to generate the navigation descriptors of the 
            <see cref="T:Endeca.Navigation.ENEQuery"/> for a selected refinement.
            Generates the navigation descriptors of the <see cref="T:Endeca.Navigation.ENEQuery"/>
            for a selected refinement.																																			  * descriptors that are ancestors of the refinements are removed.
            </summary>
            <param name="n">
            The current <see cref="T:Endeca.Navigation.Navigation"/> object.
            </param>
            <param name="refinement">
            The refinement dimension value (a <see cref="T:Endeca.Navigation.DimVal"/> object)
            that will be used to reduce the current record set.
            </param>
            <returns>
            A <see cref="T:Endeca.Navigation.DimValIdList"/> object containing the IDs of the
            new navigation query descriptors after the addition of the
            specified refinement value to the existing set of navigation
            descriptors in the <see cref="T:Endeca.Navigation.Navigation"/> object
            specified by the <paramref name="n"/> parameter.
            </returns>
            <remarks>
            This method adds a refinement value to
            the set of navigation descriptors already existing in
            a <see cref="T:Endeca.Navigation.Navigation"/> object and generates a new set 
            of navigation values for the <see cref="T:Endeca.Navigation.ENEQuery"/>. 
            In general, new refinements are placed at the end of 
            the descriptor list. Existing descriptors that are 
            ancestors of the refinements are removed.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryToolkit.SelectAncestor(Endeca.Navigation.Navigation,Endeca.Navigation.DimVal,Endeca.Navigation.DimVal)">
            <summary>
            Generates the navigation descriptors of the 
            <see cref="T:Endeca.Navigation.ENEQuery"/> for a selected ancestor. 
            </summary>
            <param name="n">
            The current <see cref="T:Endeca.Navigation.Navigation"/> object.
            </param>
            <param name="ancestor">
            The ancestor (a <see cref="T:Endeca.Navigation.DimVal"/> object) which will
            be used to generate new navigation values.
            </param>
            <param name="descriptor">
            The descriptor (a <see cref="T:Endeca.Navigation.DimVal"/> object) which
            will be replaced with its ancestor.
            </param>
            <returns>
            A <see cref="T:Endeca.Navigation.DimValIdList"/> object containing the IDs of the
            new navigation query descriptors after the current navigation
            descriptor is replaced with its ancestor.
            </returns>
            <remarks>
            This method replaces the specified navigation descriptor
            (the <paramref name="descriptor"/> parameter) with the ancestor
            dimension value (the <paramref name="ancestor"/> parameter), and 
            generates a new set of navigation values for the 
            <see cref="T:Endeca.Navigation.ENEQuery"/>. The order of the descriptors 
            remains the same as the order in the current 
            <see cref="T:Endeca.Navigation.Navigation"/> object. However, the specified 
            ancestor is substituted for the specified descriptor.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryToolkit.RemoveDescriptor(Endeca.Navigation.Navigation,Endeca.Navigation.DimVal)">
            <summary>
            Generates the navigation descriptors of the 
            <see cref="T:Endeca.Navigation.ENEQuery"/> after removing a descriptor.
            </summary>
            <param name="n">
            The current <see cref="T:Endeca.Navigation.Navigation"/> object.
            </param>
            <param name="descriptor">
            The descriptor (a <see cref="T:Endeca.Navigation.DimVal"/> object) which
            will be removed.
            </param>
            <returns>
            A <see cref="T:Endeca.Navigation.DimValIdList"/> object containing the IDs of 
            the new navigation query descriptors after the removal of the
            descriptor (specified by the <paramref name="descriptor"/> parameter).
            </returns>
            <remarks>
            Removes the specified navigation descriptor 
            (the <paramref name="descriptor"/> parameter) from the 
            set of descriptors in the <see cref="T:Endeca.Navigation.Navigation"/> object
            and generates a new set of navigation values for the <see cref="T:Endeca.Navigation.ENEQuery"/>.
            The order of the descriptors in the new navigation query 
            remains the same as the order in the current <see cref="T:Endeca.Navigation.Navigation"/>
            object (specified by the <paramref name="n"/> parameter), 
            with the descriptor removed. Ancestors of the descriptor 
            do not remain after the descriptor has been removed.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ENEQueryToolkit.IsImplicitRefinement(Endeca.Navigation.Dimension,Endeca.Navigation.DimVal)">
            <summary>
            Determines if a dimension value refinement is
            an implicit refinement within the context of a
            given dimension.
            </summary>
            <param name="dim">
            The dimension (a <see cref="T:Endeca.Navigation.Dimension"/> object) 
            in which the given refinement should be checked.
            </param>
            <param name="refinement">
            The refinement (a <see cref="T:Endeca.Navigation.DimVal"/> object) 
            to check for contraction.
            </param>
            <returns>
            <c>true</c> if <paramref name="refinement"/> is an
            implicit refinement within the dimension <paramref name="dim"/>,
            or <c>false</c> otherwise.
            </returns>
            <remarks> 
            An implicit refinement is one that is assigned to all records visible in
            the current navigation state. In other words, an implicit refinement is 
            one whose selection will not actually narrow the current set of result records.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ERec">
            <summary>
            <b>ERec</b> class is composed of properties and dimension values it is tagged by.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.ERec.Id">
            <summary>
            Gets the ID for this record.
            </summary>
            <value>
            The ID for this record.
            </value>
            <exception cref="T:System.Exception">Thrown when the specification is not a numeric value.</exception>
        </member>
        <member name="P:Endeca.Navigation.ERec.Spec">
            <summary>
            Gets the specification of the record.
            </summary>
            <value>
            The specification of the record.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERec.Properties">
            <summary>
            Gets the properties for this record.  If there are no properties 
            for a record, an empty <see cref="T:Endeca.Navigation.PropertyMap"/> will be returned.
            </summary>
            <value>
            Properties for this record.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERec.DimValues">
            <summary>
            Gets the dimension values tagged to the record.
            </summary>
            <value>
            The values tagged to the record are organized by dimension.  
            An empty list is returned if there are no dimension values 
            tagged to the record.
            </value>
            <remarks>
            The dimension values are organized by dimensions and each value manifested 
            as a position which includes the value and its ancestors in the 
            dimension's hierarchy.  Based on how this record was obtained, 
            these tagged values may or may not be present.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ERecCompoundSearchKey">
            <summary>
            Key with which a record set can be or is text group searched by.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKey.IsActive">
            <summary>
            Returns whether the key is active.  Returns whether this text search
            key is being applied.
            </summary>
            <returns>
            <c>true</c> if the key is being applied, and <c>false</c> if it is not.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKey.Name">
            <summary>
            Get the name of this text group search key.
            </summary>
            <value>
            Name of this text search key or <c>null</c> if it is not specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKey.SearchTerms">
            <summary>
            Returns search terms that were used with this key.
            </summary>
            <value>
            Search terms applied with this key, and <c>null</c> if 
            key is not active.
            </value>
            <remarks>
            Only returns terms if active else <c>null</c>.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ERecCompoundSearchKeyList">
            <summary>
            Collection of record compound search keys exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.GetKey(System.String)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERecCompoundSearchKey"/> with the name <paramref name="name"/>.
            </summary>
            <param name="name">
            Name of the <see cref="T:Endeca.Navigation.ERecCompoundSearchKey"/> to get.
            </param>
            <returns>
            The record compound search key specified with <paramref name="name"/>.  Returns 
            <c>null</c> if key with specified <paramref name="name"/> could not be found.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecCompoundSearchKeyList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKeyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKeyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKeyList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERecCompoundSearchKey"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.ERecCompoundSearchKey"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKeyList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKeyList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecCompoundSearchKeyList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ERecEnumerator">
            <summary>
            List containing <see cref="T:Endeca.Navigation.ERec"/> or <see cref="T:Endeca.Navigation.AggrERec"/> objects exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecEnumerator.MoveNext">
            <summary>
            Advances to the next <see cref="T:Endeca.Navigation.ERec"/>.
            </summary>
            <returns>
            'true' if additional records are available from this <see cref="T:Endeca.Navigation.ERecEnumerator"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecEnumerator.Reset">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecEnumerator.HasNext">
            <summary>
            Return true if additional <see cref="T:Endeca.Navigation.ERec"/>s are available from this <see cref="T:Endeca.Navigation.ERecEnumerator"/>.
            </summary>
            <returns>
            'true' if additional records are available from this <see cref="T:Endeca.Navigation.ERecEnumerator"/>.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.ERecEnumerator.Current">
            <summary>
            Gets the current <see cref="T:Endeca.Navigation.ERec"/>. 
            </summary>
            <value>
            The current <see cref="T:Endeca.Navigation.ERec"/> or <see cref="T:Endeca.Navigation.AggrERec"/> for this <see cref="T:Endeca.Navigation.ERecEnumerator"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecEnumerator.Count">
            <summary>
            Gets the number of <see cref="T:Endeca.Navigation.ERec"/>s available from this <see cref="T:Endeca.Navigation.ERecEnumerator"/>.
            </summary>
            <value>
            The count of <see cref="T:Endeca.Navigation.ERec"/> or <see cref="T:Endeca.Navigation.AggrERec"/> available from this <see cref="T:Endeca.Navigation.ERecEnumerator"/>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.ERecIdList">
            <summary>
            List of record specifications.  Primarily used to generate URLs and 
            MDEX Engine queries.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.#ctor">
            <summary>
            Default constructor. Creates a new, empty <b>ERecIdList</b>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.#ctor(System.Int64)">
            <summary>
            Constructor that takes a single ID and makes a record ID list with
            only one element.
            </summary>
            <param name="erecId">
            Single record ID member of this list.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.#ctor(System.String)">
            <summary>
            Constructor that takes a string-based set of record specifications and parses 
            and populates the list with the string.  
            </summary>
            <param name="ids">
            Space-delimited sequence of record specifications.
            </param>
            <remarks>
            The string is expected to be a space-delimited sequence of specifications.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.AddERecId(System.Int64)">
            <summary>
            Adds a record ID to the list.
            </summary>
            <param name="id">
            ID to add to the list.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.AddERecSpec(System.String)">
            <summary>
            Adds a record specification to the list.
            </summary>
            <param name="spec">
            Specification to add to the list.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.ToString">
            <summary>
            Generates the string-based representation of the list by returning
            a space-delimited sequence of record IDs.
            </summary>
            <returns>
            Space-delimited sequence of record IDs.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.ERecIdList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecIdList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.Add(System.Object)">
            <summary>
            Adds an object to the end of the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Int64"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.ERecIdList"/> index at which the <paramref name="item"/>
            has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.Clear">
            <summary>
            Removes all the elements from the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Endeca.Navigation.ERecIdList"/> at the
            specified index.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Int64"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.Remove(System.Object)">
            <summary>
            Removes the first occurence of a specified object from the
            <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecIdList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecIdList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecIdList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecIdList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecIdList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecIdList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecIdList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecIdList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecIdList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecIdList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecIdList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecIdList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecIdList.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Int64"/> at the specified index.  
            </summary>
            <param name="index">
            The zero-based index of the element to get or set.
            </param>
            <value>
            The <see cref="T:System.Int64"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecIdList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecIdList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecIdList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecIdList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecIdList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecIdList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ERecList">
            <summary>
            List of Endeca records exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.ERecList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.ERecList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.ERecList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERec"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the <see cref="T:Endeca.Navigation.ERec"/> to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.ERec"/> at the specified <paramref name="index"/>.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ERecRollupKey">
            <summary>
            Key with which a record set can or is rolled up by.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKey.IsActive">
            <summary>
            Returns whether the key is active.  Returns whether this rollup key 
            is being applied.
            </summary>
            <returns>
            Returns <c>true</c> if the key is being applied to records, 
            and <c>false</c> if it is not.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKey.Name">
            <summary>
            Get the name of this rollup key.
            </summary>
            <value>
            Name of this rollup key or <c>null</c> if it is not 
            specified.
            </value>
        </member>
        <member name="T:Endeca.Navigation.ERecRollupKeyList">
            <summary>
            Collection of record rollup keys exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.GetKey(System.String)">
            <summary>
            Gets <see cref="T:Endeca.Navigation.ERecRollupKey"/> with the name <paramref name="name"/>.
            </summary>
            <param name="name">
            Name of the <see cref="T:Endeca.Navigation.ERecRollupKey"/> to get.
            </param>
            <returns>
            Returns the <see cref="T:Endeca.Navigation.ERecRollupKey"/> specified with name.  Returns 
            <c>null</c> if key with specified name could not be found.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecRollupKeyList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKeyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKeyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKeyList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERecRollupKey"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.ERecRollupKey"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKeyList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKeyList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecRollupKeyList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ERecSearch">
            <summary>
            Class representing a search on a navigation record set.
            </summary>
            <remarks>
            A record search is composed of three elements:
            <para>
            <list type="bullet">
            <item>
              <term>search key</term>
              <description>The name of an Endeca property or dimension
              (if enabled for record search) or an Endeca search interface.
              The search key indicates which field of the records
              to search the terms against.
              </description>
            </item>
            <item>
              <term>terms</term>
              <description>The strings that are being searched, such 
              as <c>raspberry flavor</c> (which may be a quoted phrase).
              </description>
            </item>
            <item>
              <term>options</term>
              <description>The search options, such as the search mode 
              (e.g., <c>mode matchany</c>) and relevance ranking options.
              This element is optional and can therefore be <c>null</c>.
              </description>
            </item>
            </list>
            </para>
            <para>
            Note that <b>ERecSearch</b> objects are encapsulated in <see cref="T:Endeca.Navigation.ERecSearchList"/>
            objects when sent to or returned from the MDEX Engine.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ERecSearch.#ctor">
            <summary>
            Default empty constructor.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecSearch.#ctor(System.String,System.String)">
            <summary>
            Constructor specifying the key and the terms of the search.
            </summary>
            <param name="key">
            The key (an Endeca property, dimension, or search interface) of
            the records with which to search.
            </param>
            <param name="terms">
            The terms of the search.
            </param>
            <remarks>
            The search options are set to <c>null</c>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ERecSearch.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor specifying the key, terms, and options of the search.
            </summary>
            <param name="key">
            The key (an Endeca property, dimension, or search interface) of
            the records with which to search.
            </param>
            <param name="terms">
            The terms of the search.
            </param>
            <param name="opts">
            Sequence of key/value pairs delimited by the '+' character.
            </param>
        </member>
        <member name="P:Endeca.Navigation.ERecSearch.Terms">
            <summary>
            Gets the terms of this <see cref="T:Endeca.Navigation.ERecSearch"/>.
            </summary>
            <value>
            The terms of the <see cref="T:Endeca.Navigation.ERecSearch"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearch.Key">
            <summary>
            Gets the key of this <see cref="T:Endeca.Navigation.ERecSearch"/>.
            </summary>
            <value>
            The key (an Endeca property, dimension, or search interface) 
            of the <see cref="T:Endeca.Navigation.ERecSearch"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearch.Opts">
            <summary>
            Gets the options of this <see cref="T:Endeca.Navigation.ERecSearch"/>
            </summary>
            <value>
            The options of the <see cref="T:Endeca.Navigation.ERecSearch"/>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.ERecSearchKey">
            <summary>
            Key with which a record set can be or is text searched by.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKey.IsActive">
            <summary>
            Returns whether the key is active.  Returns whether this text search
            key is being applied.
            </summary>
            <returns>
            Returns <c>true</c> if the key is being applied, and 
            <c>false</c> if it is not.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKey.Name">
            <summary>
            Get the name of this text search key.
            </summary>
            <value>
            Name of this text search key or <c>null</c> if it is 
            not specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKey.SearchTerms">
            <summary>
            Returns search terms that were used with this key.
            </summary>
            <value>
            Search terms applied with this key and <c>null</c> if 
            key is not active.
            </value>
            <remarks>
            Only returns terms if active else <c>null</c>.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ERecSearchKeyList">
            <summary>
            Collection of record search keys exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.GetKey(System.String)">
            <summary>
            Gets <paramref name="ERecSearchKey"/> with the name <paramref name="name"/>.
            </summary>
            <param name="name">
            Name of the <paramref name="ERecSearchKey"/> to get.
            </param>
            <returns>
            Returns the <paramref name="ERecSearchKey"/> specified with 
            <paramref name="name"/>.  Returns <c>null</c> if key could with 
            <paramref name="name"/> could not be found.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchKeyList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKeyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKeyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKeyList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERecSearchKey"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.ERecSearchKey"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKeyList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKeyList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchKeyList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ERecSearchList">
            <summary>
            Class that encapsulates a collection of <see cref="T:Endeca.Navigation.ERecSearch"/> objects,
            each of which represents a record search.
            </summary>
            <remarks>
            <b>ERecSearchList</b> objects are returned from the
            MDEX Engine by the <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearches"/> 
            getter property. The setter version of <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearches"/>
            will set an <b>ERecSearchList</b> list of record searches to perform 
            on the records of a navigation query. Note that the 
            <see cref="T:Endeca.Navigation.UrlENEQuery"/> class inherits the property
            from <see cref="T:Endeca.Navigation.ENEQuery"/>.
            <para>
            If required by an application, an <b>ERecSearchList</b> object
            can be created with the default constructor and the list can then
            be populated with <see cref="T:Endeca.Navigation.ERecSearch"/> objects by using
            the <see cref="M:Endeca.Navigation.ERecSearchList.Add(System.Int32,System.Object)"/> method.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.#ctor">
            <summary>
            Default constructor that creates an empty list.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Set(System.Int32,System.Object)">
            <summary>
            Replaces the <see cref="T:Endeca.Navigation.ERecSearch"/> at the specified position 
            in this list with a new <see cref="T:Endeca.Navigation.ERecSearch"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to set.
            </param>
            <param name="elementAt">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to be set.
            </param>
            <returns>
            Returns the <see cref="T:Endeca.Navigation.ERecSearch"/> that was previously at <paramref name="index"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Add(System.Int32,System.Object)">
            <summary>
            Inserts the <see cref="T:Endeca.Navigation.ERecSearch"/> object at the specified position in this list.
            </summary>
            <param name="index">
            The zero-based index of the element to add.
            </param>
            <param name="elementAt">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to be inserted.
            </param>
            <remarks>
            Shifts the element currently at that position (if any) and any 
            subsequent elements to the right (adds one to their indices).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Remove(System.Int32)">
            <summary>
            Removes the <see cref="T:Endeca.Navigation.ERecSearch"/> at the specified position in this list.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.ERecSearch"/> previously at position <paramref name="index"/>.
            </returns>
            <remarks>
            Shifts any subsequent elements to the left (subtracts one from 
            their indices).
            </remarks>
            <exception cref="T:System.IndexOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Contains(System.Object)">
            <summary>
            Determines whether an <see cref="T:Endeca.Navigation.ERecSearch"/> is in 
            the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to locate in the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of an
            <see cref="T:Endeca.Navigation.ERecSearch"/> in the <see cref="T:Endeca.Navigation.ERecSearchList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to locate in the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecSearchList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an <see cref="T:Endeca.Navigation.ERecSearch"/> object to the end of the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> index at which the <paramref name="item"/>
            has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Clear">
            <summary>
            Removes all the <see cref="T:Endeca.Navigation.ERecSearch"/> elements from the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an <see cref="T:Endeca.Navigation.ERecSearch"/> object into the <see cref="T:Endeca.Navigation.ERecSearchList"/> at the
            specified index.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to insert.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.Remove(System.Object)">
            <summary>
            Removes the first occurence of a specified <see cref="T:Endeca.Navigation.ERecSearch"/> object 
            from the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.ERecSearch"/> to remove from <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:Endeca.Navigation.ERecSearch"/> element at the 
            specified index of the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSearchList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecSearchList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecSearchList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecSearchList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecSearchList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSearchList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecSearchList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecSearchList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecSearchList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecSearchList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchList.Item(System.Int32)">
            <summary>
            Gets and sets the <see cref="T:Endeca.Navigation.ERecSearch"/> at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to get or set.
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.ERecSearch"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchList.Count">
            <summary>
            Gets the number of <see cref="T:Endeca.Navigation.ERecSearch"/> objects 
            actually contained in the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </summary>
            <value>
            The number of <see cref="T:Endeca.Navigation.ERecSearch"/> objects 
            actually contained in the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecSearchList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecSearchList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSearchList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecSearchList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ERecSortKey">
            <summary>
            Key with which a record set can or is sorted by.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ERecSortKey.ALPHA_NUM_SORT_KEY">
            <summary>
            This is a sort key for a non-Geocode typed property.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ERecSortKey.GEOCODE_SORT_KEY">
            <summary>
            This is a sort key for a Geocode typed property.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ERecSortKey.ASCENDING">
            <summary>
            Sort key application in ascending direction.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ERecSortKey.NOT_ACTIVE">
            <summary>
            Sort key not applied.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ERecSortKey.DESCENDING">
            <summary>
            Sort key application in descending direction.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.#ctor(System.String,System.Boolean)">
            <summary>
            Create a new alpha-numeric sort key that specifies a sort
            on a property and the order with which to sort with regard
            to that property.
            </summary>
            <param name = "name">
            The name to assign to the sort key.
            </param>
            <param name="isAscending">
            A bool specifying whether this sort key is ascending.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.#ctor(System.String,System.Boolean,System.Double,System.Double)">
            <summary>
            Create a new geocode sort key that specifies a sort on a
            geocode property, the reference geocode and the order with
            which to sort with regard to that property.
            </summary>
            <param name = "name">
            The name to assign to the sort key.
            </param>
            <param name="isAscending">
            A bool specifying whether this sort key is ascending.
            </param>
            <param name="lat">
            The latitude of the reference point
            for this geocode sort key.
            </param>
            <param name="lon">
            The longitude of the reference point for this
            geocode sort key.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.IsActive">
            <summary>
            Returns whether the key is active.  Returns whether this sort key 
            is being applied.
            </summary>
            <returns>
            <c>true</c> if the key is being applied to records, and 
            <c>false</c> if it is not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.GetOrder">
            <summary>
            Gets the direction the sort key has been applied to record set if 
            the sort key has been applied, is active.
            </summary>
            <returns>
            Returns <see cref="F:Endeca.Navigation.ERecSortKey.ASCENDING"/> if the sort key has been
            applied in ascending order and <see cref="F:Endeca.Navigation.ERecSortKey.DESCENDING"/> if
            the sort key has been applied in descending order. 
            Returns <see cref="F:Endeca.Navigation.ERecSortKey.NOT_ACTIVE"/> if the sort key is not 
            being applied.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.SetOrder(System.Boolean)">
            <summary>
            Sets whether or not the sort on this key will be ascending.
            </summary>
            <param name="isAscending">
            Boolean value to determine if the sort on this key will
            be ascending.</param>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.SetGeocode(System.Double,System.Double)">
            <summary>
            Sets the coordinates of the reference point if this is
            a geocode sort key.
            </summary>
            <param name="lat">The latitude to set for the reference point.</param>
            <param name="lon">The longitude to set for the reference point.</param>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.GetReferenceLatitude">
            <summary>
            Gets the latitude of the reference point for a geocode sort key.
            It is an error to call this method if <c>GetType() != GEOCODE_SORT_KEY</c>.
            </summary>
            <returns>
            <c>double</c> - The latitude of the reference point. Positive
            values represent north latitude and negative values 
            represent south latitude.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.GetReferenceLongitude">
            <summary>
            Gets the longitude of the reference point for a geocode sort key.
            It is an error to call this method if 
            <c>GetType() != GEOCODE_SORT_KEY</c>.
            </summary>
            <returns>
            <c>double</c> - The longitude of the reference point. Positive
            values represent east longitude and negative values represent
            west longitude.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKey.CompareTo(System.Object)">
            <summary>
            Compares the current <c>ERecSortKey</c> to the specified <c>ERecSortKey</c>object.
            </summary>
            <param name="obj">
            The object to compare with the current object.
            </param>
            <returns>
            Returns 1 if the key of the current object is greater than the key of the sent in object. 
            Returns -1 if the key of the current object is less than the key of the sent in object.
            Otherwise, this method returns the result of comparing the names of the sort keys.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKey.Name">
            <summary>
            Gets the name of this sort key.
            </summary>
            <value>
            Name of this sort key or <c>null</c> if it is not specified.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKey.Type">
            <summary>
            Gets the type of the sort key.
            </summary>
            <value>
            The sort key type.
            </value>
        </member>
        <member name="T:Endeca.Navigation.ERecSortKeyList">
            <summary>
            Collection of record sort keys exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Set(System.Int32,System.Object)">
            <summary>
            Replaces the element at the specified position in this list with 
            the specified element.
            </summary>
            <param name="index">
            The zero-based index of the element to set.
            </param>
            <param name="elementAt">
            The element to be set.
            </param>
            <returns>
            Returns the element that was previously at <paramref name="index"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Add(System.Int32,System.Object)">
            <summary>
            Inserts the specified element at the specified position in this list.
            </summary>
            <param name="index">
            The zero-based index of the element to add.
            </param>
            <param name="elementAt">
            The element to be inserted.
            </param>
            <remarks>
            Shifts the element currently at that position (if any) and any 
            subsequent elements to the right (adds one to their indices).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="elementAt"/> already exists in the list.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Remove(System.Int32)">
            <summary>
            Removes the element at the specified position in this list.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <returns>
            The element previously at position <paramref name="index"/>.
            </returns>
            <remarks>
            Shifts any subsequent elements to the left (subtracts one from 
            their indices). Returns the element that was removed from the list.
            </remarks>
            <exception cref="T:System.IndexOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.GetKey(System.String)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.ERecSortKey"/> with the name <paramref name="name"/>.
            </summary>
            <param name="name">
            THe name of the <see cref="T:Endeca.Navigation.ERecSortKey"/> to get.
            </param>
            <returns>
            Returns the <see cref="T:Endeca.Navigation.ERecSortKey"/> with name <paramref name="name"/>.
            Returns <c>null</c> if key with specified name could not be found.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.ERecSortKeyList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.ERecSortKeyList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an object to the end of the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> index at which the <paramref name="item"/>
            has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Clear">
            <summary>
            Removes all the elements from the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Endeca.Navigation.ERecSortKeyList"/> at the
            specified index.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.Remove(System.Object)">
            <summary>
            Removes the first occurence of a specified object from the
            <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.ERecSortKeyList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.ERecSortKeyList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.ERecSortKeyList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.ERecSortKeyList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.ERecSortKeyList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.ERecSortKeyList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKeyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecSortKeyList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKeyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKeyList.Item(System.Int32)">
            <summary>
            Gets and sets the <see cref="T:Endeca.Navigation.ERecSortKey"/> at the specified index.
            </summary>
            <param name="index">
            The zero-based index of the element to get or set.
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.ERecSortKey"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKeyList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKeyList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.ERecSortKeyList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ERecSortKeyList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.ERecSortKeyList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.ESearchAutoSuggestion">
            <summary>
            <b>ESearchAutoSuggestion</b> represents a single alternate spelling suggestion made
            by the Endeca MDEX Engine when a record search is performed.
            </summary>
            <remarks>
            A list of <b>ESearchAutoSuggestion</b>b&gt; objects can be obtained 
            by using the <see cref="P:Endeca.Navigation.ESearchReport.AutoSuggestions"/> get property.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ESearchAutoSuggestion.GetDidSuggestionIncludeSpellingCorrection">
            <summary>
            Determines whether this suggestion includes
            one or more terms that were spell-corrected by
            the Spelling Correction feature of the Endeca 
            MDEX Engine.
            </summary>
            <value>
            <c>true</c> if the terms were spell-corrected,
            or <c>false</c> otherwise.
            </value>
            <remarks>
            This method is useful if the application developer
            wants to know what features engaged in the
            MDEX Engine when generating a suggestion.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ESearchAutoSuggestion.SetDidSuggestionIncludeSpellingCorrection(System.Boolean)">
            <summary>
            Sets a Boolean value as to whether this suggestion includes
            terms that were spell-corrected.
            </summary>
            <param name="_includedSpelling">
            <c>true</c> if the terms were spell-corrected,
            or <c>false</c> otherwise.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ESearchAutoSuggestion.GetDidSuggestionIncludeAutomaticPhrasing">
            <summary>
            Determines whether this suggestion includes
            one or more contiguous subsequences of terms that 
            were phrased by the Automatic Phrasing feature
            of the Endeca MDEX Engine.
            </summary>
            <value>
            <c>true</c> if the terms were auto-phrased,
            or <c>false</c> otherwise.
            </value>
            <remarks>
            This method is useful if the application developer
            wants to know what features engaged in the
            MDEX Engine when generating a suggestion.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ESearchAutoSuggestion.SetDidSuggestionIncludeAutomaticPhrasing(System.Boolean)">
            <summary>
            Sets a Boolean value as to whether this suggestion includes
            terms that were auto-phrased.
            </summary>
            <param name="_includedAutophrase">
            <c>true</c> if the terms were auto-phrased,
            or <c>false</c> otherwise.
            </param>
        </member>
        <member name="P:Endeca.Navigation.ESearchAutoSuggestion.Terms">
            <summary>
            Returns the terms for the spelling suggestion.
            </summary>
            <value>
            The terms for the spelling suggestion.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ESearchAutoSuggestion.IncludedSpellingCorrection">
            <summary>
            Gets and sets whether this suggestion includes
            terms that were spell-corrected.
            </summary>
            <value>
            <c>true</c> if the terms were spell-corrected,
            or <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ESearchAutoSuggestion.IncludedAutomaticPhrasing">
            <summary>
            Gets and sets whether this suggestion includes
            terms that were auto-phrased.
            </summary>
            <value>
            <c>true</c> if the terms were auto-phrased,
            or <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:Endeca.Navigation.ESearchDYMSuggestion">
            <summary>
            <b>ESearchDYMSuggestion</b> represents a single alternate spelling suggestion 
            made by the Endeca MDEX Engine when a text search is performed.
            </summary>
            <remarks>
            A list of <b>ESearchDYMSuggestion</b>b&gt; objects can be obtained 
            by using the <see cref="P:Endeca.Navigation.ESearchReport.DYMSuggestions"/> get property.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ESearchDYMSuggestion.GetDidSuggestionIncludeSpellingCorrection">
            <summary>
            Determines whether this suggestion includes
            one or more terms that were spell-corrected by
            the Spelling Correction feature of the Endeca 
            MDEX Engine.
            </summary>
            <value>
            <c>true</c> if the terms were spell-corrected,
            or <c>false</c> otherwise.
            </value>
            <remarks>
            This method is useful if the application developer
            wants to know what features engaged in the
            MDEX Engine when generating a suggestion.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ESearchDYMSuggestion.SetDidSuggestionIncludeSpellingCorrection(System.Boolean)">
            <summary>
            Sets a Boolean value as to whether this suggestion includes
            terms that were spell-corrected.
            </summary>
            <param name="_includedSpelling">
            <c>true</c> if the terms were spell-corrected,
            or <c>false</c> otherwise.
            </param>
        </member>
        <member name="M:Endeca.Navigation.ESearchDYMSuggestion.GetDidSuggestionIncludeAutomaticPhrasing">
            <summary>
            Determines whether this suggestion includes
            one or more contiguous subsequences of terms that 
            were phrased by the Automatic Phrasing feature
            of the Endeca MDEX Engine.
            </summary>
            <value>
            <c>true</c> if the terms were auto-phrased,
            or <c>false</c> otherwise.
            </value>
            <remarks>
            This method is useful if the application developer
            wants to know what features engaged in the
            MDEX Engine when generating a suggestion.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.ESearchDYMSuggestion.SetDidSuggestionIncludeAutomaticPhrasing(System.Boolean)">
            <summary>
            Sets a Boolean value as to whether this suggestion includes
            terms that were auto-phrased.
            </summary>
            <param name="_includedAutophrase">
            <c>true</c> if the terms were auto-phrased,
            or <c>false</c> otherwise.
            </param>
        </member>
        <member name="P:Endeca.Navigation.ESearchDYMSuggestion.Terms">
            <summary>
            Returns the terms for the spelling suggestion
            </summary>
            <value>
            The terms for the spelling suggestion
            </value>
        </member>
        <member name="P:Endeca.Navigation.ESearchDYMSuggestion.NumMatchingResults">
            <summary>
            Returns the number of results that will match if this suggestion
            is used in a search.
            </summary>
            <value>
            The number of results that will match when using this suggestion.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ESearchDYMSuggestion.IncludedSpellingCorrection">
            <summary>
            Gets and sets whether this suggestion includes
            terms that were spell-corrected.
            </summary>
            <value>
            <c>true</c> if the terms were spell-corrected,
            or <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ESearchDYMSuggestion.IncludedAutomaticPhrasing">
            <summary>
            Gets and sets whether this suggestion includes
            terms that were auto-phrased.
            </summary>
            <value>
            <c>true</c> if the terms were auto-phrased,
            or <c>false</c> otherwise.
            </value>
        </member>
        <member name="T:Endeca.Navigation.ESearchReport">
            <summary>
            <b>ESearchReport</b> objects contain detailed information about record searches.
            </summary>
            <remarks>
            Use <see cref="P:Endeca.Navigation.Navigation.ESearchReports"/> to obtain an <see cref="T:System.Collections.IDictionary"/> of
            <b>ESearchReport</b> objects.
            <para>
            A single <b>ESearchReport</b> object contains information about a single search
            key. If a query is submitted to the Endeca MDEX Engine with multiple keys, 
            <see cref="P:Endeca.Navigation.Navigation.ESearchReports"/> will return an <see cref="T:System.Collections.IDictionary"/>
            that contains an <b>ESearchReport</b> for each search term that was submitted.
            </para>
            <para>
            For example, in this query:
            <code>
            N=0&amp;Ntk=Name|Flavors&amp;Ntt=merlot|fuity
            </code>
            the resulting IDictionary will have two entries: one for the <c>Name</c>
            search key and one for the <c>Flavors</c> search key.
            </para>
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_ALL">
            <summary>
             Match all user search terms (i.e., perform a conjunctive search). This is the default mode. 
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_ANY">
            <summary> 
             Match at least one user search term.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_PARTIAL">
            <summary>
             Match some user search terms. 
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_PARTIAL_MAX">
            <summary> 
             Match a maximal subset of user search terms.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_BOOLEAN">
            <summary>
             Match using a Boolean query. 
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_ALL_ANY">
            <summary> 
             Match all user search terms if possible, otherwise match at least one.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_ALL_PARTIAL">
            <summary> 
             Match all user search terms if possible, otherwise match some.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.ESearchReport.MODE_UNKNOWN">
            <summary>
             The mode is unknown. 
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ESearchReport.isValid">
            <summary>
            Determines if the search was a valid search.
            </summary>
            <value>
            <c>true</c> if the search was a valid search, <c>false</c> otherwise
            </value>
            <remarks>
            If <c>false</c> is returned, check the value of <see cref="P:Endeca.Navigation.ESearchReport.ErrorMessage"/>
            for a description of the error.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.Key">
            <summary>
            Gets the name of the Endeca Dimension or Property key 
            used in the search.
            </summary>
            <value>
            The name of the search key, or <c>null</c> if
            no key has been specified.
            </value>
            <remarks>
            Corresponds to the <c>Ntk</c> parameter of a
            <see cref="T:Endeca.Navigation.UrlENEQuery"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.Terms">
            <summary>
            Gets the terms specified in the search.
            </summary>
            <value>
            The search terms, or <c>null</c> if none is returned.
            </value>
            <remarks>
            Corresponds to the <c>Ntt</c> parameter of a
            <see cref="T:Endeca.Navigation.UrlENEQuery"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.SearchMode">
            <summary>
            Gets the requested search mode used in the search.
            </summary>
            <value>
            The search mode that was requested when the search was performed. 
            Defaults to <see cref="F:Endeca.Navigation.ESearchReport.MODE_ALL"/>.
            </value>
            <remarks>
            Corresponds to the <c>Ntx</c> parameter of a
            <see cref="T:Endeca.Navigation.UrlENEQuery"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.MatchedMode">
            <summary>
            Returns the matched search mode that was 
            selected by the MDEX Engine.
            </summary>
            <value>
            The match mode selected by the MDEX Engine.
            </value>
            <remarks>
            <para>
            <b>MatchedMode</b> is different from <see cref="P:Endeca.Navigation.ESearchReport.SearchMode"/>
            in that <b>MatchedMode</b> returns the match mode that was actually
            selected by the MDEX Engine, as opposed to the match mode that was
            requested in the query.
            </para>
            <para>
            For example, assume that this query was issued to the MDEX
            Engine:
            </para>
            <code>
            N=0&amp;Ntk=all&amp;Ntt=merlot+blackberry&amp;Ntx=mode+matchallany
            </code>
            <para>
            The query is searching for the terms <c>merlot</c> and <c>blackberry</c> 
            and is requesting the match mode of <see cref="F:Endeca.Navigation.ESearchReport.MODE_ALL_ANY"/>. 
            This search mode will first attempt to perform a search that matches 
            all of the terms; failing that, it will then perform a
            search that matches any of the terms. Assuming there are no 
            occurrences of <c>blackberry</c>, the resulting match mode 
            will be <see cref="F:Endeca.Navigation.ESearchReport.MODE_ANY"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.NumMatchingResults">
            <summary>
            Returns the number of records that matched the search.
            </summary>
            <value>
            The number of records that matched the search.
            </value>
            <remarks>
            Corresponds to the <see cref="P:Endeca.Navigation.Navigation.TotalNumERecs"/> property.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.WordInterps">
            <summary>
            Returns the word interpretations for the record search.
            </summary>
            <value>
            A <see cref="T:Endeca.Navigation.PropertyMap"/> representing the set of work interpretations.
            </value>
            <remarks>
            A word interpretation is the treatment of one or more query terms as
            some other terms during search processing. For example, assume the index 
            contains the following thesaurus entry:
            <code>
            cab &gt; cabernet
            </code>
            <para>
            If a search is performed for the term <i>cab</i> and 
            there is a match for <i>cabernet</i>, a single word interpretation 
            will be returned with the key <c>cab</c> and a value of <c>cabernet</c>.
            </para>
            <para>
            In the Automatic Phrasing feature, for each contiguous 
            subsequence of query terms that was treated as a 
            quoted phrase during search processing, a word interpretation
            will be returned with the original query terms as the key 
            and the query terms in double quotes as the value.
            </para>
            <para>
            Note that the MDEX Engine's <c>--wordinterp</c> flag 
            must be used to obtain any results from <see cref="P:Endeca.Navigation.ESearchReport.WordInterps"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.AutoSuggestions">
            <summary>
            Returns the list of automatic spelling corrections 
            and/or alternative phrasing suggestions made by 
            the Endeca MDEX Engine.
            </summary>
            <value>
            A list of <see cref="T:Endeca.Navigation.ESearchAutoSuggestion"/> objects, each
            of which contains a single spelling or phrased suggestion.
            If there are no suggestions, the list 
            will be empty.
            </value>
            <remarks>
            Alternative phrasing suggestions are used by the MDEX Engine 
            as the query to compute the set of matching documents returned 
            instead of the user's original search query. Alternative phrasing 
            suggestions can be returned under one of the following scenarios:
            <para>
            <list type="bullet">
            <item>
              <description>The MDEX Engine's Automatic Spelling Correction 
              feature is enabled with the Dgraph <c>--spl</c> command line flag.
              </description>
            </item>
            <item>
              <description>Alternative phrasing suggestions are requested using the
              <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchComputeAlternativePhrasings"/> setter
              property AND the <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchRewriteQueryWithAnAlternativePhrasing"/>
              setter property is used to request that the MDEX Engine rewrite 
              the query using one of the alternatives it has computed.
              </description>
            </item>
            <item>
              <description>Both of the previous two conditions are met. In this
              case, the alternative phrasing suggestions returned will incorporate 
              both Spelling Correction and Automatic Phrasing.
              </description>
            </item>
            </list>
            </para>
            <para>
            An example of having both Spelling Correction and Automatic Phrasing 
            is if a user's query of:
            <code>
            QUERY[New Yorkk restaurants]
            </code>
            is rewritten to an alternative phrasing suggestion of:
            <code>
            QUERY["New York" restaurants]
            </code>
            Here the term "Yorkk" was spell-corrected to "York" and 
            the resulting terms "New" and "York" were suggested to 
            be phrased by the Endeca MDEX Engine as "New York".
            Only those suggestions that, when issued as queries, would 
            return one or more records (before any navigation filters 
            are applied) will be returned.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.DYMSuggestions">
            <summary>
            Returns the list of "Did You Mean" suggestions made by the MDEX Engine
            </summary>
            <value>
            A list of <see cref="T:Endeca.Navigation.ESearchDYMSuggestion"/> objects.
            If there are no suggestions, the list will be empty.
            </value>
            <remarks>
            "Did You Mean" suggestions can be returned under the following scenarios:
            <para>
            <list type="bullet">
            <item>
              <description>The MDEX Engine's DYM feature 
              is enabled with the Dgraph <c>--dym</c> command line flag.
              </description>
            </item>
            <item>
              <description>Alternative phrasing suggestions are requested using the
              <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchComputeAlternativePhrasings"/> setter
              property.
              </description>
            </item>
            <item>
              <description>Both of the previous two conditions are met. In this
              case, the DYM suggestions returned will incorporate 
              both Spelling Correction and Automatic Phrasing.
              </description>
            </item>
            </list>
            </para>
            <para>
            An example of having both Spelling Correction and Automatic Phrasing 
            is if a user's query of:
            <code>
            QUERY[New Yorkk restaurants]
            </code>
            is rewritten to an alternative phrasing suggestion of:
            <code>
            QUERY["New York" restaurants]
            </code>
            Here the term "Yorkk" was spell-corrected to "York" and 
            the resulting terms "New" and "York" were suggested to 
            be phrased by the Endeca MDEX Engine as "New York".
            Only those suggestions that, when issued as queries, would 
            return one or more records (before any navigation filters 
            are applied) will be returned.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.ErrorMessage">
            <summary>
            Returns the MDEX Engine's error message if the search was not valid.
            </summary>
            <value>
            A string representing the error message, or <c>null</c> 
            if there is no error.
            </value>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.NumMatchedTerms">
            <summary>
            Returns the number of search terms that were sucessfully matched when the search
            was performed.
            </summary>
            <value>
            The number of terms that matched.
            </value>
            <remarks>
            Note that the number of matched terms may be different than
            the number of terms returned from <see cref="P:Endeca.Navigation.ESearchReport.Terms"/> if the search
            mode was <see cref="F:Endeca.Navigation.ESearchReport.MODE_ALL"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.ESearchReport.TruncatedTerms">
            <summary>
            Returns a set of search terms after truncation.
            </summary>
            <value>
            A string representing the truncated search terms,
            or <c>null</c> if no truncation was performed.
            </value>
            <remarks>
            If the number of search terms is too large, the MDEX Engine
            will truncate the query for performance reasons. <b>TruncatedTerms</b>
            returns the new set of search terms after the MDEX Engine
            has peformed the truncation. If no truncation was performed, returns <c>null</c>.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.ESearchReport.Mode">
            <summary>
             Enumeration of Endeca search modes.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.ETInstrumentor">
            <summary>
            Class that instruments HTML pages for use with the Web-based tools package.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ETInstrumentor.#ctor">
            <summary>
            Constructs a new <b>ETInstrumentor</b>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.ETInstrumentor.HtmlInstrumentNavigation(Endeca.Navigation.Navigation)">
            <summary>
            Instrument an HTML navigation page with hidden forms that act as hooks to work with the Web tools package.
            </summary>
            <param name="n">Navigation object that represents a navigation page.</param>
            <returns>HTML source that specifies a single hidden form.</returns>
        </member>
        <member name="M:Endeca.Navigation.ETInstrumentor.HtmlInstrumentRecord(Endeca.Navigation.ERec,System.String,System.String)">
            <summary>
            Instruments an HTML record page with hidden forms that act as hooks to work with the Web tools package.
            </summary>
            <param name="e">The record that represents the page to be instrumented</param>
            <param name="displayNameProperty">The name of the property that should be used for the title of the record.</param>
            <param name="recordSpecProperty">The name of the property that uniquely identifies the record.</param>
            <returns>HTML source that specifies a single hidden form.</returns>
        </member>
        <member name="M:Endeca.Navigation.ETInstrumentor.HtmlInstrumentRecord(Endeca.Navigation.ERec,System.String)">
            <summary>
            Instruments an HTML record page with hidden forms that act as hooks to work with the Web tools package.
            </summary>
            <param name="e">The record that represents the page to be instrumented</param>
            <param name="displayNameProperty">The name of the property that should be used for the title of the record.</param>
            <returns>HTML source that specifies a single hidden form.</returns>
        </member>
        <member name="T:Endeca.Navigation.FieldList">
            <summary>
            An <see cref="T:System.Collections.IList"/> of Endeca property or dimension names that 
            will be used to specify which values will be returned for each 
            record in the result set of a navigation query.
            The <see cref="P:Endeca.Navigation.ENEQuery.Selection"/> setter property
            is used to set the <b>FieldList</b> for the query.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.FieldList.#ctor">
            <summary>
            Default constructor that creates an empty list.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.FieldList.AddField(System.String)">
            <summary>
            Add a field to the <see cref="T:Endeca.Navigation.FieldList"/> by name.
            </summary>
            <param name="f">
            The <see cref="T:System.String"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
            <returns>
            Index of added field.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.FieldList.AddField(Endeca.Navigation.Dimension)">
            <summary>
            Add a dimension field to the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="d">
            The <see cref="T:Endeca.Navigation.Dimension"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
            <returns>
            Index of added field.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.FieldList.AddField(Endeca.Navigation.Property)">
            <summary>
            Add a property field to the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="p">
            The <see cref="T:Endeca.Navigation.Property"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
            <returns>
            Index of added field.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.FieldList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.FieldList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.FieldList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.FieldList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.FieldList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.FieldList.Add(System.Object)">
            <summary>
            Add an item to the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
            <returns>
            Index of added field.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.FieldList.Clear">
            <summary>
            Clear the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.FieldList.Insert(System.Int32,System.Object)">
            <summary>
            Insert an item into the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
        </member>
        <member name="M:Endeca.Navigation.FieldList.Remove(System.Object)">
            <summary>
            Remove an item from the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.FieldList"/>.
            </param>
        </member>
        <member name="M:Endeca.Navigation.FieldList.RemoveAt(System.Int32)">
            <summary>
            Remove an indexed item from the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.FieldList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.FieldList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.FieldList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.FieldList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.FieldList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.FieldList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.FieldList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.FieldList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.FieldList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.FieldList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.FieldList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.FieldList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.FieldList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.FieldList.Item(System.Int32)">
            <summary>
            Gets/Sets the field string at the specified index.  
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimGroup"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.FieldList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.FieldList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.FieldList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.FieldList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.FieldList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.FieldList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.FieldList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.FieldList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.InternalException">
            <summary>
            Exception signalling that an internal error has occured in the system.  
            Internal errors often signal an unexpected error in the execution of 
            the system.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.InternalException.PrintStackTrace">
            <summary>
            Prints the stack trace to the standard error stream.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.KeyProperties">
            <summary>
            Class providing access to a collection of properties associated with a
            given Endeca Dimension or Property key.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.KeyProperties.#ctor(System.String)">
            <summary>
            Constructor for a <see cref="T:Endeca.Navigation.KeyProperties"/>.
            </summary>
            <param name="keyName">
            Name of an Endeca Dimension or Property.
            </param>
        </member>
        <member name="P:Endeca.Navigation.KeyProperties.Key">
            <summary>
            Gets the name of this Endeca Dimension or Property key.
            </summary>
            <value>
            Name of this key.
            </value>
        </member>
        <member name="P:Endeca.Navigation.KeyProperties.Properties">
            <summary>
            Gets the properties for this Endeca Dimension or Property key.
            </summary>
            <value>
            A <see cref="T:Endeca.Navigation.PropertyMap"/> containing the properties for this key.
            </value>
        </member>
        <member name="T:Endeca.Navigation.Navigation">
            <summary>
            Top-level object returned from an Endeca MDEX Engine.  The <b>Navigation</b> object 
            serves as a container for several components (such as navigation descriptors, 
            record set, etc.) that together compose a navigation. 
            </summary>
            <remarks>
            A <b>Navigation</b> object is defined by the set of dimension values that
            were used to query the MDEX Engine to obtain the <b>Navigation</b> object.
            Those values are in the context of a <b>Navigation</b> object defined as 
            descriptors, the values that describe the navigation query.
            <para>
            In addition, several other objects compose to make a dimension.  The
            records which are the records that meet the query descriptor criteria.
            The aggregated records which are the same records but rolled up by
            a certain criteria.  The various keys which describe options and
            operations available on the records.  The refinements which are the 
            navigational options that are available to refine the query.
            </para>
            <para>
            The refinements and the descriptors are broken up by their individual
            dimensions.  There is a third set of dimensions called the integrated
            dimensions which are the union of the refinement and descriptor 
            dimensions.  Lastly all three sets of dimensions are available 
            consolidated by their dimensions groups via the 
            <see cref="P:Endeca.Navigation.Navigation.RefinementDimGroups"/>, <see cref="P:Endeca.Navigation.Navigation.DescriptorDimGroups"/>,
            and <see cref="P:Endeca.Navigation.Navigation.IntegratedDimGroups"/> properties.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.Navigation.GetAnalyticsStatementResult(System.String)">
            <summary>
            Returns the <see cref="T:Endeca.Navigation.AnalyticsStatementResult"/> for the named query.  
            If results for the named analytics query does not exist,
            <c>null</c> is returned.
            </summary>
            <param name="name">
            The named query.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.AnalyticsStatementResult"/> for the named query.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Navigation.GetActiveSortKeys">
            <summary>
            Gets the active sort keys applicable for this navigation.  
            </summary>
            <returns>
            Active sort keys for this navigation.  Even if there are no
            active sort keys, a valid, empty <see cref="T:Endeca.Navigation.ERecSortKeyList"/>
            will be returned.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Navigation.SetGroupings(Endeca.Navigation.DimGroupList)">
            <summary>
            Takes the groupings and 'rewarps' them to fill the various
            instance fields of the navigation, from the descriptor dimensions 
            to the edge groups dimensions, and integrated groupings.
            </summary>
            <param name="groupings">
            Groupings used to fill instance fields.
            </param>
        </member>
        <member name="M:Endeca.Navigation.Navigation.ReorderDescriptorDimensions(Endeca.Navigation.DimValIdList)">
            <summary>
            This method is used to reorder the descriptor dimensions based on 
            the user selection because the MDEX Engine does not order 
            its results on the user selection.
            </summary>
            <param name="order">
            The orinal query's descriptors in the order that the dimension 
            should be reordered in.
            </param>
            <remarks>
            The intended usage has the <see cref="T:Endeca.Navigation.HttpENEConnection"/> pass in 
            the parsed navigation query params to reorder the results.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.ERecs">
            <summary>
            Gets the records associated with this navigation query.
            </summary>
            <value>
            The records of this navigation query. If no records have
            are part of the navigation an empty <see cref="T:Endeca.Navigation.ERecList"/> 
            is still returned.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.KeyProperties">
            <summary>
            Gets or Sets the key properties request for the navigation query.
            </summary>
            <value>
            The key properties
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.AnalyticsQueryError">
            <summary>
            Gets or sets the error message, if any, associated with the evaluation of
            the analytics portion of the query results. This method reports
            any errors that span multiple statements; it does NOT report errors
            relating to an individual statement.
            </summary>
            <value>
            The error message.
            </value>
            <returns>
            The error message, or null if no error was encountered.
            </returns>
        </member>
        <member name="P:Endeca.Navigation.Navigation.AnalyticsResultsMap">
            <summary>
            Set the Analytics statements associated with this Navigation.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.Navigation.AnalyticsStatementNames">
            <summary>
            Gets the set of statement names included in the analytics results
            associated with this Navigation.
            </summary>
            <value>
            A list containing the names of analytics results associated 
            with this Navigation, in alphabetical order. If no analytics results are available,
            an empty list is returned.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.AggrERecs">
            <summary>
            Gets the aggregated records associated with this navigation query, 
            which come from the original records consolidated by a rollup key.
            </summary>
            <value>
            The aggregated records of this navigation query.  If no 
            aggregated records are available an emtpy <see cref="T:Endeca.Navigation.AggrERecList"/>
            is returned.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.BulkERecEnumerator">
            <summary>
            Gets an Enumerator that provides access to the bulk records associated
            with this navigation query.
            </summary>
            <value>
            An <see cref="T:Endeca.Navigation.ERecEnumerator"/> providing access to the bulk records associated with this navigation query.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.BulkAggrERecEnumerator">
            <summary>
            Gets an Enumerator that provides access to the bulk aggregated
            records associated with this navigation query.
            </summary>
            <value>
            An <see cref="T:Endeca.Navigation.ERecEnumerator"/> providing access to the bulk aggregated records associated with this navigation query.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.ERecsOffset">
            <summary>
            Gets the offset of the first record in the endeca record list with 
            respect to the total number of records in the dataset that match 
            this navigation query.
            </summary>
            <value>
            Offset of the first record in the endeca record list with
            respect to the records in the navigation query result.  Also
            returns <c>0</c> if no records are in result.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.AggrERecsOffset">
            <summary>
            Gets the offset of the first aggregated record in the aggregated 
            record list with respect to the total number of aggregated 
            records in the dataset that match this navigation query.
            </summary>
            <value>
            Offset of the first aggregated record in the endeca 
            record list with respect to the aggregated records in the 
            navigation query result.  Also returns <c>0</c> if no 
            aggregated records are in result.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.TotalNumERecs">
            <summary>
            Gets the total number of records matching navigation query.
            </summary>
            <value>
            Total number of records in this navigation query.
            </value>
            <remarks>
            While a navigation may contain records often a navigation object 
            does not contain all the records in the navigation.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.TotalNumAggrERecs">
            <summary>
            Gets the total number of aggregated records matching navigation query.
            </summary>
            <value>
            Total number of aggregated records in this navigation query.
            </value>
            <remarks>
            While a navigation may contain aggregated records often a navigation 
            object does not contain all the aggregated records in the navigation.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.SortKeys">
            <summary>
            Gets the sort keys applicable for this navigation.  
            </summary>
            <value>
            Sort keys of this navigation.  Even if there are no sort keys, a 
            valid <see cref="T:Endeca.Navigation.ERecSortKeyList"/> will be returned.
            </value>
            <remarks>
            Method will always return a <see cref="T:Endeca.Navigation.ERecSortKeyList"/>, but the 
            list may be empty if no sort keys are present.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.RollupKeys">
            <summary>
            Gets the rollup keys applicable for this navigation.
            </summary>
            <value>
            Rollup keys of this navigation.  Even if there are no rollup keys, 
            a valid <see cref="T:Endeca.Navigation.ERecRollupKeyList"/> will be returned.
            </value>
            <remarks>
            Method will always return a <see cref="T:Endeca.Navigation.ERecRollupKeyList"/>, but the 
            list may be empty if no rollup keys are present.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.ERecSearchKeys">
            <summary>
            Gets the text search keys applicable for this navigation.  
            </summary>
            <value>
            Text search keys of this navigation.  Even if there are no rollup keys, 
            a valid <see cref="T:Endeca.Navigation.ERecSearchKeyList"/> will be returned.
            </value>
            <remarks>
            Method will always return a <see cref="T:Endeca.Navigation.ERecSearchKeyList"/>, but the 
            list may be empty if no text search keys are present.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.ERecCompoundSearchKeys">
            <summary>
            Gets the text search group keys applicable for this navigation.  
            </summary>
            <value>
            Text search group keys of this navigation.  Even if there 
            are no rollup group keys, a valid 
            <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/> will be returned.
            </value>
            <remarks>
            Method will always return a <see cref="T:Endeca.Navigation.ERecCompoundSearchKeyList"/>, 
            but the list may be empty if no text search group keys are present.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.RangeFilters">
            <summary>
            Gets the range filters applied to this navigation query result.  
            </summary>
            <value>
            RangeFilters applied on this navigation object.  A valid 
            <see cref="T:Endeca.Navigation.RangeFilterList"/> will always be returned.
            </value>
            <remarks>
            Method will always return a <see cref="T:Endeca.Navigation.RangeFilterList"/>, 
            but the list may be empty if no range filters were applied.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.DescriptorDimensions">
            <summary>
            Gets the dimensions for the descriptors for this navigation.
            </summary>
            <value>
            The dimensions of the descriptors of this navigation query.
            </value>
            <remarks>
            The descriptors are the set of dimension values that formulate 
            the query that limit the record results of this navigation query.
            If there are no descriptors, an empty dimension list will be 
            returned. Unlike all other dimension collections presented by the
            navigation, this collection is NOT in dimension order. Instead this 
            collection IS presented in descriptor order specified by the 
            navigation descriptors of the query, which in turn is most likely 
            generated from 
            <see cref="M:Endeca.Navigation.ENEQueryToolkit.SelectRefinement(Endeca.Navigation.Navigation,Endeca.Navigation.DimVal)"/> which places the
            descriptors in selection order, that is the order with which the
            user made their selections.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.DescriptorDimGroups">
            <summary>
            Gets the dimension groups of the dimensions for the descriptors
            for this navigation.
            </summary>
            <value>
            The dimension groups of the dimensions of the descriptors.
            </value>
            <remarks>
            Similar to <see cref="P:Endeca.Navigation.Navigation.DescriptorDimensions"/> except that the 
            dimensions are grouped by their dimension groups. Returns an empty 
            <see cref="T:Endeca.Navigation.DimGroupList"/> if there are no descriptors.  Unlike the
            descriptor dimensions, these dim groups are presented in MDEX
            Engine determined dimension order as opposed to the query specified
            descriptor order.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.RefinementDimensions">
            <summary>
            Gets the dimensions of that still have refinements available with 
            respect to this query.
            </summary>
            <value>
            The dimension groups of the dimensions that still have refinements
            available.
            </value>
            <remarks>
            The dimensions contained by the list each have refinement options 
            available that refine the record set do at least one record. Returns 
            an empty <see cref="T:Endeca.Navigation.DimensionList"/> if there are no more refinements 
            available for this navigation query. The dimensions are in MDEX 
            Engine determined dimension order.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.RefinementDimGroups">
            <summary>
            Gets the dimension groups of the dimensions that still have 
            refinements available with respect to this navigation query.
            </summary>
            <value>
            The dimension groups of the dimensions that still have refinements
            available.
            </value>
            <remarks>
            This list is analgous to <see cref="P:Endeca.Navigation.Navigation.RefinementDimensions"/> 
            except that they are grouped by their dimension groups.  
            Returns an empty <see cref="T:Endeca.Navigation.DimGroupList"/> if there are no more 
            refinements available. The dimension groups are in MDEX
            Engine determined order where the group with the highest 
            ranking dimension is persented first and so on.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.IntegratedDimensions">
            <summary>
            Gets the dimensions integrated from the refinement dimensions and 
            the descriptor dimensions.
            </summary>
            <value>
            The union of the descriptor and refinement dimensions.
            </value>
            <remarks>
            Integrated dimensions are the dimensions that either have 
            descriptors or still have refinement values relative to the 
            navigation query.  Returns an empty set if there are neither 
            refinement nor descriptor dimensions. The integrated dimensions 
            are in dimension order specified by the MDEX Engine.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.IntegratedDimGroups">
            <summary>
            Gets the dimension groups of the dimensions integrated from the 
            refinement and descriptor dimensions.
            </summary>
            <value>
            The descriptor groups of the dimensions unioned from the 
            descriptor and refinement dimensions.
            </value>
            <remarks>
            This is analgous to <see cref="P:Endeca.Navigation.Navigation.IntegratedDimensions"/> except that 
            the dimensions are consolidated by <see cref="T:Endeca.Navigation.DimGroup"/>.  Returns 
            an empty set if there are neither refinement nor descriptor dimensions. 
            The dimension groups are in dimension group order determined by the
            MDEX Engine where the dimension group with the highest ranking
            dimension is placed first and so on.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.CompleteDimensions">
            <summary>
            Gets the complete dimensions integrated from the refinement
            dimensions, the descriptor dimensions, and those that are
            completely implicit.
            </summary>
            <remarks>
            Complete dimensions are the 
            dimensions that either have descriptors, still have refinement 
            values relative to the navigation query, or only contain implicits.
            The integrated dimensions are in dimension order specified by 
            the MDEX Engine.
            </remarks>
            <value>
            A <see cref="T:Endeca.Navigation.DimensionList"/> that is the union of the 
            descriptor, refinement, and implicit dimensions.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.CompleteDimGroups">
            <summary>
            Gets the dimension groups of the complete dimensions integrated
            from the refinement
            dimensions, the descriptor dimensions, and those that are
            completely implicit.
            </summary>
            <remarks>
            This is analgous to 
            <see cref="P:Endeca.Navigation.Navigation.CompleteDimensions"/> except that the dimensions are
            consolidated by <see cref="T:Endeca.Navigation.DimGroup"/>.
            That is, complete dimensions are the 
            dimensions that either have descriptors, still have refinement 
            values relative to the navigation query, or only contain implicits.
            The integrated dimensions are in dimension order specified by 
            the MDEX Engine.
            </remarks>
            <value>
            The dimension groups (a <see cref="T:Endeca.Navigation.DimGroupList"/>) of the 
            dimensions unioned from the descriptor, refinement, and 
            implicit dimensions.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.Supplements">
            <summary>
            Gets the supplements to this navigation query result.
            </summary>
            <value>
            A <see cref="T:Endeca.Navigation.SupplementList"/> containing the supplements 
            of this navigation.
            </value>
            <remarks>
            Returns an empty set if there are no supplements.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Navigation.ESearchReports">
            <summary>
            Gets the <c>IDictionary</c> of <c>ESearchReports</c> for this 
            navigation query result.  Returns an empty set if there are no 
            <c>ESearchReports</c>
            </summary>
            <value>
            An <c>IDictionary</c> of <c>ESearchReport</c>, keyed
            by the search term.
            </value>
        </member>
        <member name="P:Endeca.Navigation.Navigation.ESearchReportsComplete">
            <summary>
            Gets the <c>IDictionary</c> of <c>IList</c> of <c>ESearchReport</c>for this 
            navigation query result.  Returns an empty set if there are no 
            <c>ESearchReports</c>
            </summary>
            <value>
            An <c>IDictionary</c> of <c>IList</c> of <c>ESearchReport</c>, keyed
            by the search term.
            </value>
        </member>
        <member name="T:Endeca.Navigation.NavigationRefsList">
            <summary>
            List of navigation refinement values exposed as an <see cref="T:System.Collections.IList"/>. Each element
            of the list is a <see cref="T:Endeca.Navigation.DimValList"/> referencing a navigation state.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.NavigationRefsList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.NavigationRefsList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.NavigationRefsList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.NavigationRefsList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.NavigationRefsList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.NavigationRefsList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.NavigationRefsList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.NavigationRefsList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.NavigationRefsList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.NavigationRefsList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.NavigationRefsList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.NavigationRefsList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.NavigationRefsList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.NavigationRefsList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.NavigationRefsList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.DimValList"/>  at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.DimValList"/>  at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.NavigationRefsList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.NavigationRefsList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.NavigationRefsList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.NavigationRefsList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.NavigationRefsList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.NavigationRefsList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.ParseBinaryHeader(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            ParseBinaryHeader
            </summary>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.ParseBinaryNode(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            ParseBinaryNode
            </summary>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.ParseBinaryDimensionSearch(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            ParseBinaryDimenionSearch
            </summary>
            <param name="buf">
            buf
            </param>
            <returns>
            DimensionSearchResult
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.ParseBinaryFullBin(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            ParseBinaryFullBin
            </summary>
            <param name="buf">
            buf
            </param>
            <returns>
            OptiBin
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.ParseBinaryFullAggrBin(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            ParseBinaryFullAggrBin
            </summary>
            <param name="buf">
            buf
            </param>
            <returns>
            AggrERec
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCatsWithAncs(Endeca.Navigation.DimLocationList,Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatCatsWithAncs
            </summary>
            <param name="cAncL">
            cAncL
            </param>
            <param name="p_buf">
            p_buf
            </param>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatFullBin(Endeca.Navigation.ERec,Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatFullBin
            </summary>
            <param name="bin">
            bin
            </param>
            <param name="p_buf">
            p_buf
            </param>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatDimensionSearch(Endeca.Navigation.DimensionSearchResult,Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatDimensionSearch
            </summary>
            <param name="csearch">
            csearch
            </param>
            <param name="p_buf">
            p_buf
            </param>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatDimensionSearchResultGroup(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatDimensionSearchResultGroup
            </summary>
            <param name="p_buf">
            p_buf
            </param>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatFullAggrBin(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatFullAggrBin
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            AggrERec
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatSeeAlso(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatSeeAlso
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            Supplement
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatSeeAlsos(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatSeeAlsos
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            saList
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatESearchReport(Endeca.Navigation.OptiInputBuffer)">
            Looks for key-value pairs in buf.
            If any of the keys is 'mode' or 'rel', stores the key and value (after some processing)
            in a new ESearchReport object, which it then returns.
            Any keys other thatn the ones above are silently skipped (both key and value pair of course).
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatBin(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatBin
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            OptiBin
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCatGroup(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatCatGroup
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            AssocDimLocations
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatBinSortKey(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatBinSortKey
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            ERecSortKey
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatBinRollupKey(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatBinRollupKey
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            ERecRollupKey
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatTextSearchKey(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatTextSearchKey
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            TextSearchKey
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatTextSearchGroupKey(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatTextSearchGroupKey
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            TextSearchGroupKey
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatBinList(System.Int64,Endeca.Navigation.OptiInputBuffer,Endeca.Navigation.Navigation)">
            <summary>
            FormatBinList
            </summary>
            <param name="numBinsDisp">
            numBinsDisp
            </param>
            <param name="p_buf">
            p_buf
            </param>
            <param name="node">
            node
            </param>
            <returns>
            ERecList
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatAggrBin(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatAggrBin
            </summary>
            <param name="p_buf">
            </param>
            <returns>
            AggrERec
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatAggrBinList(System.Int64,Endeca.Navigation.OptiInputBuffer,Endeca.Navigation.Navigation)">
            <summary>
            FormatAggrBinList
            </summary>
            <param name="numBinsDisp">
            numBinsDisp
            </param>
            <param name="p_buf">
            p_buf
            </param>
            <param name="node">
            node
            </param>
            <returns>
            AggrERecList
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatAttribute(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatAttribute
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            Property
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCat(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatCat
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            Value
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCatsWithAncs(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatCatsWithAncs
            </summary>
            <param name="cAncL">
            cAncL
            </param>
            <param name="p_buf">
            p_buf
            </param>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCatSet(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatCatSet
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            DimValList
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCatSet(Endeca.Navigation.OptiInputBuffer,System.Boolean)">
            <summary>
            FormatCatSet
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <param name="order">
            order
            </param>
            <returns>
            DimValList
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatCatWithAncs(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatCatWithAncs
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            DimLocation
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatNav(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatNav
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            Dimension
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatGrouping(Endeca.Navigation.OptiInputBuffer,System.Int64,System.String)">
            <summary>
            FormatGrouping
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <param name="grpingId">
            grpingId
            </param>
            <param name="grpingname">
            grpingname
            </param>
            <returns>
            DimGroup
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiBinaryInterp.FormatGroupings(Endeca.Navigation.OptiInputBuffer)">
            <summary>
            FormatGroupings
            </summary>
            <param name="p_buf">
            p_buf
            </param>
            <returns>
            DimGroupList
            </returns>
        </member>
        <member name="M:Endeca.Navigation.OptiInputBuffer.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Constructor, requires an InputStream, setting little endian is 
            optional
            </summary>
        </member>
        <member name="M:Endeca.Navigation.OptiInputBuffer.ReadDouble">
            <summary>
            Endian safe reading of bytes, for use in reading whole numbers
            (shorts, ints, longs), and arrays
            
            Endian abstraction routine 2/3
            </summary>
        </member>
        <member name="P:Endeca.Navigation.OptiInputBuffer.LittleEndian">
            <summary>
            Get/set "little endian" status. Set should be called before reading
            anything larger than a byte from the stream.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.OptiInputBufferInputStream.#ctor(java.io.InputStream,System.Boolean)">
            <summary>
            Constructor, requires an InputStream and "little endian" setting. 
            </summary>
        </member>
        <member name="T:Endeca.Navigation.OptionalInt">
            <summary>
            Class representing an <code>int</code> or an unset value. Unlike an
            <code>int</code>, an <code>OptionalInt</code> may be empty.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.OptionalInt.#ctor">
            <summary>
            Default constructor that creates and empty <code>OptionalInt</code> object.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.OptionalInt.#ctor(System.Int32)">
            <summary>
            Constructor specifying an <code>int</code>
            </summary>
            <param name="val">
            The value of the <code>int</code> held in the 
            <code>OptionalInt</code>.
            </param>
        </member>
        <member name="P:Endeca.Navigation.OptionalInt.IntValue">
            <summary>
            Accessor that gets the <code>int</code> of this <code>OptionalInt</code>.
            set is not supported.
            </summary>
            <return>The <code>int</code> of this <code>OptionalInt</code>.</return>
            <exception cref="T:System.NullReferenceException"> 
            If trying to get the content of an empty int. 
            </exception>
            <exception cref="T:System.NotSupportedException">
            If trying to use the set functionality. 
            Set is unsupported.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.OptionalInt.Empty">
            <summary>
            Accessor that gets whether this <code>OptionalInt</code> is empty.
            Set operation is not supported.
            </summary>
            <returns> 
            True if this <code>OptionalInt</code> is empty, false otherwise.
            </returns>
            <exception cref="T:System.NotSupportedException">
            If trying to use the set functionality.
            Set is unsupported.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.PartialENEQueryException">
            <summary>
            Exception that is triggered if there is a query that does not completely
            express a query with all necessary parameter.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.Property">
            <summary>
            Class representing an Endeca name/value property pair.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.Property.Equals(System.Object)">
            <summary>
            Compares the specified object with this for equality.
            </summary>
            <param name="o">
            An object to compare for quality.
            </param>
            <returns>
            <c>true</c> if the object can be cast as a <see cref="T:Endeca.Navigation.Property"/>
            and has the same key and value and <c>false</c> if not.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Property.GetHashCode">
            <summary>
            Generates the hash code for this object.
            </summary>
            <returns>
            The hash code for this <see cref="T:Endeca.Navigation.Property"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.Property.CompareTo(System.Object)">
            <summary>
            Compares this object to <paramref name="o"/>.  
            </summary>
            <param name="o">
            An object for comparison.
            </param>
            <returns>
            Negative int if this is less than <paramref name="o"/>, 0 if
            they are equal, and a positive int if this is greater than
            <paramref name="o"/>.
            </returns>
            <remarks>
            Casts <paramref name="o"/> as <see cref="T:Endeca.Navigation.Property"/> and returns
            a negative int if this is less than <paramref name="o"/>, zero
            if they are the same, and a positive int if this is greater
            than <paramref name="o"/>.
            </remarks>
            <exception cref="T:System.InvalidCastException">
            <paramref name="o"/> can't be cast as a <see cref="T:Endeca.Navigation.Property"/>.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.Property.Key">
            <summary>
            Gets the name of the property.  
            </summary>
            <value>
            Key of the property.
            </value>
            <remarks>
            Returned object is of type <see cref="T:System.String"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Property.Value">
            <summary>
            Gets the value of the property.  
            </summary>
            <value>
            Value of the property.
            </value>
            <remarks>
            Returned object is of type <see cref="T:System.String"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.PropertyList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.PropertyList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.PropertyList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.PropertyList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.PropertyList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.PropertyList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.System#Collections#IList#Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.PropertyList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.PropertyList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.PropertyList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.PropertyList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.PropertyList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.PropertyList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.PropertyList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.PropertyList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.PropertyList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.PropertyList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.PropertyList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.PropertyList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.PropertyList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.  The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The element at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.PropertyList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.PropertyList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.PropertyList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.PropertyList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.PropertyList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.PropertyList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.PropertyMap">
            <summary>
            Class providing access to a collection of properties.  
            </summary>
            <remarks>
            <see cref="T:Endeca.Navigation.PropertyMap"/> offers methods to provide multi map 
            behavior via <see cref="M:Endeca.Navigation.PropertyMap.GetValues(System.String)"/> since a property 
            set can include many values with the same key.  
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.GetValues(System.String)">
            <summary>
            Gets the values associated with this key.
            </summary>
            <param name="key">
            Key used to get associated values.
            </param>
            <returns>
            All the values associated with the key.  Returns <c>null</c>
            when no values are associated with <paramref name="key"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.Add(System.Object,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="key">
            The <see cref="T:System.Object"/> to use at the key of the element to add.
            </param>
            <param name="value">
            The <see cref="T:System.Object"/> to use at the value of the element to add.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:Endeca.Navigation.PropertyMap"/> contains
            an element with the specified key.
            </summary>
            <param name="key">
            They key to locate in the <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </param>
            <returns>
            <c>true</c> if the <see cref="T:Endeca.Navigation.PropertyMap"/> contains an element
            with they key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> 
            for the <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"/> for the <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="key">
            The key of the element to remove.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.PropertyMap"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the <see cref="T:System.Collections.DictionaryEntry"/> 
            objects copied from <see cref="T:Endeca.Navigation.PropertyMap"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.PropertyMap"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.PropertyMap"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.PropertyMap.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.PropertyList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.EntrySet">
            <summary>
            Gets the set of all properties in this <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </summary>
            <value>
            The set of all properties.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.PropertyMap"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.PropertyMap"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.PropertyMap"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.PropertyMap"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.Item(System.Object)">
            <summary>
            Gets an element with the specified key.  The set operation is not supported.
            </summary>
            <param name="key">
            The key of the element to get.
            </param>
            <value>
            An element with the specified key.
            </value>
            <remarks>
            If <paramref name="key"/> has multiple values, only one value is returned.
            The returned object is of type <see cref="T:System.String"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="key"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the 
            keys of this <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </summary>
            <value>
            An <see cref="T:System.Collections.ICollection"/> containing the 
            keys of this <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> containing the 
            values of this <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </summary>
            <value>
            An <see cref="T:System.Collections.ICollection"/> containing the 
            values of this <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.PropertyMap"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.PropertyMap"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.PropertyMap.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.PropertyMap"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.RangeFilter">
            <summary>
            Class representing a range filter on a navigation record set.  
            </summary>
            <remarks>
            A filter is composed of a record property name and a set of conditions 
            that have to be true in order for a record to pass through the filter.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.RangeFilter.#ctor(System.String)">
            <summary>
            Constructor creating a filter.
            </summary>
            <param name="filter">
            Range filter statement.
            </param>
            <remarks>
            A filter consists of a numeric property ( float or int ), and 
            a filter statement that consists of operators LT, LTEQ, GT, GTEQ, 
            or BTWN followed by one or two constants.  BTWN is treated as a 
            bounded range, as it is treated inclusive. Examples:
            <code>
            "Price|LT 10.88"
            "create_date|BTWN 20020131 20020214"
            "modified|GTEQ 2002"
            </code>
            Range filter statement format:
            <code>
            <b>'&lt;property name&gt;|&lt;filter statement&gt;'</b>
            </code>
            <code>
            &lt;filter statement&gt; = '[&lt;unbounded range&gt;|&lt;bounded range&gt;]'
            &lt;unbounded range&gt; = '[LT|LTEQ|GT|GTEQ] &lt;constant&gt;'
            &lt;bounded range&gt; = 'BTWN &lt;constant&gt; &lt;constant&gt;'
            &lt;property name&gt; = name of a numerical record property.
            &lt;constant&gt; = numerical constant that defines the range bounds.
            </code>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.RangeFilter.ToString">
            <summary>
            Returns the string representation of the filter.
            </summary>
            <returns>
            The string representation of the filter.
            </returns>
        </member>
        <member name="T:Endeca.Navigation.RangeFilterList">
            <summary>
            Class that encapsulates a collection of range filters (<see cref="T:Endeca.Navigation.RangeFilter"/> objects).
            </summary>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.#ctor">
            <summary>
            Default constructor that creates an empty list.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Set(System.Int32,System.Object)">
            <summary>
            Replaces the element at the specified position in this list with 
            the specified element.
            </summary>
            <param name="index">
            The zero-based index of the element to set.
            </param>
            <param name="elementAt">
            The element to be set.
            </param>
            <returns>
            The element previously at <paramref name="index"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Add(System.Int32,System.Object)">
            <summary>
            Inserts the specified element at the specified position in this list.
            </summary>
            <param name="index">
            The zero-based index of the element to add.
            </param>
            <param name="elementAt">
            The element to be inserted.
            </param>
            <remarks>
            Shifts the element currently at that position (if any) and any subsequent 
            elements to the right (adds one to their indices).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Remove(System.Int32)">
            <summary>
            Removes the element at the specified position in this list.
            </summary>
            <param name="index">
            The zero-based index of the element to remove.
            </param>
            <returns>
            The element previously at position <paramref name="index"/>.
            </returns>
            <remarks>
            Shifts any subsequent elements to the left (subtracts one from 
            their indices). Returns the element that was removed from the list.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.RangeFilterList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.RangeFilterList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an object to the end of the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> index at which the <paramref name="item"/>
            has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Clear">
            <summary>
            Removes all the elements from the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Endeca.Navigation.RangeFilterList"/> at the
            specified index.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.Remove(System.Object)">
            <summary>
            Removes the first occurence of a specified object from the
            <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RangeFilterList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.RangeFilterList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.RangeFilterList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.RangeFilterList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.RangeFilterList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RangeFilterList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.RangeFilterList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.RangeFilterList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.RangeFilterList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.RangeFilterList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RangeFilterList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.RangeFilterList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RangeFilterList.Item(System.Int32)">
            <summary>
            Gets and sets the <see cref="T:Endeca.Navigation.RangeFilter"/> at the specified index.  
            </summary>
            <param name="index">
            The zero-based index of the element to get or set.
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.RangeFilter"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.RangeFilterList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RangeFilterList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.RangeFilterList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.RangeFilterList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RangeFilterList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.RangeFilterList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.RefinementConfig">
            <summary>
            Class representing a dynamic refinement config for a dimension
            value. This will determine how refinements are computed under this
            dimension value. Use of a dynamic refinement config will suppress
            generation of a "More..." child dimension value. You can determine
            whether there are more refinements than the ones shown by looking
            at the "DGraph.More" property on the refinements' parent dimension value.
            Any of the settings in this class can be set explicitly or defaulted to use
            the corresponding dimension's settings in developer studio.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfig.#ctor(System.Int64)">
            <summary>
            Default constructor where the <code>dimValId</code> sets the dimension 
            value this dynamic refinement config is associated with.
            </summary>
            <param name="dimValId">
            Specifies which dimension value this dynamic refinement config is associated with.
            </param>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfig.ToString">
            <summary>
            Returns the string representation of the dynamic refinement config.
            </summary>
            <returns>The string representation of the dynamic refinement config.</returns>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfig.DimensionValueId">
            <summary>
            Accessor which gets the Dimension value ID associated with this refinement config.
            </summary>
            <value>A <code>long</code> number, strictly greater than 0. </value>
            <exception cref="T:System.NotSupportedException">Set is unsupported</exception>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfig.DynamicRanking">
            <summary>
            Accessor which gets and sets whether the dimension value has Dynamic Ranking enabled, disabled
            or defaults to the settings in Developer Studio.
            </summary>
            <value>A <code>DynamicRankingState</code> enum value:
            ENABLED, DISABLED or DEFAULT which uses the settings from Dev Studio.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfig.DynamicRankOrder">
            <summary>
            Accessor which gets and sets whether the dimension value is sorted statically
            (ordered by refinement sort order), dynamically (ordered by refinement count).
            If set to use default then the dimension value will be sorted statically
            or dynamically depending on the dimension's setting in Developer Studio.
            This is only used if the dimension value has Dynamic Ranking enabled.
            </summary>
            <value>A <code>DynamicRankOrderState</code> enum value:
            STATIC, DYNAMIC or DEFAULT which uses the settings from Dev Studio.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfig.DynamicRefinementCount">
            <summary>
            Accessor which gets and sets the maximum number of dimension values (refinements) to return to the user.
            This is only used if the dimension value has Dynamic Ranking enabled. 
            </summary>
            <value>
            An <code>OptionalInt</code> specifying the maximum number of dimension values to return.
            An empty <code>OptionalInt</code> indicates to use
            the settings in Developer Studio.
            Defaults to an empty <code>OptionalInt</code>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfig.Exposed">
            <summary>
            Accessor that gets and sets whether to expose the dimension value.
            </summary>
            <value>
            <code>bool</code> which is <code>TRUE</code>(dimension value is exposed) or
            <code>FALSE</code> (dimension value is not exposed).
            Defaults to <code>TRUE</code>.
            </value>
        </member>
        <member name="T:Endeca.Navigation.RefinementConfigList">
            <summary>
            Class that encapsulates a collection of dynamic refinement config (<see cref="T:Endeca.Navigation.RefinementConfig"/>) objects.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.#ctor">
            <summary>
            Default constructor that creates an empty list.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.Add(System.Int32,System.Object)">
            <summary>
            Inserts the specified <code>RefinementConfig</code> at the specified position in
            this list. Shifts the element currently at that position (if any)
            and any subsequent elements to the right (adds one to their indices).
            </summary>
            <param name="index">
            The offset of the element
            </param>
            <param name="elementAt">
            The element to be inserted.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.ToString">
            <summary>
            Takes the individual refinement configs in the list 
            and turns them into a string representation that can
            later be inserted into a URL.
            </summary>
            <return>
            The string representation of the dynamic <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </return>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.Contains(System.Object)">
            <summary>
            Determines whether an element is in the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.RefinementConfigList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.RefinementConfigList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an object to the end of the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </param>
            <returns>
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> index at which the <paramref name="item"/>
            has been added.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.Clear">
            <summary>
            Removes all the elements from the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an element into the <see cref="T:Endeca.Navigation.RefinementConfigList"/> at the
            specified index.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.Remove(System.Object)">
            <summary>
            Removes the first occurence of a specified object from the
            <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only.
            <para>-or-</para>
            <para>
            The <see cref="T:Endeca.Navigation.RefinementConfigList"/> has a fixed-size.
            </para>
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.RefinementConfigList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.RefinementConfigList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.RefinementConfigList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.RefinementConfigList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.RefinementConfigList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.RefinementConfigList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfigList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.RefinementConfigList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.RefinementConfigList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfigList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.RefinementConfigList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfigList.Item(System.Int32)">
            <summary>
            Gets and sets the <see cref="T:Endeca.Navigation.RefinementConfig"/> at the specified index.  
            </summary>
            <param name="index">
            The zero-based index of the element to get or set.
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.RefinementConfig"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfigList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfigList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.RefinementConfigList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.RefinementConfigList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.RefinementConfigList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.RefinementConfigList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.Supplement">
            <summary>
            Class representing supplemental information and data for a navigation 
            query.
            </summary>
        </member>
        <member name="P:Endeca.Navigation.Supplement.Properties">
            <summary>
            Gets the properties of this <see cref="T:Endeca.Navigation.Supplement"/>.  
            </summary>
            <value>
            Properties of this supplement.
            </value>
            <remarks>
            Returns an empty set of properties if there are no properties 
            associated with this supplement.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Supplement.ERecs">
            <summary>
            Gets the Endeca records of this <see cref="T:Endeca.Navigation.Supplement"/>.
            </summary>
            <value>
            Endeca records (encapsulated in an <see cref="T:Endeca.Navigation.ERecList"/>) of this supplement.
            </value>
            <remarks>
            Returns an empty record list if there are no records assocaited 
            with this supplement.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.Supplement.NavigationRefs">
            <summary>
            Gets the navigation state queries referenced by this <see cref="T:Endeca.Navigation.Supplement"/>.  
            </summary>
            <value>
            Navigation references of this supplement.
            </value>
            <remarks>
            Returns an empty value list list if there are no navigation 
            state references.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.SupplementList">
            <summary>
            List of supplements (<see cref="T:Endeca.Navigation.Supplement"/> objects) exposed as an <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.Contains(System.Object)">
            <summary>
            Determines whether a supplement is in the <see cref="T:Endeca.Navigation.SupplementList"/>.
            </summary>
            <param name="item">
            The <see cref="T:Endeca.Navigation.Supplement"/> to locate in the <see cref="T:Endeca.Navigation.SupplementList"/>.
            </param>
            <returns>
            <c>true</c> if <paramref name="item"/> is found in the
            <see cref="T:Endeca.Navigation.SupplementList"/>.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.IndexOf(System.Object)">
            <summary>
            Returns the zero-based index of the first occurrence of a value
            in the <see cref="T:Endeca.Navigation.SupplementList"/> or in a portion of it.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:Endeca.Navigation.SupplementList"/>.
            </param>
            <returns>
            The zero-based index of the first occurrence of 
            <paramref name="item"/> within the entire 
            <see cref="T:Endeca.Navigation.SupplementList"/>, if found; otherwise, -1.
            </returns>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.Add(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to be added to the end of the
            <see cref="T:Endeca.Navigation.SupplementList"/>.
            </param>
            <returns>
            Nothing.
            </returns>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.Clear">
            <summary>
            This operation is not supported.
            </summary>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.Insert(System.Int32,System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index at which <paramref name="item"/> should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.Remove(System.Object)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from <see cref="T:Endeca.Navigation.SupplementList"/>.
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.RemoveAt(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to remove. 
            </param>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Endeca.Navigation.SupplementList"/> to a compatible one-dimensional 
            <see cref="T:System.Array"/>, starting at the specified index of the target array.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements 
            copied from <see cref="T:Endeca.Navigation.SupplementList"/>. The <c>Array</c> must have zero-based indexing. 
            </param>
            <param name="arrayIndex">
            The zero-based index in <paramref name="array"/> at which copying begins. 
            </param>
            <remarks>
            The specified array must be of a compatible type.
            <para>This method uses <see cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)"/> to copy the elements.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="array"/> is a <c>null</c> reference.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="arrayIndex"/> is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="array"/> is multidimensional.
            <para>-or-</para>
            <para>
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            </para>
            <para>-or-</para>
            <para>
            The number of elements in the source <see cref="T:Endeca.Navigation.SupplementList"/> is greater than the available
            space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </para>
            </exception>
            <exception cref="T:System.InvalidCastException">
            The type of the source <see cref="T:Endeca.Navigation.SupplementList"/> be cast automatically
            to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.SupplementList.GetEnumerator">
            <summary>
            Returns an enumerator for the entire <see cref="T:Endeca.Navigation.SupplementList"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:Endeca.Navigation.SupplementList"/>
            </returns>
            <remarks>
            Enumerators only allow reading the data in the collection. Enumerators cannot 
            be used to modify the underlying collection.
            </remarks>
        </member>
        <member name="P:Endeca.Navigation.SupplementList.IsFixedSize">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.SupplementList"/> has a fixed size.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.SupplementList"/> is a fixed size;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.SupplementList.IsReadOnly">
            <summary>
            Gets a value indicating whether the 
            <see cref="T:Endeca.Navigation.SupplementList"/> is read-only.
            </summary>
            <value>
            <c>true</c> if the <see cref="T:Endeca.Navigation.SupplementList"/> is read-only;
            otherwise, <c>false</c>.  The default is <c>true</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.SupplementList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Endeca.Navigation.Supplement"/> at the specified index.  
            The set operation is not supported.
            </summary>
            <param name="index">
            The zero-based index of the element to get. 
            </param>
            <value>
            The <see cref="T:Endeca.Navigation.Supplement"/> at the specified index.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is out of range.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Always for <c>set</c> operation.
            </exception>
        </member>
        <member name="P:Endeca.Navigation.SupplementList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:Endeca.Navigation.SupplementList"/>.
            </summary>
            <value>
            The number of elements actually contained in the <see cref="T:Endeca.Navigation.SupplementList"/>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.SupplementList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Endeca.Navigation.SupplementList"/>
            is synchronized (thread-safe).
            </summary>
            <value>
            <c>true</c> if access to the <see cref="T:Endeca.Navigation.SupplementList"/> is synchronized
             (thread-safe); otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
        </member>
        <member name="P:Endeca.Navigation.SupplementList.SyncRoot">
            <summary>
            This operation is not supported.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Endeca.Navigation.SupplementList"/>.
            </value>
            <exception cref="T:System.NotSupportedException">
            Always.
            </exception>
        </member>
        <member name="T:Endeca.Navigation.UrlENEQuery">
            <summary>
            An object used for formulating queries to an Endeca MDEX Engine 
            through the use of an input URL.
            </summary>
            <remarks>
            A direct subclass of <see cref="T:Endeca.Navigation.ENEQuery"/>, <see cref="T:Endeca.Navigation.UrlENEQuery"/> 
            allows an application to pass in an request URL's query string and 
            autopopulate the query fields to automatically query the MDEX 
            Engine objects specified in the URL.  Like the <see cref="T:Endeca.Navigation.ENEQuery"/> 
            superclass, a <see cref="T:Endeca.Navigation.UrlENEQuery"/> can express a request
            for a navigation, a record, a value search, and/or a value set search.
            <para>
              <b>Navigation Query</b>
            </para>
            <list type="table">
              <listheader>
                <term>Parameter Name</term>
                <term>Parameter Value Format</term>
                <term>ENEQuery Method</term>
              </listheader>
              <item>
                <term><c>N</c></term>
                <term>Either <c>0</c> (zero) for a root navigation request, or one or more dimension value IDs.</term>
                <term><b><see cref="P:Endeca.Navigation.ENEQuery.NavDescriptors"/></b></term>
              </item>
              <item>
                <term><c>Nao</c></term>
                <term>A number indicating the starting index of an aggregated record list.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavAggrERecsOffset"/></term>
              </item>
              <item>
                <term><c>Ne</c></term>
                <term>Either <c>0</c> indicating no refinement values are returned for any
                dimensions, or one or more dimension value IDs indicating which 
                dimension navigation refinements will be exposed.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavExposedRefinements"/></term>
              </item>
              <item>
                <term><c>Nf</c></term>
                <term>
                Sets a range filter with one of these formats:
                <code>
                <i>key</i>|LT+<i>number</i><br/>
                <i>key</i>|LTEQ+<i>number</i><br/>
                <i>key</i>|GT+<i>number</i><br/>
                <i>key</i>|GTEQ+<i>number</i><br/>
                <i>key</i>|BTWN+<i>num1</i>+<i>num2</i><br/>
                <i>key</i>|GCLT+<i>lat</i>,<i>lon</i>+<i>number</i><br/>
                <i>key</i>|GCGT+<i>lat</i>,<i>lon</i>+<i>number</i><br/>
                <i>key</i>|GCBTWN+<i>lat</i>,<i>lon</i>+<i>num1</i>+<i>num2</i>
                </code>
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRangeFilters"/></term>
              </item>
              <item>
                <term><c>Nk</c></term>
                <term>Specify <c>none</c> to request that no key properties be returned.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavNumAggrERecs"/></term>
              </item>
              <item>
                <term><c>Nl</c></term>
                <term>Sets an analytics computation with the format:
                <code>function|prop_key|rollup_key|prop_key|dimension_name|...</code>
                where <c><i>function</i></c> is one of <c>COUNT</c>, <c>SUM</c>, 
                <c>AVG</c>, <c>MIN</c>, <c>MAX</c>, or <c>CAVG</c>.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavAnalytics"/></term>
              </item>
              <item>
                <term><c>No</c></term>
                <term>A number indicating the starting index of a record list.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecsOffset"/></term>
              </item>
              	
              <item>
                <term><c>Np</c></term>
                <term>Either <c>0</c> (no records are returned with each aggregated record),
                <c>1</c> (only a single representative record is returned with each aggregate 
                record), or <c>2</c> (all records are returned with each aggregated record).
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecsPerAggrERec"/></term>
              </item>
              <item>
                <term><c>Nr</c></term>
                <term>The record filter for the navigation query.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRecordFilter"/></term>
              </item>
              <item>
            	<term><c>Nrc</c></term>
            	<term>
            	The dynamic refinement configs for the navigation query. 
             	Each dynamic refinement config is delimited by the pipe character
             	and must have the <code>id</code> setting.
            	Settings for a dynamic refinement config are:
            	<c>id</c>: The dimension value id.
            		Valid values are integers strictly greater than 0. 
            	<c>exposed</c>: Whether to expose the dimension value's refinement.
            		Valid values are <c>true</c> which indicates exposed and <c>false</c> which indicates unexposed. Defaults to exposed.
            	<c>dynrank</c>: Whether the dimension value has Dynamic Ranking enabled.
            		Valid values are <c>enabled</c> <c>disabled</c> and <code>defalut</code> which uses the setting from Developer Studio.
            	<c>dyncount</c>: The maximum number of dimension values to return.
            		Valid values are integers &gt;=0 or <code>default</code> which uses the setting from Developer Studio.
            	<c>dynorder</c>: Dynamic Ranking sort order.
            		Valid values are <code>static</code>, <code>dynamic</code> or <code>default</code> which uses the setting from Developer Studio.
            		
            		Omission of a setting or specifying the value <code>default</code> results in using the setting
            		in Developer Studio.
            	</term>
            	<term>
                  <cdata>N=0&amp;Nrc=id+134711+exposed+true+dynrank+enabled+dyncount+default+dynorder+dynamic|id+132830+dyncount+7</cdata>
            	</term>
            	<term><see cref="!:ENEQuery.SetNavRefinementConfigs"/></term>
              </item>	
              <item>
                <term><c>Nrs</c></term>
                <term>The structure expression for the navigation query.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRecordFilter"/></term>
              </item>	
              <item>
                <term><c>Ns</c></term>
                <term>One or more sort keys (properties or dimensions) for a 
                <see cref="T:Endeca.Navigation.Navigation"/> object's record list. Optionally, 
                each sort key can specify a sort order of <c>0</c>
                (ascending sort, the default) or <c>1</c> (descending sort).
                </term>
                <term><see cref="M:Endeca.Navigation.ENEQuery.SetNavActiveSortKeys(Endeca.Navigation.ERecSortKeyList)"/></term>
              </item>
              <item>
                <term><c>Ntk</c></term>
                <term>One or more search keys (properties or dimensions), 
                each delimited by the pipe character.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecSearches"/></term>
              </item>
              <item>
                <term><c>Ntpc</c></term>
                <term><c>1</c> (to turn on the computed alternative phrasings 
                feature for a record search) or <c>0</c> (to turn it off). 
                <c>0</c> is the default.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchComputeAlternativePhrasings"/></term>
              </item>
              <item>
                <term><c>Ntpr</c></term>
                <term><c>1</c> (to use a computed alternative phrasing for a 
                record search) or <c>0</c> (to use the end user's original query).
                <c>0</c> is the default.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchRewriteQueryWithAnAlternativePhrasing"/></term>
              </item>
              <item>
                <term><c>Ntt</c></term>
                <term>One or more terms for a record search. Each term is delimited 
                by a plus sign, and each set of terms is delimited by the 
                pipe character.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecSearches"/></term>
              </item>
              <item>
                <term><c>Ntx</c></term>
                <term>One or more sets of options for record search in the 
                navigation query. These options include search mode, 
                relevance ranking, and the snip and nosnip operators. 
                Each set of options is delimited by the pipe character.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecSearches"/></term>
              </item>
              <item>
                <term><c>Nty</c></term>
                <term><c>1</c> (to turn on the "Did You Mean" feature for a 
                record search) or <c>0</c> (to turn it off). 
                <c>0</c> is the default.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchDidYouMean"/></term>
              </item>
              <item>
                <term><c>Nrk</c></term>
                <term>The search key for relevance ranking record search</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRelRankERecSearch"/></term>
              </item>
              <item>
                <term><c>Nrt</c></term>
                <term>One or more terms for relevance ranking record search.
                Each term is delimited by a plus sign.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRelRankERecSearch"/></term>
              </item>
              <item>
                <term><c>Nrr</c></term>
                <term>The relevance ranking strategy to use with relevance
                ranking record search.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRelRankERecSearch"/></term>
              </item>
              <item>
                <term><c>Nu</c></term>
                <term>A property or dimension to be used as a rollup key for 
                aggregated records.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.NavRollupKey"/></term>
              </item>
            </list>
            <para>
              <b>Record Query</b>
            </para>
            <list type="table">
              <listheader>
                <term>Parameter Name</term>
                <term>Parameter Value Format</term>
                <term>ENEQuery Method</term>
              </listheader>
              <item>
                <term><c>R</c></term>
                <term>One or more Endeca record IDs.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.ERecs"/></term>
              </item>
            </list>
            <para>
              <b>Aggregated Record Query</b>
            </para>
            <list type="table">
              <listheader>
                <term>Parameter Name</term>
                <term>Parameter Value Format</term>
                <term>ENEQuery Method</term>
              </listheader>
              <item>
                <term><c>A</c></term>
                <term>The record specification of the Endeca aggregated record.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.AggrERecSpec"/></term>
              </item>
              <item>
                <term><c>Af</c></term>
                <term>One or more aggregated record navigation range filters.
                See the <c>Nf</c> parameter for the format.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavRangeFilters"/></term>
              </item>
              <item>
                <term><c>An</c></term>
                <term>One or more dimension value IDs.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavDescriptors"/></term>
              </item>
              <item>
                <term><c>Ar</c></term>
                <term>The record filter for the aggregated record navigation query.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavRecordFilter"/></term>
              </item>
              <item>
                <term><c>Ars</c></term>
                <term>The structure expression for the aggregated record query.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.AggrERecStructureExpr"/></term>
              </item>
              <item>
                <term><c>Au</c></term>
                <term>A property or dimension to be used as a rollup key for aggregated records.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.AggrERecRollupKey"/></term>
              </item>
            </list>
            <para>
              <b>Dimension Search Query</b>
            </para>
            <list type="table">
              <listheader>
                <term>Parameter Name</term>
                <term>Parameter Value Format</term>
                <term>ENEQuery Method</term>
              </listheader>
              <item>
                <term><c>D</c></term>
                <term>The dimension search query terms.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchTerms"/></term>
              </item>
              <item>
                <term><c>Df</c></term>
                <term>One or more dimension search range filters.
                See the <c>Nf</c> parameter for the format.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavRangeFilters"/></term>
              </item>
              <item>
                <term><c>Di</c></term>
                <term>One or more IDs of dimensions to search against.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchDimensions"/></term>
              </item>
              <item>
                <term><c>Dk</c></term>
                <term><c>0</c> means means default dimension value ranking is 
                used to order dimension search results, while <c>1</c> means 
                relevance ranking is used.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchRankResults"/></term>
              </item>
              <item>
                <term><c>Dn</c></term>
                <term>One or more dimension value IDs.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavDescriptors"/></term>
              </item>
              <item>
                <term><c>Do</c></term>
                <term>A number indicating the offset with which the
                dimension search will begin returning results per dimension.
                </term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchResultsOffset"/></term>
              </item>
              <item>
                <term><c>Dp</c></term>
                <term>The number of dimension value matches to return per dimension.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchNumDimValues"/></term>
              </item>
              <item>
                <term><c>Dr</c></term>
                <term>The record filter for the dimension search navigation query.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavRecordFilter"/></term>
              </item>
              <item>
                <term><c>Drs</c></term>
                <term>The structure expression for the dimension search navigation query.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavRecordFilter"/></term>
              </item>
              <item>
                <term><c>Dx</c></term>
                <term>The options for the dimension search operation.</term>
                <term><see cref="P:Endeca.Navigation.ENEQuery.DimSearchOpts"/></term>
              </item>
            </list>
            </remarks>
            <example>
            The set methods of this query class are not meant to be usually called
            through a direct method call.  For example a <b>UrlENEQuery</b> could formulate
            a request for a navigation and a value search from the URL:
            <code>controller.aspx?N=0&amp;D=cadillac</code>
            This example would express a 
            query to the MDEX Engine for the root navigation as well as a 
            value search for a value named "cadillac".
            <para>
            <b>UrlENEQuery</b> can be instantiated in a couple of ways in a ASP.NET and 
            C# usage. For example:
            </para>
            <code>
            IENEConnection nec = new HttpENEConnection("engine.endeca.com", 5001);
            ENEQuery usq = new UrlENEQuery(Page.Request.Url.Query);
            QueryResults = nec.Query(usq);
            </code>
            </example>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_DESCRIPTORS_PARAM">
            <summary>
            Parameter name for navigation values.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_ERECS_OFFSET_PARAM">
            <summary>
            Parameter name for navigation record list offset.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_AGGR_ERECS_OFFSET_PARAM">
            <summary>
            Parameter name for navigation aggregated record list offset.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_SPECIFIC_REFINEMENTS_PARAM">
            <summary>
            Parameter name for navigation exposed refinements.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_REFINEMENT_CONFIGS_PARAM">
            <summary>
            Parameter name for navigation refinement configs.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_ERECS_PER_AGGR_EREC_PARAM">
            <summary>
            Parameter name for navigation number of records per aggregated record.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_MERCH_PREVIEW_TIME_PARAM">
            <summary>
            Parameter name for navigation preview time.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_MERCH_RULE_FILTER_PARAM">
            <summary>
            ParameterName for Merch rule filter
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_SORT_KEY_PARAM">
            <summary>
            Parameter name for navigation sort key.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_SORT_ORDER_PARAM">
            <summary>
            Parameter name for navigation sort order.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_ROLLUP_KEY_PARAM">
            <summary>
            Parameter name for navigation rollup key.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_EREC_SEARCH_KEYS_PARAM">
            <summary>
            Parameter name for navigation record search keys.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_EREC_SEARCH_TERMS_PARAM">
            <summary>
            Parameter name for navigation record search term sets.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_EREC_SEARCH_DID_YOU_MEAN_PARAM">
            <summary> Parameter name for navigation record search did you mean.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_EREC_SEARCH_COMPUTE_ALTERNATIVE_PHRASINGS_PARAM">
            <summary> Parameter name for navigation record search compute-autophrase.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_EREC_SEARCH_REWRITE_WITH_AN_ALTERNATIVE_PHRASING_PARAM">
            <summary> Parameter name for navigation record search rewrite-autophrase.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_RELRANK_EREC_SEARCH_KEY_PARAM">
            <summary>
            Parameter name for navigation relevance ranking record search key.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_RELRANK_EREC_SEARCH_TERMS_PARAM">
            <summary>
            Parameter name for navigation relevance ranking record search terms.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_RELRANK_EREC_SEARCH_STRATEGY_PARAM">
            <summary>
            Parameter name for navigation relevance ranking record search strategy
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_RANGE_FILTERS_PARAM">
            <summary> Parameter name for navigation range filters.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_RECORD_FILTER_PARAM">
            <summary>
            Parameter name for navigation record filters.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_RECORD_STRUCTURE_EXPR_PARAM">
            <summary>
            Parameter name for navigation structure expressions.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_KEY_PROPERTIES_PARAM">
            <summary>
            Parameter name for navigation key properties.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_EREC_SEARCH_OPTS_PARAM">
            <summary>
            Parameter name for navigation record search option sets.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.NAV_ANALYTICS_PARAM">
            <summary>
            Parameter name for navigation analytics computation.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.ANALYTICS_PARAM">
            <summary>
            Parameter name for Analytics query
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.ERECS_PARAM">
            <summary>
            Parameter name for records.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.AGGR_EREC_PARAM">
            <summary>
            Parameter name for aggregated records.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.AGGR_EREC_NAV_DESCRIPTORS_PARAM">
            <summary>
            Parameter name for aggregated record descriptors.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.AGGR_EREC_NAV_RANGE_FILTERS_PARAM">
            <summary>
            Parameter name for aggregated record navigation range filters.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.AGGR_EREC_NAV_RECORD_FILTER_PARAM">
            <summary>
            Parameter name for aggregated record navigation record filter.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.AGGR_EREC_STRUCTURE_EXPR_PARAM">
            <summary>
            Parameter name for aggregated record structure expression.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.AGGR_EREC_ROLLUP_KEY_PARAM">
            <summary>
            Parameter name for aggreageted record rollup keys.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_TERMS_PARAM">
            <summary>
            Parameter name for dimension search terms.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_NAV_DESCRIPTORS_PARAM">
            <summary> 
            Parameter name for dimension search navigation descriptors.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_NAV_RANGE_FILTERS_PARAM">
            <summary> 
            Parameter name for dimension search navigation range filters.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_NAV_RECORD_FILTER_PARAM">
            <summary> 
            Parameter name for dimension search navigation record filter.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_NAV_RECORD_STRUCTURE_EXPR_PARAM">
            <summary> 
            Parameter name for dimension search navigation structure expression.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_NUM_DIM_VALUES_PARAM">
            <summary> 
            Parameter name for number of dimension values to return.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_DIMENSIONS_PARAM">
            <summary> 
            Parameter name for dimension search dimension.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_RESULTS_OFFSET_PARAM">
            <summary> 
            Parameter name for dimension search results offset.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_OPTS_PARAM">
            <summary> 
            Parameter name for dimension search options.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.DIM_SEARCH_RANK_RESULTS_PARAM">
            <summary> 
            Parameter name for ranking dimension search results.
            </summary>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.SESSION_ID_PARAM">
            <summary> 
            Parameter name for Session Id
            </summary>
            <remarks>
            Deprecated: Later versions of the Endeca API may not support this constant.
            </remarks>
        </member>
        <member name="F:Endeca.Navigation.UrlENEQuery.QUERY_ID_PARAM">
            <summary>
            Parameter name for Request Id
            </summary>
            <remarks>
            Deprecated: Later versions of the Endeca API may not support this constant.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.#ctor">
            <summary>
            No argument constructor.  
            </summary>
            <remarks>
            Individual setter methods must be called else query will result in 
            <see cref="T:Endeca.Navigation.EmptyENEQueryException"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.#ctor(System.String)">
            <summary>
            Obsolete.  Use the constructor that takes an encoding instead.
            </summary>
            <param name="queryString">
            Query string form URL to be parsed into invididual query options. 
            The URL is assumed to be encoded in "windows-1252".
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If there were any errors in parsing <paramref name="queryString"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.#ctor(System.String,System.String)">
            <summary>
            Constructor where the <paramref name="queryString"/> gets parsed
            into the individual query fields.
            </summary>
            <param name="queryString">
            Query string form URL to be parsed into invididual query options. 
            </param>
            <param name="encoding">
            The character set encoding of the URL.  Typically "windows-1252" 
            or "UTF-8".
            </param>
            <remarks>
            The common use for this constructor is to pass in 
            <see cref="P:System.Web.HttpRequest.QueryString"/> as is, i.e.
            arguments remain x-www-form-urlencoded, and this constructor
            parses out the arguments it is interested in.
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If there were any errors in parsing <paramref name="queryString"/>.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetR(System.String)">
            <summary>
            Sets the records for query. <see cref="P:Endeca.Navigation.ENEQuery.ERecs"/>.
            </summary>
            <param name="r">
            Record Ids delimitted by ' '.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If the record Ids are not able to be parsed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetN(System.String)">
            <summary>
            Sets the navigation field of the query.
            <see cref="P:Endeca.Navigation.ENEQuery.NavDescriptors"/>
            </summary>
            <param name="n">
            Dimension value Ids delimtted by ' '.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If the navigation values are not able to be parsed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNo(System.String)">
            <summary>
            Sets the navigation record list offset.
            <see cref="P:Endeca.Navigation.ENEQuery.NavERecsOffset"/>
            </summary>
            <param name="o">
            The offset into the record list.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If the offset parameter is not able to be parsed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNa(System.String)">
            <summary>
            Sets an analytics query.
            <see cref="P:Endeca.Navigation.ENEQuery.AnalyticsQuery"/>
            </summary>
            <param name="query">
            The analytics query.
            </param>
            <exception cref="T:Endeca.Navigation.Analytics.SyntaxException">
            If the query is malformed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNk(System.String)">
            <summary>
            Sets the key properties request for the navigation query.
            <see cref="P:Endeca.Navigation.ENEQuery.NavKeyProperties"/>
            </summary>
            <param name="o">
            The key properties request (<c>all</c> or <c>none</c>)
            for the navigation query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNao(System.String)">
            <summary>
            Sets the navigation aggregated record list offset.
            <see cref="P:Endeca.Navigation.ENEQuery.NavAggrERecsOffset"/>
            </summary>
            <param name="o">
            The offset into the record list.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If the aggregated offset parameter is not able to be parsed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNe(System.String)">
            <summary>
            Sets the exposed navigation refinements.
            <see cref="P:Endeca.Navigation.ENEQuery.NavExposedRefinements"/>
            </summary>
            <param name="e">
            Where e is ' ' delimited string of dimension value ids.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If there is an error in parsing the exposed refinements.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNp(System.String)">
            <summary>
            Sets the number of records per aggregated record.
            <see cref="P:Endeca.Navigation.ENEQuery.NavERecsPerAggrERec"/>
            </summary>
            <param name="num">
            Where num is one of the values:
            <see cref="F:Endeca.Navigation.ENEQuery.ALL_ERECS_PER_AGGR"/>,
            <see cref="F:Endeca.Navigation.ENEQuery.ONE_EREC_PER_AGGR"/>, or
            <see cref="F:Endeca.Navigation.ENEQuery.ZERO_ERECS_PER_AGGR"/>
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse the number of records per aggregated record.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNs(System.String)">
            <summary>
            Sets the sort key for the record list of the navigation.
            </summary>
            <param name="keys">
            Sort key of the navigation.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNso(System.String)">
            <summary>
            Sets the sort order for the record list of the navigation.
            </summary>
            <param name="key">
            Sort order of the navigation where order is one of:
            <see cref="F:Endeca.Navigation.ENEQuery.NAV_SORT_ASCENDING"/>, or
            <see cref="F:Endeca.Navigation.ENEQuery.NAV_SORT_DESCENDING"/>.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse the sort order.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNrc(System.String)">
            <summary>
            Sets the list of dynamic refinement configs for the navigation query.
            Dynamic refinement configs are delimited by '|'.
            </summary>
            <param name="configs">
            A urldecoded '|' delimited sequence of refinement configs.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException"> 
            If unable to parse or pair up key+value pairs.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNu(System.String)">
            <summary>
            Sets the rollup key for the navigation query.
            <see cref="P:Endeca.Navigation.ENEQuery.NavRollupKey"/>
            </summary>
            <param name="key">
            Rollup the navigation with this key.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNrk(System.String)">
            <summary>
            Sets the key of the record search of the navigation query
            using a specified relevance ranking strategy.
            </summary>
            <param name="key">
            The url decoded key to be used for relevance ranking. <code>key</code>
            should not contain any '|' characters.
            </param>
            <remarks>
            The Nrk parameter MUST be used with the Nrt parameter indicating
            the search term and the Nrr parameter indicating the relevance
            ranking strategy to be used.
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            Thrown if problem parsing or pairing up with search terms.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNrt(System.String)">
            <summary>
            Sets the terms of the record search of the navigation query using
            a specified relevance ranking strategy.
            </summary>
            <param name="terms">
            A urldecoded record search term set. <code>terms</code> should not
            contain any '|' characters.
            </param>
            <remarks>
            The Nrt parameter MUST be used with the Nrk parameter indicating 
            which key of the records to search and the Nrr parameter indicating
            the relevance ranking strategy to be used.
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            Thrown if problem parsing or pairing up with search keys.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNrr(System.String)">
            <summary>
            Sets the relevance ranking strategy for the record search of the navigation query.
            </summary>
            <param name="relRankStrategy">
            The urldecoded relevance ranking strategy to be used. <code>relRankStrategy</code>
            should not contain any '|' characters.
            </param>
            <remarks>
            The Nrr parameter MUST be used with the Nrt and Nrk parameters.
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            Thrown if problem parsing or pairing up with search keys.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNtk(System.String)">
            <summary>
            Sets the keys of the record search of the navigation query.
            </summary>
            <param name="keys">
            A urldecoded '|' delimited sequence of record search keys.
            </param>
            <remarks>
            The keys are delimited by '|'.  The Ntt parameter MUST be used 
            with the Ntt parameter indicating the search terms for each key.
            In addition Ntt should have the same number of term sets as Ntk 
            has keys. 
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            Thrown if problem parsing or pairing up with search terms.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNtt(System.String)">
            <summary>
            Sets the terms of the record search of the navigation query.
            </summary>
            <param name="termSets">
            A urldecoded '|' delimited sequence of record search term sets.
            </param>
            <remarks>
            Each set of terms are delimited by '|'.  The Ntt parameter MUST be 
            used with the Ntk parameter indicating which keys of the records to 
            search. In addition Ntt should have the same number of term sets as 
            Ntk has keys. 
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            Thrown if problem parsing or pairing up with search keys.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNtx(System.String)">
            <summary>
            Sets the options for the record search of the navigation query.
            </summary>
            <param name="termSets">
            A urldecoded '|' delimited sequence of record search option sets.
            </param>
            <remarks>
            Each set of options is delimited by '|'.  The Ntx parameter MUST be
            used with the Ntt and Ntk parameters, and should have the same number
            of values as these parameters.
            </remarks>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            Thrown if problem parsing or pairing up with search keys.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNty(System.String)">
            <summary>
            Sets whether the did you mean record search functionality is on in 
            the query. <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchDidYouMean"/>
            </summary>
            <param name="dym">
            <c>0</c> for off. <c>1</c> for on.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNtpc(System.String)">
            <summary>
            Sets whether the compute-autophrase record search functionality is on in 
            the query. <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchComputeAlternativePhrasings"/>
            </summary>
            <param name="Ntpc">
            <c>0</c> for off. <c>1</c> for on.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNtpr(System.String)">
            <summary>
            Sets whether the rewrite-autophrase record search functionality is on in 
            the query. <see cref="P:Endeca.Navigation.ENEQuery.NavERecSearchRewriteQueryWithAnAlternativePhrasing"/>
            </summary>
            <param name="Ntpr">
            <c>0</c> for off. <c>1</c> for on.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNf(System.String)">
            <summary>
            Sets the range filters for the navigation query.  
            <see cref="P:Endeca.Navigation.ENEQuery.NavRangeFilters"/>.
            </summary>
            <param name="filter">
            The range filters for navigation query.
            </param>
            <remarks>
            Multiple filters are specified by '|' delimiting each filter 
            as described in the <see cref="T:Endeca.Navigation.ENEQuery"/> method.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNr(System.String)">
            <summary>
            Sets the record filter for the navigation query.
            <see cref="P:Endeca.Navigation.ENEQuery.NavRecordFilter"/>.
            </summary>
            <param name="filter">
            The record filter for navigation query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNrs(System.String)">
            <summary>
            Sets the structure expression for the navigation query.
            <see cref="P:Endeca.Navigation.ENEQuery.NavRecordStructureExpr"/>.
            </summary>
            <param name="expr">
            The structure expression for navigation query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetNl(System.String)">
            <summary>
            Sets the analytics query.  <see cref="P:Endeca.Navigation.ENEQuery.NavAnalytics"/>.
            </summary>
            <param name="nl">
            Navigation analytics computation statement.  A pipe 
            delimited analytics statement.  
            See <see cref="P:Endeca.Navigation.ENEQuery.NavAnalytics"/> for syntax.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetA(System.String)">
            <summary>
            Sets the aggregated record for the query. 
            <see cref="P:Endeca.Navigation.ENEQuery.AggrERec"/>.
            </summary>
            <param name="a">
            Where a is an aggregated ERecord specification.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If the aggregated record Id is unable to be parsed.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetAn(System.String)">
            <summary>
            Sets the aggregated record navigation values for the query.
            <see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavDescriptors"/>.
            </summary>
            <param name="an">
            Values with which to retrieve the aggregated records in relation to.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetAf(System.String)">
            <summary>
            Sets the aggregated record navigation range filters.
            <see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavRangeFilters"/>.  
            </summary>
            <param name="filter">
            The navigation range filters for aggregated record query.
            </param>
            <remarks>
            Multiple filters are specified by '|' delimiting each filter 
            as described in the <see cref="T:Endeca.Navigation.ENEQuery"/> method.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetAr(System.String)">
            <summary>
            Sets the aggregated record navigation record filter.
            <see cref="P:Endeca.Navigation.ENEQuery.AggrERecNavRecordFilter"/>.
            </summary>
            <param name="filter">
            The record filter for the aggregated record query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetArs(System.String)">
            <summary>
            Sets the aggregated record structure expression.
            <see cref="P:Endeca.Navigation.ENEQuery.AggrERecStructureExpr"/>.
            </summary>
            <param name="expr">
            The structure expression for the aggregated record query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetAu(System.String)">
            <summary>
            Sets the aggregated record rollup key with which the aggregated 
            record is derived. <see cref="P:Endeca.Navigation.ENEQuery.AggrERecRollupKey"/>.
            </summary>
            <param name="au">
            Rollup key with which the aggregated record is derived.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetD(System.String)">
            <summary>
            Sets the string dimension search query terms.  
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchTerms"/>.
            </summary>
            <param name="d">
            Dimension search query terms.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDn(System.String)">
            <summary>
            Sets the navigation restriction for the dimension search.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavDescriptors"/>
            </summary>
            <param name="n">
            Where n is ' ' delimited string of dimension value Ids.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse the navigation restrictions.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDf(System.String)">
            <summary>
            Sets the dimension search navigation range filters.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavRangeFilters"/>.  
            </summary>
            <param name="filter">
            The navigation range filters for dimension search query.
            </param>
            <remarks>
            Multiple filters are specified by '|' delimiting each filter 
            as described in the <see cref="T:Endeca.Navigation.ENEQuery"/> method.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDr(System.String)">
            <summary>
            Sets the dimension search navigation record filter.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavRangeFilters"/>.
            </summary>
            <param name="filter">
            The record filter for the dimension search query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDrs(System.String)">
            <summary>
            Sets the dimension search navigation structure expression.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchNavRecordStructureExpr"/>.
            </summary>
            <param name="expr">
            The structure expression for the dimension search query.
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDp(System.String)">
            <summary>
            Sets the number of results to return per dimension.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchNumDimValues"/>
            </summary>
            <param name="num">
            Sets the number of values per dimension.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse the number of results per dimension.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDi(System.String)">
            <summary>
            Sets the dimension(s) with which to dimension search in.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchDimensions"/>.
            </summary>
            <param name="d">
            Where d is list of dimensions to search within.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse the the dimension Id(s).
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDo(System.String)">
            <summary>
            Sets the dimension search results offset.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchResultsOffset"/>.
            </summary>
            <param name="o">
            Where o is the offset into the results.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse the offset.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDx(System.String)">
            <summary>
            Sets the dimension search options.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchOpts"/>.
            </summary>
            <param name="opts">
            The options for the dimension search operation. 
            </param>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.SetDk(System.String)">
            <summary>
            Sets the dimension search behavior to order results.
            <see cref="P:Endeca.Navigation.ENEQuery.DimSearchRankResults"/>.
            </summary>
            <param name="r">
            Either <c>0</c> (the default) to use the default 
            dimension value ranking to order dimension search
            results or <c>1</c> to use relevance ranking.
            </param>
            <exception cref="T:Endeca.Navigation.UrlENEQueryParseException">
            If unable to parse how the dimension search results should be ordered.
            </exception>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.ToString">
            <summary>
            Returns a string representation of this query.  
            </summary>
            <returns>
            A URL query string representation.
            </returns>
            <remarks>
            The output format is of URL query string format.  The same format as 
            the input to the one argument constructor.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.ToString(System.String)">
            <summary>
            Returns a string representation of this query, using the given 
            character encoding.
            </summary>
            <returns>
            A URL query string representation.
            </returns>
            <param name="encoding">
            The URL encoding (for example, "latin-1" or "unicode").
            </param>
            <remarks>
            The output format is of URL query string format.  The same format as 
            the input to the one argument constructor.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlENEQuery.ToQueryString(Endeca.Navigation.ENEQuery,System.String)">
            <summary>
            Takes a <see cref="T:Endeca.Navigation.ENEQuery"/> and serializes the object into 
            URL query string format. 
            </summary>
            <param name="neq">
            <see cref="T:Endeca.Navigation.ENEQuery"/> to be serialized into URL query string format.
            </param>
            <param name="encoding">
            The URL encoding (for example, "latin-1" or "unicode").
            </param>
            <returns>
            A URL query string form of the <paramref name="neq"/>.
            </returns>
            <remarks>
            Parameters are x-www-form-urlencoded.
            </remarks>
        </member>
        <member name="T:Endeca.Navigation.UrlENEQueryParseException">
            <summary>
            Exception representing an error while parsing a URL for a <see cref="T:Endeca.Navigation.UrlENEQuery"/>.
            </summary>
        </member>
        <member name="T:Endeca.Navigation.UrlGen">
            <summary>
            A generic toolkit for manipulating and generating URL query strings.
            </summary>
            <remarks>
            The intended use of <see cref="T:Endeca.Navigation.UrlGen"/> was for the management of state 
            and query parameters when dealing with <see cref="T:Endeca.Navigation.UrlENEQuery"/> objects.  
            <para>
            <see cref="T:Endeca.Navigation.UrlGen"/> takes either a query string in a constructor as the 
            base query to work with or none which indicates that it begins with an 
            empty base.  The <see cref="M:Endeca.Navigation.UrlGen.ToString"/> method called immediately after 
            the constructor will return the original input URL or none if none was 
            specified.
            </para>
            <para>
            The remove params and add parameters are evaluated in order.  That is 
            removes placed after an add may delete the parameter you just added.  
            </para>
            <para>
            This toolkit attempts to preserve whatever input URL parameters are 
            input to the system as long as they follow the structure of an &amp; delimited,
            x-www-form-urlencoded parameter value pairs.  In the case of multiple 
            parameters with the same name, the multiple pairs will be preserved on 
            output, however, a remove, or add with the same name will remove or 
            overwrite the all of the keys with that name. An append on the other hand 
            will preserve the previous prameter.  Append adds parameters without 
            knowledge of the previous.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.#ctor">
            <summary>
            Obsolete.  Use the constructor that takes an encoding instead.
            This version defaults to using the "windows-1252" encoding.
            </summary>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.#ctor(System.String)">
            <summary>
            Obsolete.  Use the constructor that takes an encoding instead.
            This version defaults to using the "windows-1252" encoding.
            </summary>
            <param name="queryString">
            The base query string with which this class manipulates.
            </param>
            <remarks>
            This URL is the base with which this <see cref="T:Endeca.Navigation.UrlGen"/> 
            manipulates. <paramref name="startUrl"/>'s form is of URL query 
            string.  That is everything of a URL after the '?' mark and of 
            the form where the query is made up of key value pairs delimited 
            by '&amp;' and each pair delimited by '=' and the keys and values are 
            x-www-form-urlencoded.  
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.#ctor(System.String,System.String)">
            <summary>
            Constructor where the start URL will be the one specified in this 
            constructor.
            </summary>
            <param name="queryString">
            The base query string with which this class manipulates.
            </param>
            <param name="encoding">
            The encoding to use for the URL.  Typically "windows-1252" or "UTF-8".
            </param>
            <remarks>
            This URL is the base with which this <see cref="T:Endeca.Navigation.UrlGen"/> 
            manipulates. <paramref name="startUrl"/>'s form is of URL query 
            string.  That is everything of a URL after the '?' mark and of 
            the form where the query is made up of key value pairs delimited 
            by '&amp;' and each pair delimited by '=' and the keys and values are 
            x-www-form-urlencoded.  
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.AppendParam(System.String,System.String)">
            <summary>
            Manipulates the resultant url by adding this key value pair.
            </summary>
            <param name="key">
            Key name of the pair to be added.
            </param>
            <param name="val">
            Value to be added to the output url where the value is decoded.
            </param>
            <remarks>
            This method will NOT overwrite any of the original parameters with 
            the same key or any other parameter that got added by this same 
            method previously with the same key. In addition, it is assumed 
            that <pararef name="val"/> is decoded and will encode the value as 
            x-www-form-urlencoded on output. Values that are <c>null</c> or equal
            to "" will be skipped so that this method can be blindly called 
            without having to check if the value is present.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.AppendParams(System.Collections.ICollection)">
            <summary>
            Bulk append of param pairs.  
            </summary>
            <param name="c">
            Collection of key value pairs.
            </param>
            <remarks>
            Each member of the collection must be of the form (String) 
            &lt;key&gt;=&lt;value&gt; where the value is in x-www-form-urlencoded 
            form.  The semantics of these are the same as individual calls to 
            <see cref="M:Endeca.Navigation.UrlGen.AppendParam(System.String,System.String)"/> except that the values are 
            encoded.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.AddParam(System.String,System.String)">
            <summary>
            Manipulates the resultant URL by adding this key value pair.
            </summary>
            <param name="key">
            Key name of the pair to be added.
            </param>
            <param name="val">
            Value to be added to the output URL where the value is decoded.
            </param>
            <remarks>
            This method will overwrite ANY of the original parameters with the 
            same key and any other parameter that got added by this same method 
            previously with the same key.  In addition, it is assumed that 
            <paramref name="val"/> is decoded and will encode the value as 
            x-www-form-urlencoded on output. Values that are <c>null</c> or equal
            to "" will be skipped so that this method can be  blindly called 
            without having to check if the value is present.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.AddParams(System.Collections.ICollection)">
            <summary>
            Bulk add of param pairs.  
            </summary>
            <param name="c">
            Collection of key value pairs.
            </param>
            <remarks>
            Each member of the collection must be of the form (String) 
            &lt;key&gt;=&lt;value&gt; where the value is in x-www-form-urlencoded 
            form.  The semantics of these are the same as individual calls to 
            <see cref="M:Endeca.Navigation.UrlGen.AddParam(System.String,System.String)"/> except that the values are 
            encoded.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.RemoveParam(System.String)">
            <summary>
            Removes any key value parameter from the to be outputted URL with 
            the parameter name key.
            </summary>
            <param name="key">
            Parameter pair(s) to remove with the specified parameter name.
            </param>
            <remarks>
            This removes any parameter created preceeding this call either 
            from the initial query string specified in the constructor or any 
            parameter added from an <see cref="M:Endeca.Navigation.UrlGen.AddParam(System.String,System.String)"/> call.  In the case 
            of multiple parameters with the same name, this remove will remove 
            all pairs with the same name. As expected, calling remove on a 
            <see cref="T:Endeca.Navigation.UrlGen"/> with a empty constructor will not do anything 
            as there will be no parameters to remove.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.RemoveParams(System.Collections.ICollection)">
            <summary>
            Removes any key value parameter with the keys specified in the 
            collection. 
            </summary>
            <param name="c">
            Collection of keys specifying parameter pairs to remove.
            </param>
            <remarks>
            Same semantics as the <see cref="M:Endeca.Navigation.UrlGen.RemoveParam(System.String)"/> call except that 
            it is batch applied with <paramref name="c"/>.  Each element of 
            collection <paramref name="c"/> must be able to be casted as a 
            <see cref="T:System.String"/> and be non <c>null</c>.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.UrlGen.ToString">
            <summary>
            The output method on this class.
            </summary>
            <returns>
            The URL query string output of this class, where key value 
            pairs are delimited by '&amp;' and the pairs themselvs are 
            delimited by '=' and the values are x-www-form-urlencoded.
            </returns>
            <remarks>
            This method will output a query string format of the input 
            URL and subsequent add and remove calls. A call to this method 
            does not invalidate the class but merely generates a snapshot 
            output.
            </remarks>
        </member>
        <member name="M:Endeca.Navigation.VersionCheck.SetVersionSpec(System.String)">
            <summary>
            SetVersionSpec
            </summary>
            <param name="_vstr">
            _vstr
            </param>
        </member>
        <member name="M:Endeca.Navigation.VersionCheck.ParseFormatString(System.String)">
            <summary>
            ParseFormatString
            </summary>
            <param name="_vstr">
            _vstr
            </param>
            <returns>
            Hashtable
            </returns>
        </member>
        <member name="M:Endeca.Navigation.VersionCheck.CheckFormatString(System.String)">
            <summary>
            CheckFormatString
            </summary>
            <param name="_vstr">
            _vstr
            </param>
            <returns>
            boolean
            </returns>
        </member>
        <member name="M:Endeca.Navigation.VersionCheck.MakeFormatString(System.String)">
            <summary>
            MakeFormatString
            </summary>
            <param name="_vstr">
            _vstr
            </param>
            <returns>
            String
            </returns>
        </member>
        <member name="T:Endeca.Navigation.VersionMismatchException">
            <summary>
            Exception signalling the mismatch of two incompatible modules in the
            system while processing the query.  Most often this exception is 
            used to signal a mismatch between the <see cref="T:Endeca.Navigation.IENEConnection"/> and 
            the Endeca MDEX Engine itself.
            </summary>
        </member>
    </members>
</doc>
