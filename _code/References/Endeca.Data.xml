<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Endeca.Data</name>
    </assembly>
    <members>
        <member name="T:Endeca.Data.AggregateRecordDetailsCommand">
            <summary>
            Command to retrieve a single aggregate record from the MDEX Engine.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.EndecaCommand">
            <summary>
              Base class for commands.  Each <see cref="T:Endeca.Data.Provider.EndecaCommand"/>-subclass represents a specific
              type of query that is understood by an MDEX engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.EndecaCommand"/>.
            </summary>
            <remarks>
              A value must be assigned to <see cref="T:Endeca.Data.Provider.EndecaCommand"/> before executing this command.
            </remarks>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Initializes a command based on an EndecaConnection.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.Fill(Endeca.Data.Provider.CommandResult)">
            <summary>
              Executes this command and assigns the raw engine results to the specified result object.
              Note that the engine results are not marshalled into RAD output type until specifically
              requested by a consumer accessing <paramref name="result"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.AddOrReplaceParameter(System.String,System.Object)">
            <summary>
            Adds the parameter to the <see cref="T:Endeca.Data.EndecaParameterCollection"/> and replaces an existing parameter if one is present
            </summary>
            <param name="name">The parameter name</param>
            <param name="value">The parameter value</param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.ResetParameters">
            <summary>
              Clears out collection parameters and nulls scalar parameters.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.GetParameterValue(System.String)">
            <summary>
              Gets the value of the parameter with the specified name, or null if there is no such
              parameter.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.IsEmptyCommand">
            <summary>
              Returns true if no parameters are specified for the command, else returns false.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.OnParametersChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Provider.EndecaCommand.ParametersChanged"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.OnExecuting(Endeca.Data.Provider.ExecutingEventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Provider.EndecaCommand.EngineExecuting"/> event.
            </summary>
            <param name="args">Describes the query that is about to made.</param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.OnExecuted(Endeca.Data.Provider.ExecutedEventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Provider.EndecaCommand.EngineExecuted"/> event.
            </summary>
            <param name="args">Describes the query, and the value returned by the engine.</param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommand.OnCommandExecuted(Endeca.Data.Provider.CommandExecutedEventArgs)">
            <summary>
               Raises the <see cref="E:Endeca.Data.Provider.EndecaCommand.CommandExecuted"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:Endeca.Data.Provider.EndecaCommand.ParametersChanged">
            <summary>
              Raised when the value of a property of this command that affects the query made to the 
              MDEX engine has changed.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.EndecaCommand.EngineExecuting">
            <summary>
              Raises when this command is about to query the MDEX engine.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.EndecaCommand.EngineExecuted">
            <summary>
              Raised when this command has queried the MDEX engine, and results are available.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.EndecaCommand.CommandExecuted">
            <summary>
              Raised when this command has queried the MDEX engine the results have been marshaled
              into the RAD API objects.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.EndecaCommand.Connection">
            <summary>
            Gets or sets the connection to the MDEX Engine.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.EndecaCommand.ID">
            <summary>
            Gets or sets the command identifier
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.EndecaCommand.TypeNames">
            <summary>
              Gets or sets a <see cref="P:Endeca.Data.Provider.EndecaCommand.TypeNames"/> object that contains the names of the types
              that represent Endeca primitives (i.e. records and dimension values).
            </summary>
            <remarks>
              This property enables an application developer to define subclasses of Endeca primitives
              such as <see cref="T:Endeca.Data.Record"/> and <see cref="T:Endeca.Data.DimensionValue"/>, and instruct the RAD API
              to create instances of these application-specific subclasses instead of the base 
              primitive types.
              <para>
              When defining a subclass of a primitive, it is required that the subclass provide a 
              public, 0-argument constructor.  Additionally, the programmer will generally want to apply
              a <see cref="T:System.ComponentModel.TypeDescriptionProviderAttribute"/> to the subclass indicating that 
              <see cref="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1"/> should be used as the type description
              provider for the subclass.  This provider exposes the values in 
              <see cref="P:Endeca.Data.Record.Properties"/> or <see cref="P:Endeca.Data.DimensionValue.Properties"/> to be exposed
              as <see cref="T:System.ComponentModel.PropertyDescriptor"/>s.  In particular, this enables values in these 
              <see cref="T:Endeca.Data.PropertyMap"/>s to be accessed by name when using the Eval method in an ASP.NET 
              web application.</para>
              <example>
              The following example shows a simple <see cref="T:Endeca.Data.Record"/> subclass:
              <code>
              using System.ComponentModel;
              using Endeca.Data;
              using Endeca.Data.ComponentModel;
              
              [TypeDescriptionProvider(typeof(AttributeMapTypeDescriptionProvider&lt;AppRecord&gt;))]
              public class AppRecord : Record
              {
                 public AppRecord()
                 { }
              }
              </code>
              </example>
            </remarks>
        </member>
        <member name="P:Endeca.Data.Provider.EndecaCommand.Parameters">
            <summary>
            Gets the parameters collection which will be used to execute the command.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.ICommandSource`1">
            <summary>
              Defines a common interface indicating that an object is associated with an 
              <see cref="T:Endeca.Data.Provider.EndecaCommand"/>.
            </summary>
            <remarks>
              This interface supports the UrlManager class in the Endeca.Web assembly, and allows 
              commands and Endeca data sources to be treated in a uniform fashion.  In general, application
              code does not need to interact with this interface.
            </remarks>
            <typeparam name="TCommand">
              The type of the command associated with this source.
            </typeparam>
        </member>
        <member name="T:Endeca.Data.Provider.ICommandSource">
            <summary>
              Defines a common interface indicating that an object is associated with an 
              <see cref="T:Endeca.Data.Provider.EndecaCommand"/>.
            </summary>
            <remarks>
              This interface supports the UrlManager class in the Endeca.Web assembly, and allows 
              commands and Endeca data sources to be treated in a uniform fashion.  In general, application
              code does not need to interact with this interface.
            </remarks>
        </member>
        <member name="M:Endeca.Data.Provider.ICommandSource.GetEndecaCommand">
            <summary>
              Returns the command associated with this source.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.ICommandSource.ID">
            <summary>
              Gets a string that identifies this command source.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.ICommandSource.CommandExecuted">
            <summary>
              Raised when the command associated with this source has executed.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.ICommandSource`1.GetCommand">
            <summary>
             Returns the command associated with this source.
            </summary>
        </member>
        <member name="M:Endeca.Data.AggregateRecordDetailsCommand.#ctor">
            <summary>
            Constructs an AggregateRecordCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.AggregateRecordDetailsCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs an AggregateRecordCommand with an EndecaConnection.
            </summary>
        </member>
        <member name="M:Endeca.Data.AggregateRecordDetailsCommand.CopyFrom(Endeca.Data.AggregateRecordDetailsCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.AggregateRecordDetailsCommand.CopyFrom(Endeca.Data.NavigationCommand)">
            <summary>
              Copies values of properties from the specified <see cref="T:Endeca.Data.NavigationCommand"/> to the corresponding properties
              of this command.  Only those properties with the same name are copied.  Additional properties are ignored.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.AggregateRecordDetailsCommand.Execute">
            <summary>
            Executes the command and returns the AggregateRecord result from the MDEX Engine.
            </summary>       
        </member>
        <member name="P:Endeca.Data.AggregateRecordDetailsCommand.Identifier">
            <summary>
            Gets or sets the identifier used to look up the aggregate record.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordDetailsCommand.AggregationKey">
            <summary>
            Gets or sets the name of the property by which records should be aggregated
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordDetailsCommand.SelectedDimensionValueIds">
            <summary>
            Gets the collection of ids of all currently selected dimension values.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordDetailsCommand.RecordFilter">
            <summary>
            Gets or sets the record filter for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordDetailsCommand.RangeFilters">
            <summary>
            Gets the collection of range filters for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordDetailsCommand.EqlExpression">
            <summary>
            Gets or sets the EQL expression for the command.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.CommandResult">
            <summary>
              Base class for the results of executing a <see cref="T:Endeca.Data.Provider.EndecaCommand"/> instance.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.IResultBuilderContext">
            <summary>
              Provides contextual information for use when marshalling from the raw results returned by
              the MDEX engine, to the types in the RAD API.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.IResultBuilderContext.TypeNames">
            <summary>
              Gets the wrapper holding the assembly-qualified type names of the types that should be used to represent
              result objects.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.IResultBuilderContext.EngineResults">
            <summary>
              Gets the raw result object returned by the MDEX engine.
            </summary> 
        </member>
        <member name="P:Endeca.Data.Provider.IResultBuilderContext.Command">
            <summary>
              Gets the command that was executed to produce <see cref="P:Endeca.Data.Provider.IResultBuilderContext.EngineResults"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.CommandResult.OnRecordCreated(Endeca.Data.Provider.RecordCreatedEventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Provider.CommandResult.RecordCreated"/> event.
            </summary>
            <param name="args">Describes the record that was created.</param>
        </member>
        <member name="M:Endeca.Data.Provider.CommandResult.OnDimensionValueCreated(Endeca.Data.Provider.DimensionValueCreatedEventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Provider.CommandResult.DimensionValueCreated"/> event.
            </summary>
            <param name="args">Describes the dimension value that was created.</param>
        </member>
        <member name="M:Endeca.Data.Provider.CommandResult.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
              Force loading of all result buckets, so that we can get away with serializing only the 
              result table (and not the command or engine results).
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.CommandResult.GetResult(System.String)">
            <summary>
              Gets the result with the specified name, marshalling the engine results if necessary.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.CommandResult.RecordCreated">
            <summary>
              Raised when a new <see cref="T:Endeca.Data.Record"/> instance is created for this result object.  
              Listeners can add additional initialization behavior (for example adding additional 
              properties to the record) as desired.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.CommandResult.DimensionValueCreated">
            <summary>
              Raised when a new <see cref="T:Endeca.Data.DimensionValue"/> instance is created for this result object.  
              Listeners can add additional initialization behavior (for example adding additional 
              properties to the dimension value) as desired.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.CommandResult.Item(System.String)">
            <summary>
              Gets the result object with the specified name.
            </summary>
            <remarks>
              This property centralizes lazy masrshalling of objects returned by the engine into the
              types defined by the RAD API.  No marshalling occurs until a value is requested by accessing
              this property.
            </remarks>
            <param name="resultName">
              Name of the result to retrieve. Each <see cref="T:Endeca.Data.Provider.CommandResult"/>-subclass defines one or 
              more 'slices' or 'buckets' into which data from the MDEX is marshalled.  This parameter
              indicates which 'bucket' should be marshalled.
            </param>
        </member>
        <member name="P:Endeca.Data.Provider.CommandResult.CommandExecutor">
            <summary>
              Gets or sets the command executor that provides build for this 
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.CommandResult.Command">
            <summary>
              Gets or sets the command that filled this result instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.CommandResult.EngineResults">
            <summary>
              Gets or sets the raw results returned by the MDEX engine.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.CommandResult.ResultNames">
            <summary>
              Gets the collection of the names of the 'buckets' used in lazy-loading results.
            </summary>
        </member>
        <member name="T:Endeca.Data.AlternativePhrasingMode">
            <summary>
              Enumerates the possible values of <see cref="P:Endeca.Data.NavigationCommand.AlternativePhrasingMode"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.AlternativePhrasingMode.Disabled">
            <summary>
              The Endeca MDEX Engine will not compute alternative phrasing.
            </summary>
        </member>
        <member name="F:Endeca.Data.AlternativePhrasingMode.ComputeAlternativePhrasing">
            <summary>
              The Endeca MDEX Engine will compute alternative phrasings for the current record search query.
            </summary>
        </member>
        <member name="F:Endeca.Data.AlternativePhrasingMode.RewriteWithAlternativePhasing">
            <summary>
            The Endeca MDEX Engine will use one of the the alternative phrasings it has computed 
            instead of the end user's original record search query when computing the set of documents
            to return.
            </summary>
        </member>
        <member name="T:Endeca.Data.CommandSerializationContext">
            <summary>
              Provides additional contextual information for use by a <see cref="T:Endeca.Data.CommandSerializationProvider"/>
              when serializing or deserializing a command.
            </summary>
        </member>
        <member name="M:Endeca.Data.CommandSerializationContext.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.CommandSerializationContext"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.CommandSerializationContext.#ctor(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.CommandSerializationContext"/> instance.
            </summary>
            <param name="defaultCommand">
              Command that represents the initial 'default' state of the command to be serialized.
            </param>
        </member>
        <member name="P:Endeca.Data.CommandSerializationContext.DefaultCommand">
            <summary>
              Gets or sets the <see cref="T:Endeca.Data.Provider.EndecaCommand"/> that represents the initial 'default' state
              of the command to be serialized.
            </summary>
            <remarks>
              A <see cref="T:Endeca.Data.CommandSerializationProvider"/> implementation may make used of this initial
              command when constructing the state string for the command, perhaps not including 
              property values that match the values of the default command as part of the state string.
            </remarks>
        </member>
        <member name="P:Endeca.Data.CommandSerializationContext.ExtendedState">
            <summary>
              Gets or sets a collection of name value pairs represting additional state that should be 
              represented in the serialized state string.  This value may  be null.
            </summary>
        </member>
        <member name="T:Endeca.Data.ReflectionCommandSerializationProvider">
            <summary>
              Reflects over <see cref="T:Endeca.Data.Provider.EndecaCommand"/> instances and serializes and deserializes 
              properties that have been decorated with <see cref="T:Endeca.Data.CommandParameterPropertyAttribute"/>.
            </summary>
            <remarks>
              This class is similar to the obsolete <see cref="T:Endeca.Data.DefaultCommandSerializationProvider"/>, 
              but is aware of the <see cref="T:Endeca.Data.CommandSerializationContext"/>.
            </remarks>
        </member>
        <member name="T:Endeca.Data.CommandSerializationProvider">
            <summary>
              Base class for classes that can convert <see cref="T:Endeca.Data.Provider.EndecaCommand"/> instances to and from
              a string-based representation.
            </summary>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.CommandSerializationProvider"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.Serialize(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Serializes the specified command to a string-based representation.
            </summary>
            <param name="command">Command to serialize.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.Serialize(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              Serializes the specified command to a string-based representation.
            </summary>
            <param name="command">Command to serialize.</param>
            <param name="context">
              Provides additional contextual information for use during serialization.
            </param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.Deserialize(System.String,Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Initializes the specified command with values deserialized from the specified state, which
              was obtained by a previous call to <see cref="M:Endeca.Data.CommandSerializationProvider.Serialize(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </summary>
            <remarks>
              If the commandState is null or empty, no deserialization will be attempted.
            </remarks>
            <param name="commandState">State to deserialize.</param>
            <param name="command">Command to initialize.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.Deserialize(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              Initializes the specified command with values deserialized from the specified state, which
              was obtained by a previous call to <see cref="M:Endeca.Data.CommandSerializationProvider.Serialize(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </summary>
            <remarks>
              If the commandState is null or empty, no deserialization will be attempted.
            </remarks>
            <param name="commandState">State to deserialize.</param>
            <param name="command">Command to initialize.</param>
            <param name="context">
              Provides additional contextual information for use during deserialization.
            </param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Serializes the specified command to a string-based representation.
            </summary>
              This method is supports backwards compatibility.  
              Subclasses should prefer 
              <see cref="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>
            <param name="command">Command to serialize.</param>
            <exception cref="T:System.InvalidOperationException">
              if a subclass invokes this implementation.
            </exception>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              Serializes the specified command to a string-based representation.
            </summary>
            <param name="command">Command to serialize.</param>
            <param name="context">
              Provides additional contextual information for use during serialization.
            </param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Initializes the specified command with values deserialized from the specified state, 
              which was obtained by a previous call to 
              <see cref="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand)"/>.
            </summary>
            <remarks>
              This method is supports backwards compatibility.  
              Subclasses should prefer 
              <see cref="M:Endeca.Data.CommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>
            </remarks>
            <param name="commandState">State to deserialize.</param>
            <param name="command">Command to initialize.</param>
            <exception cref="T:System.InvalidOperationException">
              if a subclass invokes this implemention.
            </exception>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              Initializes the specified command with values deserialized from the specified state, which
              was obtained by a previous call to <see cref="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </summary>
            <param name="commandState">State to deserialize.</param>
            <param name="command">Command to initialize.</param>
            <param name="context">
              Provides additional contextual information for use during deserialization.
            </param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.ReflectionCommandSerializationProvider"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.#ctor(System.String,System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.ReflectionCommandSerializationProvider"/> instance.
            </summary>
            <param name="nameValueDelimiter">
              String used to delimit property names and values when constructing the state string.
            </param>
            <param name="propertyDelimiter"> 
              String used to delimit properties (each of which is represented by a name/value pair) when 
              constructing the state string.
            </param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="nameValueDelimiter"/> or <paramref name="propertyDelimiter"/> is null 
              or empty.
            </exception>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              See <see cref="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </summary>
            <remarks>
              This method serializes the specified command by iterating over each property of the
              specified command that has been decorted with <see cref="T:Endeca.Data.CommandParameterPropertyAttribute"/>.
              For each such property, it performs the following steps:
              <list type="bullet">
                 <item><description>
                 Calls <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeProperty(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor,Endeca.Data.CommandParameterPropertyAttribute,System.Object)"/>
                 to generate a string representation of the property value
                 </description></item>
                 <item><description>
                 Calls <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.ShouldIncludeSerializedProperty(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor,Endeca.Data.CommandParameterPropertyAttribute,System.String,Endeca.Data.CommandSerializationContext)"/>
                 to determine if the serialized property value should be included in the combined state
                 representing the command.
                 </description></item>
              </list>
              <para>
              Additionally, if there are values available in 
              <see cref="P:Endeca.Data.CommandSerializationContext.ExtendedState"/>, then for each value in this 
              collection, <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeExtendedParameter(System.String,System.Collections.Specialized.NameValueCollection)"/>
              is called.</para>
              <para>
              The serialized property values and extended parameters are collected into a dictionary.
              <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.JoinCommandState(System.Collections.Generic.IDictionary{System.String,System.String})"/> is then called to 
              produce a single string from this dictionary.
              </para>
            </remarks>
            <param name="command">Command to serialize.</param>
            <param name="context">Provides contextual information for use during serialization.</param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              See <see cref="M:Endeca.Data.CommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </summary>
            <remarks>
              This method calls <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.SplitCommandState(System.String)"/>
              to produce a dictionary of key value pairs representing serializied property values, and
              then passes this dictionary to 
              <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.DeserializeCommand(Endeca.Data.Provider.EndecaCommand,System.Collections.Generic.IDictionary{System.String,System.String})"/>.
            </remarks>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeProperty(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor,Endeca.Data.CommandParameterPropertyAttribute,System.Object)">
            <summary>
              Returns a serialized representation of the value of the specified property of the 
              specified command.
            </summary>
            <remarks>
              This method returns a key value pair in which the key is the value of the 
              <see cref="P:Endeca.Data.CommandParameterPropertyAttribute.Key"/> property of 
              <paramref name="commandAttribute"/>, and the value is the value produced by the 
              <see cref="T:System.ComponentModel.TypeConverter"/> associated with <paramref name="property"/>.
            </remarks>
            <param name="command">Command whose property value should be serialized.</param>
            <param name="property">Property whose value should be serialized.</param>
            <param name="commandAttribute">Attribute decorating the command property.</param>
            <param name="propertyValue">The property value to serialize.</param>
            <returns>
              A pair whose key represents an identifier for the specified property, and whose value
              is a serialized from of the property value.
            </returns>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.ShouldIncludeSerializedProperty(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor,Endeca.Data.CommandParameterPropertyAttribute,System.String,Endeca.Data.CommandSerializationContext)">
            <summary>
              Returns a value indicating if the specified serialized property value should be included
              in the state string that is produced by 
              <see cref="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </summary>
            <remarks>
              By default this method returns true.
            </remarks>
            <param name="command">Command from which the property value was serialized.</param>
            <param name="property">Property from which the property value was serialized.</param>
            <param name="commandAttribute">Attribute decorating the property.</param>
            <param name="serializedPropertyValue">Serialized representation of the property value.</param>
            <param name="context">
              Provides additional contextual information.  A subclass perhaps might use the 
              <see cref="P:Endeca.Data.CommandSerializationContext.DefaultCommand"/> when determining whether to 
              include the serialized property value.
            </param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeExtendedParameter(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
              Produces a pair representing the serialized form of the specified key and value in the 
              specified collection.  Returns null if the extended parameter should not be included in
              the command state string.
            </summary>
            <param name="key">The key specifying the key/value pair to serialize.</param>
            <param name="extendedState">Collection containing the key/value pair to serialize.</param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.DeserializeCommand(Endeca.Data.Provider.EndecaCommand,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Initializes the specified command with the serialized property values in the specified
              dictionary.
            </summary>
            <param name="command">Command to initialize.</param>
            <param name="serializedValues">
              Map of key value pairs representing serialized property values.
            </param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.SerializeWithTypeConverter(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Uses the <see cref="T:System.ComponentModel.TypeConverter"/> defined on the given <see cref="T:System.ComponentModel.PropertyDescriptor"/> to serialize the givenvalue.
            </summary>
            <param name="prop">Property whose value should be serialized.</param>
            <param name="value">Value to be serialized</param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.DeserializeProperty(System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IDictionary{System.String,System.String},Endeca.Data.CommandParameterPropertyAttribute)">
            <summary>
            Returns the deserialized property.  The serialized property is found in serializedProperties with key <see cref="P:Endeca.Data.CommandParameterPropertyAttribute.Key"/>.
            Uses the <see cref="T:System.ComponentModel.TypeConverter"/> defined on the <see cref="T:System.ComponentModel.PropertyDescriptor"/> to deserialize the value. 
            </summary>
            <param name="prop">Property whose value should be deserialized.</param>
            <param name="serializedProperties">Set of properties containing the desired deserializable property.</param>
            <param name="commandAttribute">Attribute decorating prop.</param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.SplitCommandState(System.String)">
            <summary>
              Parses the specified string and returns a dictionary containing serialized property 
              values.
            </summary>
            <param name="commandState">String to parse</param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.JoinCommandState(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Returns a string repesenting the specified dictionary of serialized property values.
            </summary>
            <remarks>
              This method produces a string in which the key and value in each pair are delimited by 
              the value of <see cref="P:Endeca.Data.ReflectionCommandSerializationProvider.NameValueDelimiter"/>, and
              the pairs are delimited by the value of 
              <see cref="P:Endeca.Data.ReflectionCommandSerializationProvider.PropertyDelimiter"/>.
            </remarks>
            <param name="serializedPropertyValues">
              Dictionary containing serialized property values.
            </param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.GetPropertyValue(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor)">
            <summary>
              Returns the value of the specified propety from the specified command.
            </summary>
            <remarks>
              This method is equivalent to <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/>, but it is faster 
              because it does not use reflection.
            </remarks>
            <param name="command">
              Command from which to retrieve the property value.</param>
            <param name="prop">
              Property for which value should be retrieved.
            </param>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.IndexCommandProperties">
            <summary>
              Index the serializable properties for the built-in command types.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.GetPropertiesForSerialization(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Gets the list of properties that should be included in serialization.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.ReflectPropertiesForSerialization(System.Type)">
            <summary>
              Reflects over the specified type and returns a list of the properties that should be 
              included in serialization.
            </summary>
        </member>
        <member name="P:Endeca.Data.ReflectionCommandSerializationProvider.NameValueDelimiter">
            <summary>
              String used to delimit property names and values when constructing a the command state 
              string. The default value of this property is ":".
            </summary>
        </member>
        <member name="P:Endeca.Data.ReflectionCommandSerializationProvider.PropertyDelimiter">
            <summary>
              String used to delimit properties (each of which is represented by a name/value pair) when 
              constructing the command state. The default value of this property is ",".
            </summary>
        </member>
        <member name="T:Endeca.Data.ReflectionCommandSerializationProvider.CommandPropertyInfo">
            <summary>
              Holds information about a property on an EndecaCommand-sublcass that has been marked with
              CommandParameterPropertyAttribute.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.FastOps.BuildFastGet(System.Reflection.PropertyInfo)">
            <summary>
              Builds a delegate that get the value of specified property
            </summary>
        </member>
        <member name="M:Endeca.Data.ReflectionCommandSerializationProvider.FastOps.BuildFastSet(System.Reflection.PropertyInfo)">
            <summary>
              Builds a delegate that sets the value of the specified property.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.UserProfileCollectionConverter">
            <summary>
            Class used by the <see cref="T:Endeca.Data.NavigationCommand"/> to serialize the <see cref="P:Endeca.Data.NavigationCommand.UserProfiles"/> property.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.UserProfileCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.UserProfileCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.UserProfileCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.CompoundDimensionSearchResultHolder">
            <summary>
            Utility class to hold the results of the <see cref="T:Endeca.Data.CompoundDimensionSearchCommand"/>
            This class is not expected to be used unless a user is working with the 
            <code>UrlManager</code> and the corresponding <code>CommandInfo</code>.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchResultHolder.Result">
            <summary>
            Return the <see cref="T:Endeca.Data.CompoundDimensionSearchResult"/> contained within this class
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchResultHolder.ResultNames">
            <summary>
            Return an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the result names.
            </summary>
        </member>
        <member name="T:Endeca.Data.MultipleRecordDetailsCommand">
            <summary>
            Command to retrieve record details for several <see cref="T:Endeca.Data.Record"/>s from the MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.MultipleRecordDetailsCommand.#ctor">
            <summary>
            Constructs a MultipleRecordDetailsCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.MultipleRecordDetailsCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs a MultipleRecordDetailsCommand with an EndecaConnection.
            </summary>
        </member>
        <member name="M:Endeca.Data.MultipleRecordDetailsCommand.CopyFrom(Endeca.Data.MultipleRecordDetailsCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.MultipleRecordDetailsCommand.Execute">
            <summary>
            Executes the command.
            </summary>
            <returns>The records identified by <seealso cref="P:Endeca.Data.MultipleRecordDetailsCommand.Identifiers"/>.</returns>
        </member>
        <member name="P:Endeca.Data.MultipleRecordDetailsCommand.Identifiers">
            <summary>
             Gets the identifiers of the records that should be retrieved by this command.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionSearchResultHolder">
            <summary>
            Utility class to hold the results of the <see cref="T:Endeca.Data.DimensionSearchCommand"/>
            This class is not expected to be used unless a user is working with the 
            <code>UrlManager</code> and the corresponding <code>CommandInfo</code> classes.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchResultHolder.Result">
            <summary>
            Return the <see cref="T:Endeca.Data.DimensionSearchResult"/> contained within this class
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchResultHolder.ResultNames">
            <summary>
            Return an <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the result names.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.IRootResult">
            <summary>
             Interface that allows an application specified object to be provided to data source controls
             as the 'root' object that represents the result of exectuting a command.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.IRootResult.Value">
            <summary>
              Gets the 'top-level' object that represents the result of executing a command.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.CommandExecutor">
            <summary>
              Base class for executors that interact with an MDEX engine by using the Endeca 
              Presentation API.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.EndecaCommandExecutor">
            <summary>
              Base class for comamnd executors
            </summary>
            <remarks>
              A command executor represents a strategy for exectuing an <see cref="T:Endeca.Data.Provider.EndecaCommand"/> against
              an MDEX engine, and constructing an object that represents the results of the query.  Note
              that these two operations are distinct; due to the lazy-loading support built in to
              <see cref="T:Endeca.Data.Provider.CommandResult"/>, the call to <see cref="M:Endeca.Data.Provider.EndecaCommandExecutor.BuildResults(System.String,Endeca.Data.Provider.IResultBuilderContext)"/>
              that will construct the result object occurs at some point after 
              <see cref="M:Endeca.Data.Provider.EndecaCommandExecutor.ExecuteCommand(Endeca.Data.Provider.EndecaCommand)"/> is called.
              <para>
               A command executor is also associated with an <see cref="T:Endeca.Data.Provider.EndecaPrimitiveBuilder"/> that 
               represents the core logic for constructing the 'primitive' Endeca types (DimensionValues,
               Records, etc).  This allows each executor to have easy access to this common construction
               logic.
              </para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommandExecutor.ExecuteCommand(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Executes the specified command and returns the raw result object returned by the MDEX 
              engine.
            </summary>
            <param name="command">Command to execute.</param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommandExecutor.BuildResults(System.String,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              Marhals a subset of the data returned by the MDEX engine into a result object.  The specific
              'slice' of data to marshal is indecated by <paramref name="resultName"/>.
            </summary>
            <param name="resultName">Name of the result object to construct.</param>
            <param name="context">
              Provides contextual information to be used when constructing the result object
            </param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommandExecutor.RaiseExecuting(Endeca.Data.Provider.EndecaCommand,Endeca.Data.Provider.ExecutingEventArgs)">
            <summary>
            Raises the <see cref="E:Endeca.Data.Provider.EndecaCommand.EngineExecuting"/> event on the specified command.
            </summary>
            <param name="command">Command on which to raise the event.</param>
            <param name="args">Provides data for the event.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="command"/> or <paramref name="args"/> is null.
            </exception>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaCommandExecutor.RaiseExecuted(Endeca.Data.Provider.EndecaCommand,Endeca.Data.Provider.ExecutedEventArgs)">
            <summary>
            Raises the <see cref="E:Endeca.Data.Provider.EndecaCommand.EngineExecuted"/> event on the specified command.
            </summary>
            <param name="command">Command on which to raise the event.</param>
            <param name="args">Provides data for the event.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="command"/> or <paramref name="args"/> is null.
            </exception>
        </member>
        <member name="P:Endeca.Data.Provider.EndecaCommandExecutor.PrimitiveBuilder">
            <summary>
              Gets the <see cref="T:Endeca.Data.Provider.EndecaPrimitiveBuilder"/> that can construct 'primitive' Endeca types,
              such as records and dimension values.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.CommandExecutor.ExecuteCommand(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.EndecaCommandExecutor.ExecuteCommand(Endeca.Data.Provider.EndecaCommand)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.CommandExecutor.InitializeQuery(Endeca.Data.Provider.EndecaCommand,Endeca.Navigation.ENEQuery)">
            <summary>
              Initializes the specified Presentation API query object with values from the specified 
              command.
            </summary>
            <param name="command">Provides inputs for the query object.</param>
            <param name="engineQuery">Query to initialize.</param>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.CommandExecutor.ToRangeFilterList(System.Collections.Generic.IEnumerable{Endeca.Data.RangeFilter})">
            <summary>
              Constructs a Presentation API range filter list from the specified collection of range 
              filters.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.CommandExecutor.ToDimValIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
              Constructs a Presentation API dimval ID list from the specified collection of IDs.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.CommandExecutor.ToSearchOptionsString(System.Nullable{Endeca.Data.SearchMode},System.String)">
            <summary>
            Constructs a string representation of the search options that is suitable for an Endeca API query.
            </summary>
            <param name="mode"><see cref="T:Endeca.Data.SearchMode"/> that specifies how matching will be performed.</param>
            <param name="relevanceRankingStrategy">Name of the relevance ranking strategy to use.</param>
            <returns>A string of the form <example>"mode+MODE+rel+RELEVANCE_RANK"</example>.</returns>
        </member>
        <member name="P:Endeca.Data.Provider.PresentationApi.CommandExecutor.PrimitiveBuilder">
            <summary>
              See <see cref="P:Endeca.Data.Provider.EndecaCommandExecutor.PrimitiveBuilder"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.NavigationCommandExecutor">
            <summary>
              Executes a <see cref="T:Endeca.Data.NavigationCommand"/> via the legacy Navigation API
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.NavigationCommandExecutor.InitializeQuery(Endeca.Data.Provider.EndecaCommand,Endeca.Navigation.ENEQuery)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.PresentationApi.CommandExecutor.InitializeQuery(Endeca.Data.Provider.EndecaCommand,Endeca.Navigation.ENEQuery)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.NavigationCommandExecutor.BuildResults(System.String,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.EndecaCommandExecutor.BuildResults(System.String,Endeca.Data.Provider.IResultBuilderContext)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.CommandConverter">
            <exclude />
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.CommandConverter.Convert(Endeca.Data.Provider.EndecaCommand)">
            <exclude />
        </member>
        <member name="T:Endeca.Data.UserProfile">
            <summary>
            Contains the name of a user profile.
            </summary>
        </member>
        <member name="M:Endeca.Data.UserProfile.#ctor">
            <summary>
            Instantiates a new UserProfile.
            </summary>
        </member>
        <member name="M:Endeca.Data.UserProfile.#ctor(System.String)">
            <summary>
            Instantiates a new UserProfile with the given name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Endeca.Data.UserProfile.Parse(System.String)">
            <summary>
            Returns a UserProfile from a properly formatted string
            </summary>
            <param name="value"><see cref="T:System.String"/> form of a <see cref="T:Endeca.Data.UserProfile"/></param>
            <returns>The resulting <see cref="T:Endeca.Data.UserProfile"/></returns>
        </member>
        <member name="M:Endeca.Data.UserProfile.ToString">
            <summary>
            Returns the string representation of this UserProfile.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Endeca.Data.UserProfile.Name">
            <summary>
            Gets or sets the user profile name
            </summary>
        </member>
        <member name="E:Endeca.Data.UserProfile.PropertyChanged">
            <summary>
              Raised when items in this collection have their properties changed.
            </summary>
        </member>
        <member name="T:Endeca.Data.UserProfileCollection">
            <summary>
            A <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> of <see cref="T:Endeca.Data.UserProfile"/>s
            </summary>
        </member>
        <member name="T:Endeca.Data.PropertyChangeNotifyKeyedCollection`2">
            <summary>
              A KeyedCollection that raises <see cref="E:Endeca.Data.ChangeNotifyCollection`1.CollectionChanged"/> whenever a
              property value of an item in the collection changes.
            </summary>
            <typeparam name="TKey">Type of keys used by the collection.</typeparam>
            <typeparam name="TItem">Type of items contained in the collection.</typeparam>
        </member>
        <member name="T:Endeca.Data.ChangeNotifyKeyedCollection`2">
            <summary>
              KeyedCollection that raises an event whenever items are added to or removed
              from the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyKeyedCollection`2.OnCollectionChanged(System.EventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.ChangeNotifyKeyedCollection`2.CollectionChanged"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyKeyedCollection`2.ClearItems">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)"/>
            </summary>
        </member>
        <member name="E:Endeca.Data.ChangeNotifyKeyedCollection`2.CollectionChanged">
            <summary>
              Raised when items are added to or removed from the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyChangeNotifyKeyedCollection`2.ClearItems">
            <summary>
            <see cref="M:Endeca.Data.ChangeNotifyKeyedCollection`2.ClearItems"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyChangeNotifyKeyedCollection`2.InsertItem(System.Int32,`1)">
            <summary>
            <see cref="M:Endeca.Data.ChangeNotifyKeyedCollection`2.InsertItem(System.Int32,`1)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyChangeNotifyKeyedCollection`2.RemoveItem(System.Int32)">
            <summary>
            <see cref="M:Endeca.Data.ChangeNotifyKeyedCollection`2.RemoveItem(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyChangeNotifyKeyedCollection`2.SetItem(System.Int32,`1)">
            <summary>
            <see cref="M:Endeca.Data.ChangeNotifyKeyedCollection`2.SetItem(System.Int32,`1)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyChangeNotifyKeyedCollection`2.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Method called when a property on an item in the collection is modified.
            Raises the OnCollectionChanged event.
            </summary>
        </member>
        <member name="M:Endeca.Data.UserProfileCollection.GetKeyForItem(Endeca.Data.UserProfile)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.CommandExecutedEventArgs">
            <summary>
              Provides data for the <see cref="E:Endeca.Data.Provider.EndecaCommand.CommandExecuted"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.CommandExecutedEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new <see cref="T:Endeca.Data.Provider.CommandExecutedEventArgs"/> instance.
            </summary>
            <param name="result">The result of executing a command</param>
        </member>
        <member name="P:Endeca.Data.Provider.CommandExecutedEventArgs.CommandResult">
            <summary>
            Gets the result of executing the command
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.CommandExecutionException">
            <summary>
              Represents the exception that is thrown when an error occurs when executing an 
              <see cref="T:Endeca.Data.Provider.EndecaCommand"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.CommandExecutionException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.CommandExecutionException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.CommandExecutionException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.CommandExecutionException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.Provider.CommandExecutionException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.CommandExecutionException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.Provider.CommandExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.RecordsPerAggregateRecord">
            <summary>
              Enumerates the available choices for specifying how may constituent records to include with each 
              <see cref="T:Endeca.Data.AggregateRecord"/>.  
            </summary>
        </member>
        <member name="F:Endeca.Data.RecordsPerAggregateRecord.None">
            <summary>
              Do not include constituent records with each aggregate record.
            </summary>
        </member>
        <member name="F:Endeca.Data.RecordsPerAggregateRecord.One">
            <summary>
              Include one record with each aggregate record.
            </summary>
        </member>
        <member name="F:Endeca.Data.RecordsPerAggregateRecord.All">
            <summary>
              Include all available records with each aggregate record.
            </summary>
        </member>
        <member name="T:Endeca.Data.AnalyticsDataTable">
            <summary>
            Encapsulates an analytics statement query result.  Extends <see cref="T:System.Data.DataTable"/>.
            </summary>
            <remarks>
            This table will contain two columns for each dimension that is used in a group by clause.
            One column will be named the dimension name and will contain the value of the 
            <see cref="P:Endeca.Data.DimensionValue.Name"/> property of each dimension value.  
            The other column will be named the dimension name plus "DimensionValue" and 
            will contain the actual <see cref="T:Endeca.Data.DimensionValue"/> instances.
            
            For example, if an analytics statement groups by the "Region" dimension, the "Region" column 
            will contain the string name of each dimension value inside "Region", and the "RegionDimensionValue"
            column will contain the actual <see cref="T:Endeca.Data.DimensionValue"/> instances.
            </remarks>
        </member>
        <member name="M:Endeca.Data.AnalyticsDataTable.#ctor(System.String)">
            <summary>
            Instantiates a new data table with the given table name
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Endeca.Data.AnalyticsDataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsDataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="P:Endeca.Data.AnalyticsDataTable.ErrorMessage">
            <summary>
            Gets or sets the analytics processing error if the analytics command failed. 
            </summary>
        </member>
        <member name="P:Endeca.Data.AnalyticsDataTable.TotalRowCount">
            <summary>
            Gets or sets the total row count for this analytics result.  This will be the same number 
            as the count of rows returned, unless paging was placed in the analytics statement, in 
            which case, TotalRowCount will be the number of rows that should have been returned. 
            </summary>
            <remarks>
            Paging is placed in analytics statements as follows: 
            RETURN AvgScoreByWinery AS SELECT AVG(P_Score) AS AvgScore GROUP BY P_Winery PAGE(0,10)
            </remarks>
        </member>
        <member name="T:Endeca.Data.AttributeMetadata">
            <summary>
            Represents metadata describing a property such as the property's type and whether it is
            searchable, sortable, or can act as an aggregation key.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.IAttributeMapProvider">
            <summary>
              Helper interface to indicate that a class has an attribute map whose values should be 
              exposed as properties.
            </summary>
        </member>
        <member name="P:Endeca.Data.ComponentModel.IAttributeMapProvider.Attributes">
            <summary>
            Returns the properties for this provider.
            </summary>
        </member>
        <member name="M:Endeca.Data.AttributeMetadata.#ctor(System.String,Endeca.Data.PropertyMap)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AttributeMetadata"/> instance
            </summary>
            <param name="name">The name of the attribute</param>
            <param name="properties">
              The properties that describe the metadata associated with the attribute.
            </param>
        </member>
        <member name="P:Endeca.Data.AttributeMetadata.Name">
            <summary>
            Gets the name of the attribute.
            </summary>
        </member>
        <member name="P:Endeca.Data.AttributeMetadata.Properties">
            <summary>
              Gets the properties that describe the metadata associated with the attribute.
            </summary>
        </member>
        <member name="T:Endeca.Data.DefaultCommandSerializationProvider">
            <summary>
              Serializes and deserializes <see cref="T:Endeca.Data.Provider.EndecaCommand"/> instances to and from a string 
              representation.
            </summary>
            <remarks>
              The serialization format produced by this serializer is most appropriate for storing in 
              ASP.NET view state.
            </remarks>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DefaultCommandSerializationProvider"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.#ctor(System.String,System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DefaultCommandSerializationProvider"/> instance.
            </summary>
            <param name="nameValueDelimiter">
              String used to delimit property names and values when constructing a URL-friendly string.
            </param>
            <param name="propertyDelimiter"> 
              String used to delimit properties (each of which is represented by a name/value pair) when 
              constructing a URL-friendly string.
            </param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="nameValueDelimiter"/> or <paramref name="propertyDelimiter"/> is null 
              or empty.
            </exception>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              See <see cref="M:Endeca.Data.CommandSerializationProvider.SerializeCommand(Endeca.Data.Provider.EndecaCommand)"/>.
            </summary>
            <remarks>
              This method iterates over each property of the command that has been decorated with
              <see cref="T:Endeca.Data.CommandParameterPropertyAttribute"/>, and calls 
              <see cref="M:Endeca.Data.DefaultCommandSerializationProvider.SerializeProperty(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor,Endeca.Data.CommandParameterPropertyAttribute)"/> 
              for each property. The results are then joined together into a single string using 
              <see cref="P:Endeca.Data.DefaultCommandSerializationProvider.NameValueDelimiter"/> and
              <see cref="P:Endeca.Data.DefaultCommandSerializationProvider.PropertyDelimiter"/>.
            </remarks>
            <param name="command">Command to serialize.</param>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand)">
            <summary>
              See <see cref="M:Endeca.Data.CommandSerializationProvider.DeserializeCommand(System.String,Endeca.Data.Provider.EndecaCommand)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.DeserializeCommand(System.Collections.Generic.Dictionary{System.String,System.String},Endeca.Data.Provider.EndecaCommand)">
            <summary>
            
            </summary>
            <param name="tokenDictionary"></param>
            <param name="command"></param>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.SerializeProperty(Endeca.Data.Provider.EndecaCommand,System.ComponentModel.PropertyDescriptor,Endeca.Data.CommandParameterPropertyAttribute)">
            <summary>
              Serializes the given property of the given command.  Uses the <see cref="P:Endeca.Data.CommandParameterPropertyAttribute.Key"/> property as the key.
              Uses the <see cref="T:System.ComponentModel.TypeConverter"/> defined on the <see cref="T:System.ComponentModel.PropertyDescriptor"/> to serialize the value.
            </summary>
            <param name="command">Command instance whose property value should be serialized.</param>
            <param name="prop">Property whose value should be serialized.</param>
            <param name="commandAttribute">Attribute decorating the command property.</param>
            <returns>
              A pair whose key represents an identifier for the specified property, and whose value
              is a serialzied from of the property value.
            </returns>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.ShouldIncludeSerializedProperty(System.ComponentModel.PropertyDescriptor,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandParameterPropertyAttribute,System.String)">
            <summary>
              Returns a value indicating if the specified serialized value of the specified command 
              property should be included in the serialized representation of the command
            </summary>
            <param name="property">The command property that is being serialized.</param>
            <param name="command">The command whose property was serialized.</param>
            <param name="commandAttribute">Attribute decorating the command property.</param>
            <param name="serializedPropertyValue">Serialized representation of the property.</param>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.SerializeWithTypeConverter(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Uses the <see cref="T:System.ComponentModel.TypeConverter"/> defined on the given <see cref="T:System.ComponentModel.PropertyDescriptor"/> to serialize the givenvalue.
            </summary>
            <param name="prop">Property whose value should be serialized.</param>
            <param name="value">Value to be serialized</param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.DeserializeProperty(System.ComponentModel.PropertyDescriptor,System.Collections.Generic.Dictionary{System.String,System.String},Endeca.Data.CommandParameterPropertyAttribute)">
            <summary>
            Returns the deserialized property.  The serialized property is found in serializedProperties with key <see cref="P:Endeca.Data.CommandParameterPropertyAttribute.Key"/>.
            Uses the <see cref="T:System.ComponentModel.TypeConverter"/> defined on the <see cref="T:System.ComponentModel.PropertyDescriptor"/> to deserialize the value. 
            </summary>
            <param name="prop">Property whose value should be deserialized.</param>
            <param name="serializedProperties">Set of properties containing the desired deserializable property.</param>
            <param name="commandAttribute">Attribute decorating prop.</param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.DefaultCommandSerializationProvider.JoinCommandState(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
              Joins the values in the specified collection into a single URL friendly string.
            </summary>
        </member>
        <member name="P:Endeca.Data.DefaultCommandSerializationProvider.NameValueDelimiter">
            <summary>
              String used to delimit property names and values when constructing a URL-friendly string.
              The default value of this property is ":".
            </summary>
        </member>
        <member name="P:Endeca.Data.DefaultCommandSerializationProvider.PropertyDelimiter">
            <summary>
              String used to delimit properties (each of which is represented by a name/value pair) when 
              constructing a URL-friendly string. The default value of this property is ",".
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.SearchConverter">
            <summary>
            Convert to and from the string form of a <see cref="T:Endeca.Data.Search"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.SearchConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert from <see cref="T:Endeca.Data.Search"/> to <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.SearchConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Can convert from <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.SearchConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert from the <see cref="T:System.String"/> representation to a <see cref="T:Endeca.Data.Search"/> object.
            </summary>
        </member>
        <member name="T:Endeca.Data.CompoundDimensionSearchCommand">
            <summary>
            Command to retrieve all combinations of <see cref="T:Endeca.Data.DimensionValue"/>s that match some or all of a 
            set of specified search terms from the MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.CompoundDimensionSearchCommand.#ctor">
            <summary>
            Constructs a DimensionSearchCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.CompoundDimensionSearchCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs a DimensionSearchCommand with a connection to an MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.CompoundDimensionSearchCommand.CopyFrom(Endeca.Data.CompoundDimensionSearchCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CompoundDimensionSearchCommand.CopyFrom(Endeca.Data.NavigationCommand)">
            <summary>
              Copies values of properties from the specified <see cref="T:Endeca.Data.NavigationCommand"/> to the corresponding properties
              of this command.  Only those properties with the same name are copied.  Additional properties are ignored.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CompoundDimensionSearchCommand.Execute">
            <summary>
            Executes the command and returns the <see cref="T:Endeca.Data.CompoundDimensionSearchResult"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.SelectedDimensionValueIds">
            <summary>
            Gets the collection of ids of all currently selected dimension values.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.RecordFilter">
            <summary>
            Gets or sets the record filter for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.RangeFilters">
            <summary>
            Gets the collection of range filters for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.EqlExpression">
            <summary>
            Gets or sets the EQL expression for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.SearchWithinDimensionIds">
            <summary>
            Gets the collection dimensions to search within.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.SearchTerms">
            <summary>
            Gets or sets the search terms for the dimension search.  
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.SearchMode">
            <summary>
            Gets or sets the search mode for the dimension search.  
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchCommand.DimensionValuesPerDimension">
            <summary>
            Gets or sets the number of results per compound group in the dimension search results.
            </summary>
        </member>
        <member name="T:Endeca.Data.CompoundDimensionSearchResult">
            <summary>
            Contains the results of a <see cref="T:Endeca.Data.CompoundDimensionSearchCommand"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.CompoundDimensionSearchResult.#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.ObjectModel.Collection{Endeca.Data.SearchReport}},System.Collections.Generic.IList{Endeca.Data.DimensionValueCollection},System.Boolean)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.CompoundDimensionSearchResult"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchResult.SearchReports">
            <summary>
            Gets the map of search breadcrumbs by the dimension that was searched.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchResult.CompoundDimensionValues">
            <summary>
            Gets the collection of <see cref="T:Endeca.Data.DimensionValueCollection"/> objects that represent 
            the results of the search.  Each <see cref="T:Endeca.Data.DimensionValueCollection"/> represents a navigation state.
            </summary>
        </member>
        <member name="P:Endeca.Data.CompoundDimensionSearchResult.HasMore">
            <summary>
            Gets whether the results for each group of dimensions have more results than were returned.
            This can occur when the user has specified the maximum number of results for each dimension group in 
            the <see cref="T:Endeca.Data.CompoundDimensionSearchCommand"/>
            </summary>
        </member>
        <member name="T:Endeca.Data.ContextPath">
            <summary>
              Contains methods to generate and parse a context path for a dimension value.
            </summary>
            <remarks>
              In order for the methods of <see cref="T:Endeca.Data.NavigationCommand"/> that manipulate the navigation
              state to function correctly, they need access to certain information regarding the 
              currently selected dimension values of a dimension, as well as the information about the
              dimension values in the path from the root to the dimension values.  This set of information
              is collectively referred to as the context path of a dimension value.
              <para>
              The context path can be represented as both a string and as an object. 
              </para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.ContextPath.ToContextPathString(Endeca.Data.DimensionValue,Endeca.Data.DimensionValuePath)">
            <summary>
              Generates a context path string for a dimension value, given the path of the to the 
              currently selected dimension value for a dimension.
            </summary>
            <param name="dimensionValue">
              The dimension value for which the context path should be created.
            </param>
            <param name="selectionPath">
              The path to the selected dimension value for the dimension state corresponding to 
              <paramref name="dimensionValue"/>.
            </param>
        </member>
        <member name="M:Endeca.Data.ContextPath.Parse(System.String)">
            <summary>
              Parses the specified string into a <see cref="T:Endeca.Data.ContextPath"/> instance.
            </summary>
            <param name="contextPath">String to parse</param>
        </member>
        <member name="P:Endeca.Data.ContextPath.RefinementParentId">
            <summary>
            The Id of RefinementsParent.  Is only populated for root dvals, because we only need it
            right now in the ExpandMore function.
            </summary>
        </member>
        <member name="T:Endeca.Data.DisconnectedDimensionValue">
            <summary>
            The disconnected dimension value is similar to a normal <see cref="T:Endeca.Data.DimensionValue"/> except
            that it does not know its parent, dimension value path, or dimension due to a limitation in
            the MDEX Engine.
            
            A <see cref="T:System.NotSupportedException"/> will be thrown if any of the following properties are 
            accessed for a disconnected dimension value: <see cref="P:Endeca.Data.DimensionValue.Parent"/>, 
            <see cref="P:Endeca.Data.DimensionValue.DimensionValuePath"/>, and <see cref="P:Endeca.Data.DimensionValue.Dimension"/>
            </summary>
            <remarks>
            Disconnected dimension values are found only on <see cref="T:Endeca.Data.BusinessRule"/>s.
            </remarks>
        </member>
        <member name="T:Endeca.Data.DimensionValue">
            <summary>
              Represents a node in the hierarchy of values associated with a dimension.
            </summary>
            <remarks>
              A dimension is a collection of related dimension value nodes, organized into a navigable 
              tree with a dimension root at the top. A <see cref="T:Endeca.Data.DimensionValue"/> instance represents 
              one of these nodes.
              <para>
              <see cref="T:Endeca.Data.DimensionValue"/> has several properties relating to the position of the value
              in the hierarchy:
              <list>
                 <item>
                    <see cref="P:Endeca.Data.DimensionValue.Parent"/> identifies the parent dimension value; the root
                    dimension value for a dimension has no parent.</item>
                 <item>
                    <see cref="P:Endeca.Data.DimensionValue.IsRoot"/> and <see cref="P:Endeca.Data.DimensionValue.IsLeaf"/> indicate
                    whether the dimension value is a root or a leaf node in the hierarchy.</item>
                 <item>
                    <see cref="P:Endeca.Data.DimensionValue.DimensionValuePath"/> contains the dimension values leading
                    from the root of the hierarchy to the dimension value.
                    </item>
              </list>
              </para>
            </remarks>
        </member>
        <member name="T:Endeca.Data.INameAndId">
            <summary>
            This interface promises a string Name and string Id attributes. It is used by 
            <see cref="T:Endeca.Data.IndexedCollection`1"/> to provide lookup by name or ID. Only 
            <see cref="T:Endeca.Data.DimensionState"/> and <see cref="T:Endeca.Data.DimensionValue"/> implement this interface.
            </summary>
        </member>
        <member name="P:Endeca.Data.INameAndId.Id">
            <summary>
            Gets the ID.
            </summary>
        </member>
        <member name="P:Endeca.Data.INameAndId.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:Endeca.Data.IAttributeValue">
            <summary>
            Interface that provides a uniform way to access property or dimension values from the MDEX Engine
            </summary>
        </member>
        <member name="P:Endeca.Data.IAttributeValue.Key">
            <summary>
              Gets the unique name of this <see cref="T:Endeca.Data.IAttributeValue"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.IAttributeValue.Value">
            <summary>
              Gets the value of this <see cref="T:Endeca.Data.IAttributeValue"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.#ctor">
            <summary>
              For internal use only.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.#ctor(System.String,System.String,System.String,Endeca.Data.PropertyMap,Endeca.Data.DimensionValue,System.Boolean,Endeca.Data.MultiSelect,System.Boolean)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionValue"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.Equals(Endeca.Data.IAttributeValue)">
            <summary>
              Implements value equality semantics for <see cref="T:Endeca.Data.IAttributeValue"/>.
              See <see cref="M:System.IEquatable`1.Equals(`0)"/>.  Only checks if both Dimension Values have
              the same Id.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.Equals(Endeca.Data.DimensionValue)">
            <summary>
              Implements value equality semantics for <see cref="T:Endeca.Data.DimensionValue"/>.
              See <see cref="M:System.IEquatable`1.Equals(`0)"/>.  Only checks if both Dimension Values have
              the same Id.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.Equals(System.Object)">
            <summary>
            <see cref="M:System.Object.Equals(System.Object)"/>.  For <see cref="T:Endeca.Data.DimensionValue"/>s equality is based on <see cref="P:Endeca.Data.DimensionValue.Id"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.GetHashCode">
            <summary>
            <see cref="M:System.Object.GetHashCode"/>.  For <see cref="T:Endeca.Data.DimensionValue"/> the hash code is based on <see cref="P:Endeca.Data.DimensionValue.Id"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValue.#ctor(System.String,System.String,System.String,Endeca.Data.PropertyMap,Endeca.Data.DimensionValue,System.Boolean,Endeca.Data.MultiSelect,System.Boolean,Endeca.Data.Configuration.DisplayNameSection)">
            <summary>
              Supports unit testing.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.Id">
            <summary>
              Gets the unique identifier of this <see cref="T:Endeca.Data.DimensionValue"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.Name">
            <summary>
              Gets the name of this <see cref="T:Endeca.Data.DimensionValue"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.IsRoot">
            <summary>
              Gets a value indicating if this <see cref="T:Endeca.Data.DimensionValue"/> is the root of the dimension
              value hierachy for its dimension.
            </summary>
            <remarks>
              This property is equivalent to testing if <see cref="P:Endeca.Data.DimensionValue.Parent"/> is null.
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.IsLeaf">
            <summary>
              Gets a value indicating if this is a leaf <see cref="T:Endeca.Data.DimensionValue"/>.
            </summary>
            <remarks>
              A leaf dimension value has no child dimension values.  In other words, it is a leaf in the
              hierarchy of dimension values associated with <see cref="P:Endeca.Data.DimensionValue.Dimension"/>.
              Note that this value refers to leaves in the complete dimension hierarchy, and is not 
              related to the refinements currently available in a given navigation state.
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.Properties">
            <summary>
            Gets the collection of <see cref="T:Endeca.Data.PropertyValue"/>s associated with this 
            <see cref="T:Endeca.Data.DimensionValue"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.IsNavigable">
            <summary>
              Gets a value indicating if this <see cref="T:Endeca.Data.DimensionValue"/> is navigable; that is, 
              whether selecting this <see cref="T:Endeca.Data.DimensionValue"/> will further refine the set of 
              records returned by a navigation query.
            </summary>
            <remarks>
              A <see cref="T:Endeca.Data.DimensionValue"/> may be navigated (i.e. selected) by calling 
              <see cref="M:Endeca.Data.NavigationCommand.SelectDimensionValue(Endeca.Data.DimensionValue)"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.Parent">
            <summary>
              Gets the parent dimension value of this dimension value.
            </summary>
            <value>
              The parent dimension value, or null if this dimension value is the root of a dimension 
              value hierarchy.
            </value>
            <exception cref="T:System.NotSupportedException">
              If this property is accessed on a <see cref="T:Endeca.Data.DisconnectedDimensionValue"/>
            </exception>
        </member>
        <member name="P:Endeca.Data.DimensionValue.Dimension">
            <summary>
              Gets the <see cref="P:Endeca.Data.DimensionValue.Dimension"/> to which this <see cref="T:Endeca.Data.DimensionValue"/> belongs.
            </summary>
            <exception cref="T:System.NotSupportedException">
              If this property is accessed on a <see cref="T:Endeca.Data.DisconnectedDimensionValue"/>.
            </exception>
        </member>
        <member name="P:Endeca.Data.DimensionValue.DimensionValuePath">
            <summary>
              Gets a collection containing the <see cref="T:Endeca.Data.DimensionValue"/>s along the path leading from
              from the root of dimension value of the the owning <see cref="P:Endeca.Data.DimensionValue.Dimension"/> to this 
              <see cref="T:Endeca.Data.DimensionValue"/> (inclusive).
            </summary>
            <exception cref="T:System.NotSupportedException">
              If this property is accessed on a <see cref="T:Endeca.Data.DisconnectedDimensionValue"/>
            </exception>
        </member>
        <member name="P:Endeca.Data.DimensionValue.DisplayName">
            <summary>
              Gets the display name for the dimension value.
            </summary>
            <remarks>
              The display name of a <see cref="T:Endeca.Data.DimensionValue"/> is intended for display in the user 
              interface of an application.  By default, it has the same value as 
              <see cref="P:Endeca.Data.DimensionValue.Name"/>, but may be overriden in order to provide a more 
              user-friendly value, or to support localization.
              <para>
              There are several approaches available for specifying display name for 
              a <see cref="T:Endeca.Data.DimensionValue"/>; please refer the the RAD Toolkit user's guide for further
              details.
              </para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.RecordCount">
            <summary>
              Gets the count of records beneath this dimension value, for the current navigation state.
            </summary>
            <value>
              The record count for this <see cref="T:Endeca.Data.DimensionValue"/>, or null if refinement statistics
              are not enabled in Developer Studio for the dimension containing this dimension value.
            </value>
            <remarks>
              The record count is the number of records that would be returned if this dimension value
              was added to the current navigation state by a call to 
              <see cref="M:Endeca.Data.NavigationCommand.SelectDimensionValue(Endeca.Data.DimensionValue)"/>.
              <para>
              If not null, this value is same as the value of the <b>DGraph.Bins</b> property.</para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.StaticRecordCount">
            <summary>
              Gets the static record count statistic for this dimension value.
            </summary>
            <value>
              The static record count for this <see cref="T:Endeca.Data.DimensionValue"/>, or null if this is not a
              refinement dimension value, or if the "stat-all" flag is not enabled in the MDEX Engine.
            </value>
            <remarks>
              The static record count is the number of records that are tagged with this dimension value;
              that is, it is the number of records that would be returned if this dimension value was 
              the only dimension value selected when executing a <see cref="T:Endeca.Data.NavigationCommand"/>.
              <para>
              If not null, this value is same as the value of the <b>DGraph.StaticBins</b> property.
              </para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.Ancestors">
            <summary>
              Returns the collection of ancestor <see cref="T:Endeca.Data.DimensionValue"/>s for this dimension 
              value.  The values in the collection are ordered from immediate parent of this dimension
              value to the root.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.MultiSelectSupport">
            <summary>
            Gets the type of multi-select this dimension supports.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.ContextPath">
            <summary>
              Gets a string representation of the location of this <see cref="T:Endeca.Data.DimensionValue"/> within
              the hierarchy of its associated <see cref="P:Endeca.Data.DimensionValue.Dimension"/>.
            </summary>
            <remarks>
              This representation is opaque; that is, it is not intended to be parsed or interpreted by 
              an application.  Instead, it should be used as a token to be passed to the navigation-
              related methods of <see cref="T:Endeca.Data.NavigationCommand"/>, for example 
              <see cref="M:Endeca.Data.NavigationCommand.SelectDimensionValue(System.String)"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionValue.IsSelected">
            <summary>
            A selected dimension value is a dimension value that has been specified in a query.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValue.IsImplicit">
            <summary>
            An implicit <see cref="T:Endeca.Data.DimensionValue"/> is a dimension value that is common to all remaning records.
            </summary>
        </member>
        <member name="M:Endeca.Data.DisconnectedDimensionValue.#ctor">
            <summary>
              For internal use only.
            </summary>
        </member>
        <member name="M:Endeca.Data.DisconnectedDimensionValue.#ctor(System.String)">
            <summary>
            For internal use only
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Endeca.Data.InvalidAnalyticsParametersException">
            <summary>
              Represents the exception that is thrown when an error occurred parsing or executing an 
              analytics query.
            </summary>
        </member>
        <member name="M:Endeca.Data.InvalidAnalyticsParametersException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.InvalidAnalyticsParametersException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.InvalidAnalyticsParametersException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.InvalidAnalyticsParametersException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.InvalidAnalyticsParametersException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.InvalidAnalyticsParametersException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.InvalidAnalyticsParametersException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.RangeFilterOperator">
            <summary>
            An enumeration of available range filter types used by <see cref="T:Endeca.Data.RangeFilter"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.LessThan">
            <summary>
            "less than" unbounded range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.LessThanOrEqual">
            <summary>
            "less than or equal" unbounded range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.GreaterThan">
            <summary>
            "greater than" unbounded range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.GreaterThanOrEqual">
            <summary>
            "greater than or equal" unbounded range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.Between">
            <summary>
            "between" bounded range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.GeocodeLessThan">
            <summary>
            "less than" unbounded geocode range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.GeocodeGreaterThan">
            <summary>
            "greater than" unbounded geocode range filter type
            </summary>
        </member>
        <member name="F:Endeca.Data.RangeFilterOperator.GeocodeBetween">
            <summary>
            "between" bounded geocode range filter type
            </summary>
        </member>
        <member name="T:Endeca.Data.ReadOnlyDictionary`2">
            <summary>
              A dictionary that is restricted to read-only operations.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.ReadOnlyDictionary`2"/> instance that is a read-only
              wrapper around the specified dictionary.
            </summary>
            <param name="dictionary">The dictionary to wrap.</param>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.ContainsKey(`0)">
            <summary>
              See <see cref="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
              See <see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
              Throws <see cref="T:System.NotSupportedException"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Clear">
            <summary>
              Throws <see cref="T:System.NotSupportedException"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
              Throws <see cref="T:System.NotSupportedException"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.GetEnumerator">
            <summary>
              See <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              See <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.ReadOnlyDictionary`2.Keys">
            <summary>
              See <see cref="P:System.Collections.Generic.IDictionary`2.Keys"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.ReadOnlyDictionary`2.Values">
            <summary>
              See <see cref="P:System.Collections.Generic.IDictionary`2.Values"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.ReadOnlyDictionary`2.Item(`0)">
            <summary>
              See <see cref="P:System.Collections.Generic.IDictionary`2.Item(`0)"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.ReadOnlyDictionary`2.Count">
            <summary>
              See <see cref="P:System.Collections.Generic.ICollection`1.Count"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>
              See <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.RecordAttributeCollection">
            <summary>
            A <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> of <see cref="T:Endeca.Data.RecordAttribute"/>s
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordAttributeCollection.GetKeyForItem(Endeca.Data.RecordAttribute)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
            </summary>
        </member>
        <member name="T:Endeca.Data.Dimension">
            <summary>
              Represents a set of static information that descrbes a dimension in the MDEX engine.
            </summary>
            <remarks>
              In contrast to the static information represented by a Dimension, a <see cref="T:Endeca.Data.DimensionState"/>
              represents a dynamic view of a dimension, appropriate for a user's current navigation state.
            </remarks>
        </member>
        <member name="M:Endeca.Data.Dimension.Equals(System.Object)">
            <summary>
              Implements equality by comparing the <see cref="P:Endeca.Data.Dimension.Id"/> of two dimensions.
              See <see cref="M:System.Object.Equals(System.Object)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Dimension.GetHashCode">
            <summary>
              See <see cref="M:System.Object.GetHashCode"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Dimension.Equals(Endeca.Data.Dimension)">
            <summary>
              Implements equality by comparing the <see cref="P:Endeca.Data.Dimension.Id"/> of two dimensions.
            </summary>
        </member>
        <member name="P:Endeca.Data.Dimension.Id">
            <summary>
              Gets the unique identifier of this dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.Dimension.Name">
            <summary>
              Gets the name of this dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.Dimension.DisplayName">
            <summary>
              Gets the display name of this dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.Dimension.Root">
            <summary>
              Gets the root dimension value for this dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.Dimension.MultiSelect">
            <summary>
            Gets the type of multi-select this dimension supports.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionStateGroup">
            <summary>
              Represents a named group of dimensions.
            </summary>
            <remarks>
              A dimension group provides a simple way to organize together one or more dimensions. This is
              typically done for presentation purposes. Dimension groups can be created and edited by using
              Developer Studio.
              <para>
              Dimensions are that are not explicitly placed in a named group when using Developer Studio 
              are automatically added to an implicit dimension group containing only that dimension. These
              dimension groups are all have no name; this is reflected by <see cref="T:Endeca.Data.DimensionStateGroup"/>
              by returning a 0-length string from <see cref="P:Endeca.Data.DimensionStateGroup.Name"/>. Because each
              dimension is places in its own implicit group, there may be more than one
              <see cref="T:Endeca.Data.DimensionStateGroup"/> with an empty name.</para>
              <para>
              Because dimension groups are most often used for presentation purposes,
              <see cref="P:Endeca.Data.DimensionStateGroup.DimensionStates"/> returns a list of 
              <see cref="P:Endeca.Data.DimensionStateGroup.DimensionStates"/>s, rather than <see cref="T:Endeca.Data.Dimension"/>s. When displaying the 
              refinements available to a user based on their current navigation state, it is common to 
              group the refinable dimensions by dimension group; 
              <see cref="P:Endeca.Data.DimensionStateGroup.DimensionStates"/> helps enable this use case.</para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.DimensionStateGroup.#ctor(System.String,System.Collections.Generic.IList{Endeca.Data.DimensionState})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionStateGroup"/> instance.
            </summary>
            <param name="name">Name of the dimension group.</param>
            <param name="dimensionStates">Collection of dimensions states in the group.</param>
        </member>
        <member name="P:Endeca.Data.DimensionStateGroup.Name">
            <summary>
              Gets the name of this <see cref="T:Endeca.Data.DimensionStateGroup"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionStateGroup.DimensionStates">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.DimensionState"/>s that belong to this
              <see cref="T:Endeca.Data.DimensionStateGroup"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionStateGroupCollection">
            <summary>
              A collection of <see cref="T:Endeca.Data.DimensionStateGroup"/> instances, keyed by <see cref="P:Endeca.Data.DimensionStateGroup.Name"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionStateGroupCollection.#ctor(System.Collections.Generic.IDictionary{System.String,Endeca.Data.DimensionStateGroup})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionStateGroupCollection"/> instance.
            </summary>
            <param name="groups"></param>
        </member>
        <member name="M:Endeca.Data.DimensionStateGroupCollection.GetEnumerator">
            <summary>
              See <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionStateGroupCollection.Item(System.String)">
            <summary>
              Gets the <see cref="T:Endeca.Data.DimensionStateGroup"/> with the specified name, or null if there 
              is no such group.
            </summary>
            <param name="name">Name of the dimension state group to retrieve.</param>
        </member>
        <member name="P:Endeca.Data.DimensionStateGroupCollection.DimensionStates">
            <summary>
            Enumerates the <see cref="T:Endeca.Data.DimensionState"/>s of all contained <see cref="T:Endeca.Data.DimensionStateGroup"/>s
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionStateGroupCollection.Count">
            <summary>
              Gets the number of dimension state groups in this collection.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionStateTypes">
            <summary>
            Enumeration of possible states of a <see cref="T:Endeca.Data.DimensionState"/>.  These are typically used to 
            filter <see cref="T:Endeca.Data.DimensionState"/>s. They describe <see cref="T:Endeca.Data.DimensionState"/>s that have refinement 
            <see cref="T:Endeca.Data.DimensionValue"/>s, are fully selected (containing only already selected <see cref="T:Endeca.Data.DimensionValue"/>s), 
            or are fully implicit (containing only implicit <see cref="T:Endeca.Data.DimensionValue"/>s. 
            </summary>
        </member>
        <member name="F:Endeca.Data.DimensionStateTypes.Refinable">
            <summary>
            A <see cref="T:Endeca.Data.DimensionState"/> that either contains refinement <see cref="T:Endeca.Data.DimensionValue"/>s or would if it were expanded.
            </summary>
        </member>
        <member name="F:Endeca.Data.DimensionStateTypes.FullySelected">
            <summary>
            A <see cref="T:Endeca.Data.DimensionState"/> that has no more refinement <see cref="T:Endeca.Data.DimensionValue"/>s because of other 
            currently selected <see cref="T:Endeca.Data.DimensionValue"/>s in the Dimension.
            </summary>
        </member>
        <member name="F:Endeca.Data.DimensionStateTypes.FullyImplicit">
            <summary>
            A <see cref="T:Endeca.Data.DimensionState"/> that has no more refinement <see cref="T:Endeca.Data.DimensionValue"/>s because all of the 
            remaining <see cref="T:Endeca.Data.DimensionValue"/>s are made implicit by the current filters.
            </summary>
        </member>
        <member name="T:Endeca.Data.EmptyQueryException">
            <summary>
              Exception thrown when a <see cref="T:Endeca.Data.Provider.EndecaCommand"/> is excuted, without setting  any 
              properties that express a valid query to the MDEX engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.EmptyQueryException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.EmptyQueryException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.EmptyQueryException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.EmptyQueryException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.EmptyQueryException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.EmptyQueryException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.EmptyQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.PartialQueryException">
            <summary>
              Exception thrown when an <see cref="T:Endeca.Data.Provider.EndecaCommand"/> is excuted, when setting only a subset
              of the properties that express a valid query to the MDEX engine.   
            </summary>
        </member>
        <member name="M:Endeca.Data.PartialQueryException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.PartialQueryException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.PartialQueryException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.PartialQueryException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.PartialQueryException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.PartialQueryException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.PartialQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.PropertyMap">
            <summary>
              A multi-map like collection of <see cref="T:Endeca.Data.PropertyValue"/> instances.
            </summary>
        </member>
        <member name="T:Endeca.Data.IAttributeMap">
            <summary>
              Represents a read-only collection of <see cref="T:Endeca.Data.IAttributeValue"/> instances.  This collection
              provides a multi-map like abstraction, in which multiple <see cref="T:Endeca.Data.IAttributeValue"/> 
              instances that share a key can be present in the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.IAttributeMap.ByKey(System.String)">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.IAttributeValue"/> instances in this map that have the
              specified key.
            </summary>
            <param name="key">Key of the attribute values to return.</param>
        </member>
        <member name="M:Endeca.Data.IAttributeMap.ContainsKey(System.String)">
            <summary>
              Returns a value indicating if an <see cref="T:Endeca.Data.IAttributeMap"/> with the specified key is
              contained in this map.
            </summary>
            <param name="key">Key to test.</param>
        </member>
        <member name="M:Endeca.Data.IAttributeMap.GroupByKeys">
            <summary>
              Enumerates through the distinct keys contained in this map, and the collection of values
              that share each key.
            </summary>
        </member>
        <member name="M:Endeca.Data.IAttributeMap.JoinValues(System.String,System.String)">
            <summary>
              Returns a string consisting of the <see cref="P:Endeca.Data.IAttributeValue.Value"/> of each of the
              attribute values in the map for the specified key, separated by the specified delimiter.
            </summary>
            <param name="key">Key of the attribute values to join.</param>
            <param name="delimiter">Delimiter that will separate the values in the joined string.</param>
        </member>
        <member name="P:Endeca.Data.IAttributeMap.Item(System.String)">
            <summary>
              Gets the <see cref="T:Endeca.Data.IAttributeValue"/> instance with the specified key.  If there are more
              than one instance for the key the first (i.e. the instance that was added to this map first)
              is returned. Returns null if there is no such instance.
            </summary>
            <param name="key">Key of the attribute value to return.</param>
        </member>
        <member name="P:Endeca.Data.IAttributeMap.Count">
            <summary>
              Gets the number of <see cref="T:Endeca.Data.IAttributeValue"/> instances in this map.
            </summary>
        </member>
        <member name="P:Endeca.Data.IAttributeMap.KeyCount">
            <summary>
              Gets the number of distinct keys in this map.
            </summary>
            <remarks>
              Note that this count may be different from <see cref="P:Endeca.Data.IAttributeMap.Count"/>, because 
              the map may contain more than one <see cref="T:Endeca.Data.IAttributeValue"/> for a given key.
            </remarks>
        </member>
        <member name="M:Endeca.Data.PropertyMap.ByKey(System.String)">
            <summary>
              See <see cref="M:Endeca.Data.IAttributeMap.ByKey(System.String)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.ContainsKey(System.String)">
            <summary>
              See <see cref="M:Endeca.Data.IAttributeMap.ContainsKey(System.String)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.GroupByKeys">
            <summary>
              See <see cref="M:Endeca.Data.IAttributeMap.GroupByKeys"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.JoinValues(System.String,System.String)">
            <summary>
               See <see cref="M:Endeca.Data.IAttributeMap.JoinValues(System.String,System.String)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.Add(Endeca.Data.PropertyValue)">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.Add(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.Clear">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.Clear"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.Contains(Endeca.Data.PropertyValue)">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.CopyTo(Endeca.Data.PropertyValue[],System.Int32)">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.Remove(Endeca.Data.PropertyValue)">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.Remove(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.GetEnumerator">
            <summary>
              See <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyMap.Add(System.String,System.String)">
            <summary>
              Adds a new <see cref="T:Endeca.Data.PropertyValue"/> with the specified key and value to the collection.
            </summary>
            <param name="key">Key of the property value to add.</param>
            <param name="value">Value of the property value to add.</param>
            <returns>The new <see cref="T:Endeca.Data.PropertyValue"/>that was added to the collection.</returns>
        </member>
        <member name="M:Endeca.Data.PropertyMap.RemoveKey(System.String)">
            <summary>
              Removes all property value with the specified key from the collection.  Returns a value
              indicating if any values were removed.
            </summary>
            <param name="key">Key to remove.</param>
        </member>
        <member name="P:Endeca.Data.PropertyMap.Item(System.String)">
            <summary>
              See <see cref="P:Endeca.Data.IAttributeMap.Item(System.String)"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.PropertyMap.Count">
            <summary>
              See <see cref="P:Endeca.Data.IAttributeMap.Count"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.PropertyMap.KeyCount">
            <summary>
              See <see cref="P:Endeca.Data.IAttributeMap.KeyCount"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.PropertyMap.IsReadOnly">
            <summary>
              See <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.PropertyMap.Keys">
            <summary>
              Returns a collection of the unique keys in this collection. 
            </summary>
        </member>
        <member name="T:Endeca.Data.CommandParameterPropertyAttribute">
            <summary>
              Indicates that a property represents a value that acts as input to a query to the MDEX 
              Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.CommandParameterPropertyAttribute.Match(System.Object)">
            <summary>
              See <see cref="M:System.Attribute.Match(System.Object)"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.CommandParameterPropertyAttribute.Key">
            <summary>
            Gets or sets the key for identification of this property as a URL query parameter.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionSearchCommand">
            <summary>
            Command to retrieve the set of <see cref="T:Endeca.Data.DimensionValue"/>s that match a given set of search terms from the MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionSearchCommand.#ctor">
            <summary>
            Constructs a DimensionSearchCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionSearchCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs a DimensionSearchCommand with a connection to an MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionSearchCommand.CopyFrom(Endeca.Data.DimensionSearchCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.DimensionSearchCommand.CopyFrom(Endeca.Data.NavigationCommand)">
            <summary>
              Copies values of properties from the specified <see cref="T:Endeca.Data.NavigationCommand"/> to the corresponding properties
              of this command.  Only those properties with the same name are copied.  Additional properties are ignored.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.DimensionSearchCommand.Execute">
            <summary>
            Executes the command and returns the DimensionSearchResult.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.SearchWithinDimensionId">
            <summary>
            Gets the collection dimensions to search within.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.SearchTerms">
            <summary>
            Gets or sets the search terms for the dimension search.  
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.SearchMode">
            <summary>
            Gets or sets the search mode for the dimension search.  
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.SearchRelevanceRanking">
            <summary>
            Gets or sets the relevance ranking strategy for the dimension search.  
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.DimensionValuesPerDimension">
            <summary>
            Gets or sets the number of dimension values to return per dimension in the dimension search results.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.SelectedDimensionValueIds">
            <summary>
            Gets the collection of ids of all currently selected dimension values.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.RecordFilter">
            <summary>
            Gets or sets the record filter for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.RangeFilters">
            <summary>
            Gets the collection of range filters for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchCommand.EqlExpression">
            <summary>
            Gets or sets the EQL expression for the command.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionStatesResult">
            <summary>
              This class represents the current <see cref="T:Endeca.Data.DimensionState"/>s of all applicable Dimensions 
              in the MDEX Engine. This class can also filter the complete set of 
              <see cref="T:Endeca.Data.DimensionState"/>s to include any combination of refinable, fully implicit, and
              fully selected <see cref="T:Endeca.Data.DimensionState"/>s and to group any combination of 
              <see cref="T:Endeca.Data.DimensionState"/>s by Dimension group.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionStatesResult.#ctor(System.Collections.Generic.IList{Endeca.Data.DimensionState})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionStatesResult"/> instance.
            </summary>
            <param name="completeDimensionStates">
              The complete list of complete dimension states contained in this result.
            </param>
        </member>
        <member name="M:Endeca.Data.DimensionStatesResult.GetGroupedDimensionStates(Endeca.Data.DimensionStateTypes)">
            <summary>
            Returns a <see cref="T:Endeca.Data.DimensionStateGroupCollection"/> containing <see cref="T:Endeca.Data.DimensionStateGroup"/>s
            matching the <see cref="T:Endeca.Data.DimensionStateTypes"/> specified in the input.
            </summary>
            <param name="desiredState">
              The combination of <see cref="T:Endeca.Data.DimensionStateTypes"/> desired of the output 
              <see cref="T:Endeca.Data.DimensionState"/>s 
            </param>      
            <returns>
              A <see cref="T:Endeca.Data.DimensionStateGroupCollection"/> containing <see cref="T:Endeca.Data.DimensionState"/>s 
              matching the specified <see cref="T:Endeca.Data.DimensionStateTypes"/>
            </returns>
        </member>
        <member name="M:Endeca.Data.DimensionStatesResult.GetDimensionStates(Endeca.Data.DimensionStateTypes)">
            <summary>
              Returns an <see cref="T:Endeca.Data.IndexedCollection`1"/> containing <see cref="T:Endeca.Data.DimensionState"/> 
              matching the <see cref="T:Endeca.Data.DimensionStateTypes"/> specified in the input.
            </summary>
            <param name="desiredState">
              The combination of <see cref="T:Endeca.Data.DimensionStateTypes"/> desired of the output 
              <see cref="T:Endeca.Data.DimensionState"/>s
            </param>
            <returns>
              A <see cref="T:Endeca.Data.IndexedCollection`1"/> matching the specified 
              <see cref="T:Endeca.Data.DimensionStateTypes"/>
            </returns>
        </member>
        <member name="P:Endeca.Data.DimensionStatesResult.CompleteDimensionStates">
            <summary>
            Returns an <see cref="T:Endeca.Data.IndexedCollection`1"/> containing all <see cref="T:Endeca.Data.DimensionState"/>s
            including those which are fully selected or fully implicit, and those with refinements.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionStatesResult.RefinableDimensionStates">
            <summary>
            Returns an <see cref="T:Endeca.Data.IndexedCollection`1"/> containing 
            <see cref="T:Endeca.Data.DimensionState"/>s that contain refinements. The most common use of 
            DimensionStates with refinements is to populate a GuidedNavigation control.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionStatesResult.GroupedRefinableDimensionStates">
            <summary>
            Returns a <see cref="T:Endeca.Data.DimensionStateGroupCollection"/> containing <see cref="T:Endeca.Data.DimensionStateGroup"/>s 
            which in turn contain only <see cref="T:Endeca.Data.DimensionState"/>s that contain refinements. The 
            most common use of DimensionStates with refinements is to populate a GuidedNavigation 
            control.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionValueCollection">
            <summary>
              Class representing an <see cref="T:Endeca.Data.IndexedCollection`1"/> with numerous helper 
              methods such as the ability to get the root <see cref="T:Endeca.Data.DimensionValue"/>s or the 
              <see cref="T:Endeca.Data.DimensionValuePath"/>s for all contained <see cref="T:Endeca.Data.DimensionValue"/>s and the 
              ability to create <see cref="T:System.Collections.Generic.IDictionary`2"/> collections containing 
              <see cref="T:Endeca.Data.DimensionValue"/>s organized by Dimension.
            </summary>
        </member>
        <member name="T:Endeca.Data.IndexedCollection`1">
            <summary>
            IndexedCollection is a collection that provides lookup by Name or Id. It is 
            intended to contain <see cref="T:Endeca.Data.DimensionState"/> and <see cref="T:Endeca.Data.DimensionValue"/> objects.
            </summary>
            <typeparam name="T">Must implement <see cref="T:Endeca.Data.INameAndId"/>.</typeparam>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.IndexedCollection`1"/> instance.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.FindByName(System.String)">
            <summary>
            Returns a <see cref="T:Endeca.Data.DimensionState"/> or <see cref="T:Endeca.Data.DimensionValue"/> by string name. 
            Returns null if an element with the specified name is not found.
            
            Note: If you try to look up a <see cref="T:Endeca.Data.DimensionValue"/> by name, it will return the 
            first one in the collection if there are more than one 
            <see cref="T:Endeca.Data.DimensionValue"/> in the <see cref="T:Endeca.Data.IndexedCollection`1"/> with the same name.
            </summary>
            <param name="name">The name of the <see cref="T:Endeca.Data.DimensionState"/> or 
            <see cref="T:Endeca.Data.DimensionValue"/> to return.</param>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.FindById(System.String)">
            <summary>
            Returns a <see cref="T:Endeca.Data.DimensionState"/> or <see cref="T:Endeca.Data.DimensionValue"/> by ID. Returns null
            if an element with the specified ID is not found.
            </summary>
            <param name="id">The ID of the <see cref="T:Endeca.Data.DimensionState"/> or <see cref="T:Endeca.Data.DimensionValue"/> 
            to return.</param>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.IndexOf(`0)">
            <summary>
              See <see cref="M:System.Collections.Generic.IList`1.IndexOf(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.Contains(`0)">
            <summary>
              See <see cref="M:System.Collections.Generic.ICollection`1.Contains(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
               See <see cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.IndexedCollection`1.GetEnumerator">
            <summary>
              See <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.IndexedCollection`1.Item(System.String)">
            <summary>
            Same as <see cref="M:Endeca.Data.IndexedCollection`1.FindByName(System.String)"/>
            </summary>
        </member>
        <member name="P:Endeca.Data.IndexedCollection`1.Item(System.Int32)">
            <summary>
              See <see cref="P:System.Collections.Generic.IList`1.Item(System.Int32)"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">if the setter of this property is called.</exception>
        </member>
        <member name="P:Endeca.Data.IndexedCollection`1.Count">
            <summary>
               See <see cref="P:System.Collections.Generic.ICollection`1.Count"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.IndexedCollection`1.IsReadOnly">
            <summary>
               See <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly"/>.  Always returns true.
            </summary>
        </member>
        <member name="F:Endeca.Data.DimensionValueCollection.Empty">
            <summary>
              An empty <see cref="T:Endeca.Data.DimensionValueCollection"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValueCollection.#ctor(System.Collections.Generic.IList{Endeca.Data.DimensionValue})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionValueCollection"/>.
            </summary>
            <param name="dimensionValues">
              List of dimension values contained in this collection.
            </param>
        </member>
        <member name="P:Endeca.Data.DimensionValueCollection.Dimensions">
            <summary>
              Enumerates the set of <see cref="T:Endeca.Data.Dimension"/>s corresponding to the 
              <see cref="T:Endeca.Data.DimensionValue"/>s in this collection.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValueCollection.DimensionValuePaths">
            <summary>
            Enumerates the <see cref="T:Endeca.Data.DimensionValuePath"/>s for all <see cref="T:Endeca.Data.DimensionValue"/>s in 
            the <see cref="T:Endeca.Data.DimensionValueCollection"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValueCollection.ByDimensionName">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.IDictionary`2"/> keyed by root <see cref="P:Endeca.Data.DimensionValue.Name"/> whose values are all of the 
            <see cref="T:Endeca.Data.DimensionValue"/>s in the collection with that root in common.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValueCollection.ByDimensionId">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.IDictionary`2"/> keyed by root <see cref="P:Endeca.Data.DimensionValue.Id"/> whose values are all of the 
            <see cref="T:Endeca.Data.DimensionValue"/>s in the collection with that root in common.
            </summary>
        </member>
        <member name="T:Endeca.Data.EndecaParameterNames">
            <summary>
            MdexParameterNames are constant strings representing the names of possible MdexParameters.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.SelectedDimensionValueIds">
            <summary>
            SelectedDimensionValueIds is used in navigation as N/setNavDescriptors,
            aggregation as An/setAggrERecNavDescriptors, and dimension search as Dn/setDimSearchNavDescriptors.
            Expected value is a list of numeric dimension IDs or a string of comma-separated dimension IDs.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.UserProfiles">
            <summary>
            UserProfiles are used in navigation as setProfiles
            Expected value is a list of string profiles.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RefinementConfigs">
            <summary>
            RefinementConfigs is used in navigation as part of Nrc/setNavRefinementConfigs.
            Expected value is a list of refinement config objects.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.ExposeAllRefinements">
            <summary>
            ExposeAllRefinements is used in navigation as setNavExposeAllRefinements
            Expected value is a bool.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RangeFilters">
            <summary>
            RangeFilters is used in navigation as Nf/setNavRangeFilters, 
            aggregation as Af/setAggrERecNavRangeFilters, and dimension search as Df/setDimSearchRangeFilters.
            Expected value is a list of RangeFilter objects or a string of comma-separated range filters.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RecordFilter">
            <summary>
            RecordFilter is used in navigation as Nr/setNavRecordFilter,
            aggregation as Ar/setAggrERecNavRecordFilter, and dimension search as Dr/setDimSearchNavRecordFilter.
            Expected value is a string record filter.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.EqlExpression">
            <summary>
            EqlExpression is used in navigation as setNavRecordStructureExpr and 
            dimension search as setDimSearchNavRecordStructureExpr. 
            Expected value is a string EQL expression.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.ItemIdentifier">
            <summary>
            ItemIdentifier is used in record queries as R/setERecSpec.
            Expected value is a string record spec.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.Identifiers">
            <summary>
            Identifiers is used to retrieve multiple records.
            Expected value is an IEnumerable{string} of record ids.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RecordOffset">
            <summary>
            RecordOffset is used in navigation queries as No/setNavItemOffset.
            Expected value is a numeric offset.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.AggregateRecordOffset">
            <summary>
            AggregateRecordOffset is used in navigation queries as setAggrNavItemOffset.
            Expected value is a numeric offset.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RecordsPerPage">
            <summary>
            RecordsPerPage is used in navigation queries as setNavNumERecs. 
            Expected value is a numeric record count.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.AggregateRecordsPerPage">
            <summary>
            AggregateRecordsPerPage is used in navigation queries as setNavNumAggrERecs. 
            Expected value is a numeric record count.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.DimensionValuesPerDimension">
            <summary>
            DimensionValuesPerDimension is used in DimensionSearch and CompoundDimensionSearch to set the number of dimension values
            per dimension returned in the result.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.IncludedRecordAttributes">
            <summary>
            RecordAttributes is used in navigation queries to specify the dimension and property names
            returned in the results.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.AggregationKey">
            <summary>
            NavigationAggregationKey is used in aggregated record queries as Au/setAggrERecRollupKey and Nu/setNavRollupKey.
            Expected value is a string property or dimension name.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RecordsPerAggregateRecord">
            <summary>
            RecordsPerAggregateRecord is used in navigation as Np/setNavERecsPerAggrERec	
            Expected value is 
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.DimensionSearchWithinDimensionIds">
            <summary>
            DimensionSearchWithinDimensions is used in dimension search queries as Di/setDimSearchDimensions.
            Expected value is a list of numeric dimension IDs or a comma-separated string of dimension IDs.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.DimensionSearchTerms">
            <summary>
            DimensionSearchTerms is used in dimension search queries as D
            Expected value is a list of numeric dimension IDs or a comma-separated string of dimension IDs.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.DimensionSearchRelevanceRanking">
            <summary>
            DimensionSearchRelevanceRanking is used in dimension search queries to specify a relevance ranking strategy and options string.
            Expected value is a bool.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.DimensionSearchMode">
            <summary>
            DimensionSearchMode is used in dimension search queries to specify a search mode.
            Expected value is a bool.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RetrieveKeyProperties">
            <summary>
            RetrieveKeyProperties is used in navigation as Nk/setNavKeyProperties.
            Expected value is a bool.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.AnalyticsExpression">
            <summary>
            AnalyticsExpression is used in navigation as setAnalytics.
            Expected value is a string analytics expression.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.Sorts">
            <summary>
            Sorts is used in navigation as Ns/setActiveSortKeys.
            Expected value is a list of SortKey objects.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RelevanceRanking">
            <summary>
            RelevanceRanking is used in navigation as Nrk, Nrt, and Nrr.
            Expected value is a <see cref="T:Endeca.Data.Search"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.Searches">
            <summary>
            Searches is used in navigation queries as Ntk, Ntt, Ntx/setNavERecSearches 
            and in dimension search as D/setDimSearchTerms.
            Also includes where to search Ntk.
            Search options are also included in the search.
            Expected value is a list of <see cref="T:Endeca.Data.Search"/> objects.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.SearchEnableDidYouMean">
            <summary>
            SearchEnableDidYouMean is used in record search queries as Ny/setNavERecSearchDidYouMean. 
            Expected value is a bool
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.AlternativePhrasingMode">
            <summary>
            AlternativePhrasingMode is used in navigation as Ntpc/setNavERecSearchComputeAlternativePhrasings.
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RulePreviewTime">
            <summary>
            RulePreviewTime is used in navigation as Nmpt/setNavMerchPreviewTime.		
            </summary>
        </member>
        <member name="F:Endeca.Data.EndecaParameterNames.RuleFilter">
            <summary>
            RuleFilter is used in navigation as Nmrf/setNavMerchRuleFilter.		
            </summary>
        </member>
        <member name="T:Endeca.Data.MetadataCommand">
            <summary>
            Command to retrieve engine metadata such as property data, sort keys, search keys, and aggregation keys.
            </summary>
        </member>
        <member name="M:Endeca.Data.MetadataCommand.#ctor">
            <summary>
            Constructs a MetaDataCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.MetadataCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs a MetaDataCommand with a connection to an MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.MetadataCommand.CopyFrom(Endeca.Data.MetadataCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.MetadataCommand.Execute">
            <summary>
            Executes the command and returns the MetaDataResult from the MDEX Engine.
            </summary>      
        </member>
        <member name="M:Endeca.Data.MetadataCommand.IsEmptyCommand">
            <summary>
              See <see cref="M:Endeca.Data.Provider.EndecaCommand.IsEmptyCommand"/>.  
            </summary>
            <returns>
              Returns false.
            </returns>
        </member>
        <member name="T:Endeca.Data.NavigationCommand">
            <summary>
            Command to retrieve all navigation-related results from the MDEX Engine. These results
            will contain Records, Aggregate Records, Applied Filters, DimensionStates, and MetaData.
            </summary>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.#ctor">
            <summary>
            Constructs an NavigationCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs an NavigationCommand with an EndecaConnection.
            </summary>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.ToggleDimensionStateExposure(System.String)">
            <summary>
            Shows or hides the <see cref="T:Endeca.Data.DimensionValue"/>s of the <see cref="T:Endeca.Data.DimensionState"/> specified by the context path
            </summary>
            <remarks>
            When the <see cref="T:Endeca.Data.DimensionState"/> is collapsed, all exposed inert dimension values
            inside it will be removed.
            </remarks>
            <param name="contextPath">The context path which identifies the <see cref="T:Endeca.Data.DimensionState"/> to be toggled</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.ExpandMore(System.String)">
            <summary>
            Retrieves the complete set of <see cref="T:Endeca.Data.DimensionValue"/>s of the <see cref="T:Endeca.Data.DimensionState"/> specified by the context path if it has more values to show.
            </summary>
            <param name="contextPath">The context path which identifies the <see cref="T:Endeca.Data.DimensionState"/> whose values should be retrieved</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.SelectDimensionValue(System.String)">
            <summary>
            Adds the <see cref="T:Endeca.Data.DimensionValue"/> specified in the context path to the set of selected <see cref="T:Endeca.Data.DimensionValue"/>s
            in the <see cref="T:Endeca.Data.NavigationCommand"/>
            </summary>
            <remarks>
            Note that this method will correctly handle inert dimension values in addition to
            navigable dimension values.
            </remarks>
            <param name="contextPath">The context path which identifies the <see cref="T:Endeca.Data.DimensionValue"/> to be selected</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.RemoveDimensionValue(System.String)">
            <summary>
            Removes the specified <see cref="T:Endeca.Data.DimensionValue"/> from the set of selected 
            <see cref="T:Endeca.Data.DimensionValue"/>s in the <see cref="T:Endeca.Data.NavigationCommand"/>.
            </summary>
            <remarks>
            RemoveDimensionValue will remove the entire path that this dimension value is contained in.
            Note that you may be looking for 
            <see cref="M:Endeca.Data.NavigationCommand.SelectParentDimensionValue(System.String)"/>
            if you are in a hierarchical dimension and expect to move back only one step in the 
            dimension tree.  
            <para>
            Note also that if you pass in a dimension value that is not currently selected, but one
            of its descendants is selected, then the entire path to that descendant will be removed.
            </para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.SelectParentDimensionValue(System.String)">
            <summary>
            Removes the <see cref="T:Endeca.Data.DimensionValue"/> specified in the context path from the set of selected <see cref="T:Endeca.Data.DimensionValue"/>s 
            in the <see cref="T:Endeca.Data.NavigationCommand"/> and adds its parent <see cref="T:Endeca.Data.DimensionValue"/>
            </summary>
            <remarks>
            Note that this method will correctly handle inert dimension value parents in addition to
            navigable dimension value parents.
            </remarks>
            <param name="contextPath">The context path which identifies the <see cref="T:Endeca.Data.DimensionValue"/> whose parent should be selected</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.SelectDimensionValue(Endeca.Data.DimensionValue)">
            <summary>
            Adds the specified <see cref="T:Endeca.Data.DimensionValue"/> to the set of selected <see cref="T:Endeca.Data.DimensionValue"/>s
            in the <see cref="T:Endeca.Data.NavigationCommand"/>
            </summary>
            <remarks>
            Note that this method will correctly handle inert dimension values in addition to
            navigable dimension values.
            </remarks>
            <param name="dimensionValue">The <see cref="T:Endeca.Data.DimensionValue"/> to be added</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.RemoveDimensionValue(Endeca.Data.DimensionValue)">
            <summary>
            Removes the specified <see cref="T:Endeca.Data.DimensionValue"/> from the set of selected 
            <see cref="T:Endeca.Data.DimensionValue"/>s in the <see cref="T:Endeca.Data.NavigationCommand"/>.
            </summary>
            <remarks>
            RemoveDimensionValue will remove the entire path that this dimension value is contained in.
            Note that you may be looking for 
            <see cref="M:Endeca.Data.NavigationCommand.SelectParentDimensionValue(Endeca.Data.DimensionValue)"/>
            if you are in a hierarchical dimension and expect to move back only one step in the 
            dimension tree.  
            <para>
            Note also that if you pass in a dimension value that is not currently selected, but one
            of its descendants is selected, then the entire path to that descendant will be removed.
            </para>
            </remarks>
            <param name="dimensionValue">The <see cref="T:Endeca.Data.DimensionValue"/> to be removed</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.SelectParentDimensionValue(Endeca.Data.DimensionValue)">
            <summary>
            Removes the specified <see cref="T:Endeca.Data.DimensionValue"/> from the set of selected 
            <see cref="T:Endeca.Data.DimensionValue"/>s in the <see cref="T:Endeca.Data.NavigationCommand"/> and adds its parent 
            <see cref="T:Endeca.Data.DimensionValue"/>
            </summary>
            <remarks>
            Note that this method will correctly handle inert dimension value parents in addition to
            navigable dimension value parents.
            </remarks>
            <param name="dimensionValue">The <see cref="T:Endeca.Data.DimensionValue"/> whose parent should be selected</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.ToggleDimensionStateExposure(Endeca.Data.DimensionState)">
            <summary>
            Shows or hides the <see cref="T:Endeca.Data.DimensionValue"/>s of the specified <see cref="T:Endeca.Data.DimensionState"/>
            </summary>
            <remarks>
            When the <see cref="T:Endeca.Data.DimensionState"/> is collapsed, all exposed inert dimension values
            inside it will be removed.
            </remarks>
            <param name="dimension">The <see cref="T:Endeca.Data.DimensionState"/> whose values should be shown or hidden</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.ExpandMore(Endeca.Data.DimensionState)">
            <summary>
            Retrieves the complete set of <see cref="T:Endeca.Data.DimensionValue"/>s if the <see cref="T:Endeca.Data.DimensionState"/> has more values to show.
            </summary>
            <param name="dimension">The <see cref="T:Endeca.Data.DimensionState"/> whose values should be completely shown</param>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.CopyFrom(Endeca.Data.NavigationCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.Execute">
            <summary>
            Executes the command and returns the composite result.
            </summary>
            <returns>All results for the navigation command.</returns>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.IsRecordsPerPageSet">
            <summary>
              This method allows external code to determine whether 
              <see cref="P:Endeca.Data.NavigationCommand.RecordsPerPage"/> has been set.  This is
              necessary because simply accessing <see cref="P:Endeca.Data.NavigationCommand.RecordsPerPage"/>
              will fall back to the default if it has not been set.
            </summary>
            <returns>Whether <see cref="P:Endeca.Data.NavigationCommand.RecordsPerPage"/> has been set</returns>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.IsAggregateRecordsPerPageSet">
            <summary>
              This method allows external code to determine whether 
              <see cref="P:Endeca.Data.NavigationCommand.AggregateRecordsPerPage"/> has been set.  This is
              necessary because simply accessing <see cref="P:Endeca.Data.NavigationCommand.AggregateRecordsPerPage"/>
              will fall back to the default if it has not been set.
            </summary>
            <returns>Whether <see cref="P:Endeca.Data.NavigationCommand.RecordsPerPage"/> has been set</returns>
        </member>
        <member name="M:Endeca.Data.NavigationCommand.IsEmptyCommand">
            <summary>
              See <see cref="M:Endeca.Data.Provider.EndecaCommand.IsEmptyCommand"/>.  
            </summary>
            <returns>
              Returns false.
            </returns>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RelevanceRanking">
            <summary>
            Gets or sets the strategy used for relevance ranking records.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.Searches">
            <summary>
            Gets the collection of record searches for the command
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.EnableDidYouMean">
            <summary>
            Gets or sets the "did you mean" option for the search.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AlternativePhrasingMode">
            <summary>
            Gets or sets whether alternate phrasing computation should be performed on the search.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RecordsPerPage">
            <summary>
            Gets or sets the number of records in each result set.  The default is set to 10 to be compatible with the pager control.
            The returned results does not provide the number of items per page (Note, # of items per page is different than the number
            of results returned in the case there are less matching results than # of requested items per page).  Thus, the result
            must obtain the # of items per page from the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AggregateRecordsPerPage">
            <summary>
            Gets or sets the number of aggregate records in each result set.  The default is set to 10 to be compatible with the pager control.
            The returned results does not provide the number of items per page (Note, # of items per page is different than the number
            of results returned in the case there are less matching results than # of requested items per page).  Thus, the result
            must obtain the # of items per page from the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RecordOffset">
            <summary>
            Gets or sets the offset within the results.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AggregateRecordOffset">
            <summary>
            Gets or sets the offset within the results.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.Sorts">
            <summary>
            Gets the collection of sorts specified for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.EnableRetrievePropertyData">
            <summary>
            Gets or sets whether the command should include key properties data in the results metadata.
            Defaults to false.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RecordsPerAggregateRecord">
            <summary>
            Gets or sets the number of constituent records to retrieve per aggregate record.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.UserProfiles">
            <summary>
            Gets or sets the profiles that describe characteristics of an application end user.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RefinementConfigs">
            <summary>
            The collection of refinements whose children should be returned in the results.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.EnableExposeAllRefinements">
            <summary>
            Get or sets the option to return the children for all top-level refinements.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AggregationKey">
            <summary>
            Gets or sets the property or dimension by which records should be aggregated.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AnalyticsExpression">
            <summary>
            Gets or sets the AnalyticsExpression used in the command.
            Using the Analytics property will overwrite this property.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.IncludedRecordAttributes">
            <summary>
            The collection of dimensions and properties which should be returned with the results.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AnalyticsSchema">
            <summary>
            Gets the <see cref="T:System.Data.DataSet"/> which specifies the name and type of Analytics fields for each statement in data tables.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.AnalyticsParameters">
            <summary>
            Gets the <see cref="T:Endeca.Data.EndecaParameterCollection"/> of parameters to be used in a parameterized <see cref="P:Endeca.Data.NavigationCommand.AnalyticsExpression"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.BusinessRulesFilter">
            <summary>
            Gets or sets the filter used to evaluate the firing of Rules in the Mdex engine.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.BusinessRulesPreviewTime">
            <summary>
            Gets or sets the preview time used to evaluate the firing of Rules in the Mdex engine.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.SelectedDimensionValueIds">
            <summary>
            Gets the collection of ids of all currently selected dimension values.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RecordFilter">
            <summary>
            Gets or sets the record filter for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.RangeFilters">
            <summary>
            Gets the collection of range filters for the command.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationCommand.EqlExpression">
            <summary>
            Gets or sets the EQL expression for the command.
            </summary>
        </member>
        <member name="T:Endeca.Data.AggregatedAttributeMap">
            <summary>
              Assumes that there are no duplicate keys in any of the attribute maps passed in the ctor.  
              If there are, the first map in the enumeration wins.
            </summary>
        </member>
        <member name="T:Endeca.Data.PropertyValue">
            <summary>
              A key-value pair representing an instance of a property defined in the MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyValue.#ctor(System.String,System.String)">
            <summary>
              Creates a new <see cref="T:Endeca.Data.PropertyValue"/> instance.
            </summary>
            <param name="key">The key (name) of a property in the MDEX Engine</param>
            <param name="value">The value of the property</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="key"/> or <paramref name="value"/> is null.
            </exception>
        </member>
        <member name="M:Endeca.Data.PropertyValue.Equals(Endeca.Data.IAttributeValue)">
            <summary>
              Implements value equality semantics for <see cref="T:Endeca.Data.IAttributeValue"/>.
              See <see cref="M:System.IEquatable`1.Equals(`0)"/>.  Checks if the PropertyValue
              has the same Key and Value.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyValue.Equals(Endeca.Data.PropertyValue)">
            <summary>
              Implements value-equality semantics for <see cref="T:Endeca.Data.PropertyValue"/> objects
            </summary>
        </member>
        <member name="P:Endeca.Data.PropertyValue.Key">
            <summary>
              Gets the key of this <see cref="T:Endeca.Data.PropertyValue"/>. 
            </summary>
        </member>
        <member name="P:Endeca.Data.PropertyValue.Value">
            <summary>
              Gets the value of this <see cref="T:Endeca.Data.PropertyValue"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.ConnectionStringBuilder">
            <summary>
              Work in progress
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.ConnectionStringBuilder.#ctor(System.String)">
            <param name="connectionString"></param>
        </member>
        <member name="M:Endeca.Data.Provider.ConnectionStringBuilder.ToString">
            <returns></returns>
        </member>
        <member name="T:Endeca.Data.Provider.DimensionValueCreatedEventArgs">
            <summary>
              Provides data for the <see cref="E:Endeca.Data.Provider.CommandResult.DimensionValueCreated"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.DimensionValueCreatedEventArgs.#ctor(Endeca.Data.DimensionValue)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.DimensionValueCreatedEventArgs"/> instance.
            </summary>
            <param name="dimensionValue">The dimension value that was created.</param>
        </member>
        <member name="P:Endeca.Data.Provider.DimensionValueCreatedEventArgs.DimensionValue">
            <summary>
              Gets the <see cref="P:Endeca.Data.Provider.DimensionValueCreatedEventArgs.DimensionValue"/> that was created.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.EndecaConnection">
            <summary>
              Base class for connections to an MDEX server.
            </summary>
            <dev>
              This base class provides a lookup capability to retrieve a <see cref="T:Endeca.Data.Provider.EndecaCommandExecutor"/>
              that can execute a command.  Each subclass essentially behaves (approximately) as an abstract 
              factory for command executors, where each executor produced by the connection shares a common
              strategy for connection to the MDEX engine and producing results.  This design hopefully will 
              facilitate eventually adding support for a connection backed by a web service.
            </dev>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaConnection.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.EndecaConnection"/> instance with the specified connection
              string.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaConnection.Execute(Endeca.Data.Provider.EndecaCommand,Endeca.Data.Provider.CommandResult)">
            <summary>
              Executes the specified command, and assigns the raw result object returned by the MDEX
              engine to <paramref name="result"/>.
            </summary>
            <param name="command">Command to execute.</param>
            <param name="result">Recieves the results returned by the MDEX engine/</param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaConnection.GetExecutor(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Returns a <see cref="T:Endeca.Data.Provider.EndecaCommandExecutor"/> that can execute the specified command.
            </summary>
            <param name="command">Command for which an executor should be retrieved.</param>
        </member>
        <member name="P:Endeca.Data.Provider.EndecaConnection.ConnectionString">
            <summary>
              Gets or sets the connection string for this connection.  
            </summary>
            <remarks>
              Connection string support isnt really working right now...
            </remarks>
        </member>
        <member name="T:Endeca.Data.EndecaParameter">
            <summary>
            A parameter to be passed to the MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.EndecaParameter.#ctor">
            <summary>
            Creates an empty parameter. The parameter is invalid until it has a name.
            </summary>
        </member>
        <member name="M:Endeca.Data.EndecaParameter.#ctor(System.String)">
            <summary>
            Creates a named parameter.
            </summary>
            <param name="parameterName">The parameter name.</param>
        </member>
        <member name="M:Endeca.Data.EndecaParameter.#ctor(System.String,System.Object)">
            <summary>
            Creates a parameter with both a name and a value.
            </summary>
            <param name="parameterName">The parameter name.</param>
            <param name="value">The parameter's value.</param>
        </member>
        <member name="P:Endeca.Data.EndecaParameter.ParameterName">
            <summary>
              Gets or sets the name of this parameter
            </summary>
        </member>
        <member name="P:Endeca.Data.EndecaParameter.Value">
            <summary>
              Gets or sets the value of this parameter.
            </summary>
        </member>
        <member name="T:Endeca.Data.EndecaParameterCollection">
            <summary>
              A collection of parameters for an MDEX Engine command that are indexed by name.
            </summary>
        </member>
        <member name="M:Endeca.Data.EndecaParameterCollection.GetKeyForItem(Endeca.Data.EndecaParameter)">
            <summary>
              See <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>.
            </summary>      
        </member>
        <member name="T:Endeca.Data.Provider.EndecaPrimitiveBuilder">
            <summary>
              Provides methods to create and initialize instances of the core Endeca primitive classes, such as
              <see cref="T:Endeca.Data.Record"/> and <see cref="T:Endeca.Data.DimensionValue"/>.
              <para>
              For internal use only.
              </para>
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.CreateRecord(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineRecord"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.CreateDimensionValue(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineDimensionValue"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.CreateAggregateRecord(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineAggregateRecord"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.BuildRecord(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineRecord"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.BuildDimensionValue(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineDimensionValue"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.BuildAggregateRecord(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineAggregateRecord"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.OnRecordCreated(Endeca.Data.Provider.RecordCreatedEventArgs)">
            <param name="args"></param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.OnDimensionValueCreated(Endeca.Data.Provider.DimensionValueCreatedEventArgs)">
            <param name="args"></param>
        </member>
        <member name="M:Endeca.Data.Provider.EndecaPrimitiveBuilder.CreatePrimitive``1(System.String,System.Boolean)">
            <typeparam name="TPrimitive"></typeparam>
            <param name="primitiveTypeName"></param>
            <param name="throwIfNotAssignable"></param>
        </member>
        <member name="E:Endeca.Data.Provider.EndecaPrimitiveBuilder.RecordCreated">
            <summary>
              Raised when a new <see cref="T:Endeca.Data.Record"/> is created.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.EndecaPrimitiveBuilder.DimensionValueCreated">
            <summary>
              Raised when a new <see cref="T:Endeca.Data.DimensionValue"/> is created.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.ExecutedEventArgs">
            <summary>
              Provides data for the <see cref="E:Endeca.Data.Provider.EndecaCommand.EngineExecuted"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.ExecutedEventArgs.#ctor(System.Object,System.Object)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.ExecutedEventArgs"/> instance
            </summary>
            <param name="engineQuery">The raw query object used to query the MDEX engine</param>
            <param name="engineResults">The raw result object returned by the MDEX engine</param>
        </member>
        <member name="P:Endeca.Data.Provider.ExecutedEventArgs.EngineQuery">
            <summary>
              Gets the raw query object used to query the MDEX engine.
            </summary>
            <remarks>
              The exact type of this object depends on the connection that was used to execute a command.
              If a <see cref="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection"/> is used 
              to execute the command, then this object will be of the type <see cref="T:Endeca.Navigation.ENEQuery"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Data.Provider.ExecutedEventArgs.EngineResults">
            <summary>
              Gets the raw result object returned by the MDEX engine.
            </summary>
            <remarks>
              The exact type of this object depends on the connection that was used to execute a command.
              If a <see cref="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection"/> is used 
              to execute the command, then this object will be of the type 
              <see cref="T:Endeca.Navigation.ENEQueryResults"/>.
            </remarks>
        </member>
        <member name="T:Endeca.Data.Provider.ExecutingEventArgs">
            <summary>
              Provides data for the <see cref="E:Endeca.Data.Provider.EndecaCommand.EngineExecuting"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.ExecutingEventArgs.#ctor(System.Object)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.ExecutingEventArgs"/> instance
            </summary>
            <param name="engineQuery">The raw query object used to query the MDEX engine</param>
        </member>
        <member name="P:Endeca.Data.Provider.ExecutingEventArgs.EngineQuery">
            <summary>
              Gets the raw query object used to query the MDEX engine.
            </summary>
            <remarks>
              The exact type of this object depends on the connection that was used to execute a command.
              If a <see cref="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection"/> is used
              to execute the command, then this object will be of the type <see cref="T:Endeca.Navigation.ENEQuery"/>.
            </remarks>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.AggregateRecordsResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.AggregateRecordsResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.ResultBuilder.BuildResults(System.Object,Endeca.Data.Provider.EndecaPrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineResults"></param>
            <param name="primitiveBuilder"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiResultBuilder.BuildResults(System.Object,Endeca.Data.Provider.EndecaPrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.ResultBuilder.BuildResults(System.Object,Endeca.Data.Provider.EndecaPrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiResultBuilder.BuildResults(Endeca.Navigation.ENEQueryResults,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <param name="engineResults"></param>
            <param name="primitiveBuilder"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.AggregateRecordsResultBuilder.BuildResults(Endeca.Navigation.ENEQueryResults,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.PresentationApi.PresentationApiResultBuilder.BuildResults(Endeca.Navigation.ENEQueryResults,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.AnalyticsDataSetBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.AnalyticsDataSet"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.AnalyticsDataSetBuilder.FillRow(System.Data.DataRow,Endeca.Navigation.ERec,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
            Fill the row with the properties, converting them where necessary.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.AppliedFiltersResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.AppliedFiltersResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.AppliedFiltersResultBuilder.CreateBreadcrumb(Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Navigation.Dimension,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
            Creates a breadcrumb for the applied filters result.  
            The difference in these breadcrumbs is that they have inert values in their paths if they have been opened.
            The implicits in the path are removed and inert values that have become implicit are re-inserted 
            so that the user's choices are always remembered.
            
            e.g. DIM->A->Inert (A is selected and Inert is open).  If a child of Inert becomes implicit when a value from
            another dimension is selected the fact that Inert is open would normally be forgotten.  This function makes sure 
            that this does not happen.
            
            The remaining obvious gap in this behavior is that when a user has opened an inert without also selecting a 
            navigable value in that same dimension and that inert later becomes implicit it is not present in the list 
            of refinement or descriptor dimensions used to build the breadcrumbs and this it disappears until the user 
            removes the selection that caused the inert to become implicit. 
            
            e.g. DIM->Inert (Inert is open).  If a child of Inert becomes implicit when a value from another dimension is 
            selected the this path is no longer a breadcrumb because fully implicit dimensions are not currently processed.
            This value will reappear when the dimension it lives in becomes non-implicit.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.CompoundDimensionSearchResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.DimensionSearchResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.DimensionSearchResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.DimensionSearchResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.DimensionResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.DimensionStatesResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.DimensionResultBuilder.CreateDimensionState(Endeca.Navigation.Dimension,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,System.Boolean,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
            Build an Endeca.Data.Dimension from an Endeca.Navigation.Dimension.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.DimensionResultBuilder.UpdatePath(Endeca.Data.DimensionValue,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Adds selected information to dimension values in the path and calculate context paths
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.MetadataResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.MetadataResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.MetadataResultBuilder.MarshalSortKeys(Endeca.Navigation.ERecSortKeyList)">
            <summary>
            Converts the list of ERecSortKeys to a <see cref="T:System.Collections.ObjectModel.Collection`1"/> containing 
            the names of the available sort keys
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection">
            <summary>
              A connection implemented in terms of the Endeca Presentation API. 
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.#ctor(System.String,System.Int32)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection"/> instance with the specified
              host and port.
            </summary>
            <param name="host"></param>
            <param name="port"></param>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.#ctor(System.String,System.Int32,System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.PresentationApi.PresentationApiConnection"/> instance with the specified
              host, port, and certificate path.
            </summary>
            <param name="host"></param>
            <param name="port"></param>
            <param name="certificatePath"></param>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.#ctor(System.String)">
            <summary>
              For internal use only.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.GetExecutor(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.EndecaConnection.GetExecutor(Endeca.Data.Provider.EndecaCommand)"/>
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.Host">
            <summary>
            Gets or sets the MDEX Engine host.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.Port">
            <summary>
            Gets or sets the MDEX Engine port.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.PresentationApi.PresentationApiConnection.CertificatePath">
            <summary>
            Gets or sets the SSL certificate path.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder">
            <summary>
              Constructs 'primitive' RAD types from the types defined by the Endeca Presentation API.
            </summary>
            <remarks>
              In addition to the overrides for creating primitive types, this class also contains some
              helper functions that are used by multiple result builders.
            
              This class is stateless and threadsafe; make sure it remains that way!
            </remarks>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.BuildRecord(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              Creates new <see cref="T:Endeca.Data.Record"/> by copying values from a <see cref="T:Endeca.Navigation.ERec"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.BuildDimensionValue(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              Creates new <see cref="T:Endeca.Data.DimensionValue"/> by copying values from a <see cref="T:Endeca.Navigation.DimVal"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.BuildAggregateRecord(System.Object,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              Creates new <see cref="T:Endeca.Data.AggregateRecord"/> by copying values from a <see cref="T:Endeca.Navigation.AggrERec"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.MarshalProperties(Endeca.Navigation.PropertyMap,Endeca.Data.PropertyMap)">
            <summary>
              Copies all properties from the property map to the attribute map.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.CreateDimensionValuePath(Endeca.Data.DimensionValue,Endeca.Navigation.DimValList,Endeca.Navigation.DimVal,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
            Creates a complete path through a dimension containing all of the nodes from the root
            dimension value including exposed inert dimension values and selected descriptor dimension value
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.CreateDimensionValuePath(Endeca.Navigation.DimVal,Endeca.Navigation.DimValList,Endeca.Navigation.DimVal,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
            Creates a complete path through a dimension containing all of the nodes from the root
            dimension value including exposed inert dimension values and selected descriptor dimension value
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.CreateDimensionValuePath(Endeca.Navigation.Dimension,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
            Creates a complete path through a dimension containing all of the nodes from the root 
            dimension value to including exposed inert dimension values and selected descriptor dimension values
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.CreateSearchReport(Endeca.Navigation.ESearchReport)">
            <summary>
              Converts the specified legacy search report into a search breadcrumb.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.CreateSearchReport(Endeca.Navigation.ESearchReport,System.String)">
            <summary>
              Converts the specified legacy search report into a search breadcrumb.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.CreateSearchReport(Endeca.Navigation.ESearchReport,System.Collections.ObjectModel.Collection{Endeca.Data.Search})">
            <summary>
              Converts the specified legacy search report into a search breadcrumb.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.PrimitiveBuilder.PromoteSnippet(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Adds an entry to the snippet map if the specified property name and value represent a 
              snippet.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.RecordsResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.RecordsResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.RecordsResultBuilder.BuildResults(Endeca.Navigation.ENEQueryResults,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.ResultBuilder.BuildResults(System.Object,Endeca.Data.Provider.EndecaPrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.RecordsResultBuilder.MarshalSorts(Endeca.Navigation.ERecSortKeyList,Endeca.Data.SortCollection)">
            <summary>
              Converts and the specified legacy collections of active 
              sort keys into a <see cref="T:Endeca.Data.SortCollection"/>
              instance.
            </summary>     
        </member>
        <member name="T:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder">
            <summary>
              Builds a <see cref="T:Endeca.Data.SupplementalsResult"/> object from an ENEQueryResults instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.BuildResults(Endeca.Navigation.ENEQueryResults,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              See <see cref="M:Endeca.Data.Provider.ResultBuilder.BuildResults(System.Object,Endeca.Data.Provider.EndecaPrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.CreateCluster(Endeca.Navigation.Supplement)">
            <summary>
              Creates a new cluster representing the specified supplement.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.CreateBusinessRule(Endeca.Navigation.Supplement,Endeca.Data.Provider.PresentationApi.PrimitiveBuilder,Endeca.Data.Provider.IResultBuilderContext)">
            <summary>
              Creates a new business rule representing the specified supplement.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.UpdateClustersFromClusterMatrices(System.Collections.ObjectModel.Collection{Endeca.Navigation.Supplement},System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.Collection{Endeca.Data.Cluster}})">
            <summary>
              See "Clustering overlap properties" in the ITLGuide to understand this matrix stuff
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.IsBusinessRule(Endeca.Navigation.Supplement)">
            <summary>
              Returns true if the specified supplemental object represents a business rule.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.IsKeywordRedirect(Endeca.Navigation.Supplement)">
            <summary>
              Returns true if the specified supplemental object represents a keyword redirect
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.IsCluster(Endeca.Navigation.Supplement)">
            <summary>
              Returns true if the specified supplemental object represents a cluster.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.IsClusterMatrix(Endeca.Navigation.Supplement)">
            <summary>
              Returns true if the specified supplemental object represents a cluster matrix.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.UpdateClusterMap(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.Collection{Endeca.Data.Cluster}},Endeca.Data.Cluster)">
            <summary>
              Adds the specified cluster to the map.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.PresentationApi.SupplementalsResultBuilder.UpdateBusinessRuleMap(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.List{Endeca.Data.BusinessRule}},Endeca.Data.BusinessRule)">
            <summary>
              Adds the specified business rule to the map.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.RecordCreatedEventArgs">
            <summary>
              Provides data for the <see cref="E:Endeca.Data.Provider.CommandResult.RecordCreated"/> event.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.RecordCreatedEventArgs.#ctor(Endeca.Data.Record)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.RecordCreatedEventArgs"/> instance with the specified record.
            </summary>
            <param name="record">The record that was created.</param>
        </member>
        <member name="P:Endeca.Data.Provider.RecordCreatedEventArgs.Record">
            <summary>
              Gets the record that was created.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.ResultBuilderProcedure">
            <param name="engineResults"></param>
            <param name="primitiveBuilder"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Endeca.Data.AggregateRecordsResult">
            <summary>
            Bundled result containing the collection of AggregateRecords, total record count, and total
            aggregate record count resulting from a <seealso cref="T:Endeca.Data.NavigationCommand"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.AggregateRecordsResult.#ctor(System.Int64,System.Int64,System.Int32,System.Int64,System.Collections.Generic.IList{Endeca.Data.AggregateRecord})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AggregateRecordsResult"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordsResult.TotalRecordCount">
            <summary>
            Gets the total number of records providing data for this set of aggregate records.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordsResult.AggregateRecordsPerPage">
            <summary>
            Gets the page size
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordsResult.TotalAggregateRecordCount">
            <summary>
            Gets the total number of aggregate records available. This can be larger than the size of the
            <seealso cref="P:Endeca.Data.AggregateRecordsResult.AggregateRecords"/> collection.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordsResult.AggregateRecords">
            <summary>
            Gets the collection of AggregateRecords.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecordsResult.AggregateRecordOffset">
            <summary>
            Gets the current offset within the results to be used for paging along with <see cref="P:Endeca.Data.AggregateRecordsResult.TotalRecordCount"/>
            </summary>
        </member>
        <member name="T:Endeca.Data.AnalyticsException">
            <summary>
              Represents the exception that is thrown when an error occurred parsing or executing an 
              analytics query.
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AnalyticsException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AnalyticsException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.AnalyticsException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AnalyticsException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.AnalyticsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.AnalyticsUtility">
            <summary>
            Creates <see cref="T:System.Data.DataSet"/> objects from analytics results
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsUtility.GetParameterNames(System.String)">
            <summary>
              Returns an array containing the names of parameters that have been embedded in the specified
              analytics query.
            </summary>
            <param name="analyticsQuery">The query from which parameter names should be extracted.</param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="analyticsQuery"/> is null or empty.
            </exception>
        </member>
        <member name="M:Endeca.Data.AnalyticsUtility.BindParameterValues(System.String,Endeca.Data.EndecaParameterCollection)">
            <summary>
              Replaces the parameter tokens in the expression with the values of the parameters supplied.
            </summary>
            <param name="analyticsExpression">
              Analytics expression containing parameter tokens.
            </param>
            <param name="analyticsParameters">
              A collection of <see cref="T:Endeca.Data.EndecaParameter"/>s containing the values that should be 
              substituted for the parameter tokens in <paramref name="analyticsExpression"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="analyticsExpression"/> or <paramref name="analyticsParameters"/> is 
              null or empty.
            </exception>
            <exception cref="T:Endeca.Data.InvalidAnalyticsParametersException">
              if the the wrong number of parameter values were supplied.
            </exception>
        </member>
        <member name="T:Endeca.Data.AppliedFiltersResult">
            <summary>
              Groups together information related to restricting the set of records that is returned 
              by the MDEX engine in response to a navigation query.
            </summary>
        </member>
        <member name="M:Endeca.Data.AppliedFiltersResult.#ctor(System.Collections.Generic.IList{Endeca.Data.RangeFilter},System.Collections.Generic.IList{Endeca.Data.SearchReport},Endeca.Data.DimensionValueCollection,System.Collections.Generic.IList{Endeca.Data.SearchKey},System.String,System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AppliedFiltersResult"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.AppliedFiltersResult.RecordFilter">
            <summary>
              Gets the record filter that was applied to the navigation query.
            </summary>
        </member>
        <member name="P:Endeca.Data.AppliedFiltersResult.EqlExpression">
            <summary>
              Gets the Endeca Query Language (EQL) expression that was applied to the navigation query.
            </summary>
        </member>
        <member name="P:Endeca.Data.AppliedFiltersResult.RangeFilters">
            <summary>
            Gets the collection of <see cref="T:Endeca.Data.RangeFilter"/>s that were applied to the navigation query.
            </summary>
        </member>
        <member name="P:Endeca.Data.AppliedFiltersResult.SearchReports">
            <summary>
              Gets a collection of <see cref="T:Endeca.Data.SearchReport"/>s that provide additional meta-information
              describing the results of text searches.
            </summary>
        </member>
        <member name="P:Endeca.Data.AppliedFiltersResult.DimensionValues">
            <summary>
              Returns the collection of <see cref="T:Endeca.Data.DimensionValue"/> that have been selected by the 
              user and are currently restricting the records returned by the navigation query.
              <para>
              The paths from dimension root to the dimension values in this collection are sometimes
              referred to as <i>breadcrumbs</i>, and are often rendered in a path-like fashion by an
              application.</para>
            </summary>
        </member>
        <member name="P:Endeca.Data.AppliedFiltersResult.ActiveSearchKeys">
            <summary>
              Gets a collection of <see cref="T:Endeca.Data.SearchKey"/>s that describe the properties, dimensions, 
              or search interfaces that were searched against in the navigation query.
            </summary>
            <remarks>
              In general there will be one <see cref="T:Endeca.Data.SearchReport"/> in 
              <see cref="P:Endeca.Data.AppliedFiltersResult.SearchReports"/> for each key in this collection.
            </remarks>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1">
            <summary>
              A type description provider that serves up custom type descriptors that expose the 
              values in an <see cref="T:Endeca.Data.IAttributeMap"/> as properties.
            </summary>
            <typeparam name="T">
              The type that defines the attribute map whose values will be exposed as properties.
            </typeparam>
        </member>
        <member name="M:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.GetTypeDescriptor(System.Type,System.Object)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.AttributeMapPropertyDescriptor">
            <summary>
               A property descriptor that represents a property inside an AttributeMap.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.AttributeMapPropertyDescriptorCollection">
            <summary>
              A property collection that returns <see cref="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.StringPropertyDescriptor"/>s with the given property's name if a requested
              property cannot be found.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.AttributeMapTypeDescriptor">
            <summary>
              A type descriptor that exposes the values in an <see cref="T:Endeca.Data.IAttributeMap"/> instance as properties.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.DelimitedNamePropertyDescriptor">
            <summary>
              A property descriptor that provides access to a value in an attribute map whose name
              contains period characters. By default such a name will defeat evaluation via DataBinder.Eval,
              because Eval assumes that the periods specify a property path.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.DelimitedNamePropertyDescriptor.GetValue(System.Object)">
            <summary>
              Return the current property descriptor so that any following properties in the property
              path being evaluated by DataBinder.Eval will be routed through this object.
            </summary>
        </member>
        <member name="P:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.DelimitedNamePropertyDescriptor.NameTokens">
            <summary>
              Gets the tokenized version of FullPropertyName.
            </summary>
        </member>
        <member name="P:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.DelimitedNamePropertyDescriptor.EndecaAttributeValue">
            <summary>
              Gets the value associated with this property.
            </summary>
        </member>
        <member name="P:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.DelimitedNamePropertyDescriptor.FullPropertyName">
            <summary>
              Gets the full property name, including periods (for example, "DGraph.Bins").
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.StringPropertyDescriptor">
            <summary>
              A property descriptor that represents a string-valued property.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.StringPropertyDescriptor.GetValue(System.Object)">
            <summary>
              Return the current type descriptor when the property value is accessed. This ensures
              that if the properties of the returned value are accessed, then an empty string can
              ultimately returned. For example, if client code evaluates a property like
              'Some.Unknown.Property', an empty string should eventually be returned.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.StringPropertyDescriptor.ToString">
            <summary>
              Databinding evaluation should ultimately call this method to get the value of the 
              property.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.StringPropertyDescriptorCollection">
            <summary>
              Ensures that an empty string is returned if sub-properties of a string are accessed.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.AttributeMapTypeDescriptionProvider`1.ReflectionPropertyDescriptor">
            <summary>
              Describes a statically-defined (i.e. accessible via reflection) property.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.SuppressAttributesTypeDescriptionProvider`1">
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Endeca.Data.ComponentModel.SuppressAttributesTypeDescriptionProvider`1.GetTypeDescriptor(System.Type,System.Object)">
            <summary>
               See <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.AuthenticationException">
            <summary>
              Represents the exception that is thrown when an an authentication failure error occurred while 
              connecting to or executing a query against the MDEX engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.AuthenticationException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AuthenticationException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.AuthenticationException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AuthenticationException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AuthenticationException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.ChangeNotifyCollection`1">
            <summary>
              Collection that raises an event whenever items are added to or removed
              from the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyCollection`1.ClearItems">
            <summary>
            <see cref="M:System.Collections.ObjectModel.Collection`1.ClearItems"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyCollection`1.InsertItem(System.Int32,`0)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyCollection`1.RemoveItem(System.Int32)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyCollection`1.SetItem(System.Int32,`0)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.ChangeNotifyCollection`1.OnCollectionChanged(System.EventArgs)">
            <summary>
              Raises the <see cref="E:Endeca.Data.ChangeNotifyCollection`1.CollectionChanged"/> event.
            </summary>
        </member>
        <member name="E:Endeca.Data.ChangeNotifyCollection`1.CollectionChanged">
            <summary>
              Raised when items are added to or removed from the collection.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.RecordAttributesCollectionConverter">
            <summary>
            Class used by the <see cref="T:Endeca.Data.NavigationCommand"/> to serialize the <see cref="P:Endeca.Data.NavigationCommand.IncludedRecordAttributes"/> property.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RecordAttributesCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RecordAttributesCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RecordAttributesCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.RefinementConfigCollectionConverter">
            <summary>
              A type converter that can convert a <see cref="T:Endeca.Data.RefinementConfigCollection"/>
              to and from a string.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RefinementConfigCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RefinementConfigCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RefinementConfigCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RefinementConfigCollectionConverter.ConvertToString(Endeca.Data.RefinementConfig)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.RangeFilterCollectionConverter">
            <summary>
              Converts collections of <see cref="T:Endeca.Data.RangeFilter"/>s to and from strings.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RangeFilterCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RangeFilterCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.RangeFilterCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.CommandSerialization">
            <summary>
              Provides support for converting <see cref="T:Endeca.Data.Provider.EndecaCommand"/> instances to and from strings.
            </summary>
            <remarks>
              The methods of this class delegate their implementation to the <see cref="T:Endeca.Data.CommandSerializationProvider"/>
              instance specified by the <see cref="P:Endeca.Data.CommandSerialization.Provider"/> property. By default,
              this serializer will be an <see cref="T:Endeca.Data.DefaultCommandSerializationProvider"/> instance. 
              Alternative implementations may be specified by adding entries in the application 
              configuration file. See <see cref="T:Endeca.Data.Configuration.CommandSerializationSection"/> for
              details.
            </remarks>
        </member>
        <member name="M:Endeca.Data.CommandSerialization.Serialize(Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Converts the specified command to a string representation.  This method calls
              <see cref="M:Endeca.Data.CommandSerialization.Serialize(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>
              with an empty <see cref="T:Endeca.Data.CommandSerializationContext"/> instance.
            </summary>
            <param name="command">Command to serialize.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerialization.Serialize(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              Converts the specified command to a string representation.
            </summary>
            <param name="command">Command to serialize.</param>
            <param name="context">
              Provides additional contextual information for use during serialization.
            </param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerialization.Deserialize(System.String,Endeca.Data.Provider.EndecaCommand)">
            <summary>
             Initializes the specified command with values deserialized from the specified state string.
             This method calls
              <see cref="M:Endeca.Data.CommandSerialization.Deserialize(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>
              with an empty <see cref="T:Endeca.Data.CommandSerializationContext"/> instance.
            </summary>
            <param name="commandState">
              Serialized form of a command, obtained from a previous call to 
              <see cref="M:Endeca.Data.CommandSerialization.Serialize(Endeca.Data.Provider.EndecaCommand)"/>.
            </param>
            <param name="command">Command to initialize with deserialized values.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.CommandSerialization.Deserialize(System.String,Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)">
            <summary>
              Initializes the specified command with values deserialized from the specified state string.
            </summary>
            <param name="commandState">
              Serialized form of a command, obtained from a previous call to 
              <see cref="M:Endeca.Data.CommandSerialization.Serialize(Endeca.Data.Provider.EndecaCommand,Endeca.Data.CommandSerializationContext)"/>.
            </param>
            <param name="command">Command to initialize with deserialized values.</param>
            <param name="context">
              Provides additional contextual information for use during deserialization.
            </param>
        </member>
        <member name="M:Endeca.Data.CommandSerialization.Copy(Endeca.Data.Provider.EndecaCommand,Endeca.Data.Provider.EndecaCommand)">
            <summary>
              Copies the state of one command to another.
            </summary>
            <param name="from">Command from which state should be copied.</param>
            <param name="to">Command to which state should be copied.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="from"/> or <paramref name="to"/> is null.
             </exception>
        </member>
        <member name="M:Endeca.Data.CommandSerialization.#cctor">
            <summary>
              Initializes providers specified in the configuration file.
            </summary>
        </member>
        <member name="P:Endeca.Data.CommandSerialization.Provider">
            <summary>
              Gets the serializer instance used for serialization and deserialization of 
              <see cref="T:Endeca.Data.Provider.EndecaCommand"/>s.
            </summary>
        </member>
        <member name="P:Endeca.Data.CommandSerialization.Providers">
            <summary>
              Gets the collection of available command serialization providers.
            </summary>
            <remarks>
              You can use the application configuration file and the <see cref="T:Endeca.Data.Configuration.CommandSerializationSection"/> 
              to specify one or more serialization providers.
            </remarks>
        </member>
        <member name="T:Endeca.Data.CommandSerializationProviderCollection">
            <summary>
              A collection of <see cref="T:Endeca.Data.CommandSerializationProvider"/> instances.
            </summary>
        </member>
        <member name="M:Endeca.Data.CommandSerializationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
              Adds the specified provider to this collection.
            </summary>
            <param name="provider">Provider to add.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="provider"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
              if <paramref name="provider"/> is not a <see cref="T:Endeca.Data.CommandSerializationProvider"/> 
              instance.
            </exception>
        </member>
        <member name="P:Endeca.Data.CommandSerializationProviderCollection.Item(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Endeca.Data.Cluster">
            <summary>
              Represents a cluster of terms that can group Endeca records.
            </summary>
            <remarks>
              A cluster is a collection of relevant terms providing a grouping of Endeca records that 
              share these common terms. The terms in a cluster provide to the user what is known as 
              information scent: the user is instantly aware of what each cluster contains (that is, the
              user can quickly understand the implied content of the clustered records).
              <para>
              The terms themselves are dimension values, and all the terms in a cluster belong to the same
              dimension.</para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.Cluster.#ctor(System.String,System.Int64,System.Collections.Generic.IList{System.String})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Cluster"/> instance.
            </summary>
            <param name="dimensionName">
              The name of the dimension that the cluster terms (i.e. dimension values) belong to
            </param>
            <param name="recordCount">
              The estimated number of records covered by each particular cluster.
            </param>
            <param name="terms">
               The list of terms that comprise the cluster.
            </param>
        </member>
        <member name="P:Endeca.Data.Cluster.DimensionName">
            <summary>
              Gets the name of the dimension that the cluster terms (i.e. dimension values) belong to.
            </summary>
        </member>
        <member name="P:Endeca.Data.Cluster.RecordCount">
            <summary>
              Gets the estimated number of records covered by each particular cluster.
            </summary>
        </member>
        <member name="P:Endeca.Data.Cluster.Terms">
            <summary>
              Gets a read-only list of the terms that comprise the cluster.
            </summary>
        </member>
        <member name="P:Endeca.Data.Cluster.SearchText">
            <summary>
            Gets a string containing the list of terms joined by spaces, with each term in the cluster
            surrounded with quotes. Useful for the search string for when the cluster is selected.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.TypeConverterUtility">
            <summary>
              A collection helper methods for use when implementing type converters.
            </summary>
            <remarks>
              External code should not need to access this class.  Instead the <b>BindingUtility</b> class
              in the Endeca.Web assembly should be used.
            </remarks>
        </member>
        <member name="M:Endeca.Data.ComponentModel.TypeConverterUtility.Join``1(System.Collections.Generic.IEnumerable{``0},System.Char)">
            <summary>
              Returns a string containing string representations of items in the specified collection,
              separated by the specified delimiter.
            </summary>
            <remarks>
              Items are converted to strings using <see cref="T:System.Convert"/>.
            </remarks>
            <typeparam name="T">Type of items in <paramref name="values"/></typeparam>
            <param name="values">Collection of values to join.</param>
            <param name="delimiter">Delimiter for the joined string.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="values"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
              if <paramref name="delimiter"/> is a whitespace char or the '/' char.
             </exception>
        </member>
        <member name="M:Endeca.Data.ComponentModel.TypeConverterUtility.Split``1(System.String,System.Char)">
            <summary>
              Splits the specified delimited string into an array of values.
            </summary>
            <typeparam name="T">Type of items in the array.</typeparam>
            <param name="values">
              Delimited string containing string representations of <typeparamref name="T"/> instances.
            </param>
            <param name="delimiter">
              Delimiter separating distinct items in <paramref name="values"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="values"/> is null.</exception>
            <exception cref="T:System.ArgumentException">
              if <paramref name="delimiter"/> is null or an empty string.
             </exception>
        </member>
        <member name="M:Endeca.Data.ComponentModel.TypeConverterUtility.SplitWithRegex(System.String,System.Char)">
            <summary>
              Splits the specified string on the specified delimiter.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.AnalyticsQuery">
            <summary>
              A configuration element representing a named analytics query.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Configuration.AnalyticsQuery"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.#ctor(System.String,System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Configuration.AnalyticsQuery"/> instance.
            </summary>
            <param name="name">Unique name of the query.</param>
            <param name="queryText">Query text representing the analytics query.</param>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.IsModified">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.IsModified"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.ResetModified">
            <summary>
               See <see cref="M:System.Configuration.ConfigurationElement.ResetModified"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.Reset(System.Configuration.ConfigurationElement)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQuery.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.AnalyticsQuery.Name">
            <summary>
              Gets or sets the unique name of the query. This value cannot contain whitespace
              or period characters.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.AnalyticsQuery.QueryText">
            <summary>
              Gets or sets the query text representing the analytics query.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.AnalyticsQueryCollection">
            <summary>
              Represents the collection of <see cref="T:Endeca.Data.Configuration.AnalyticsQuery"/> elements defined in a configuration
              file.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.ConfigurationElementCollection`1">
            <summary>
            Represents a collection of <see cref="T:System.Configuration.ConfigurationElement"/>s
            </summary>
            <typeparam name="T">Type that extends <see cref="T:System.Configuration.ConfigurationElement"/></typeparam>
        </member>
        <member name="M:Endeca.Data.Configuration.ConfigurationElementCollection`1.Add(`0)">
            <summary>
              Adds the specified element to the collection.
            </summary>
            <param name="element">Element to add.</param>
        </member>
        <member name="M:Endeca.Data.Configuration.ConfigurationElementCollection`1.Clear">
            <summary>
              Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.ConfigurationElementCollection`1.Remove(System.String)">
            <summary>
              Removes the element with the specified name from the collection.
            </summary>
            <param name="name">Name of element to remove.</param>
        </member>
        <member name="M:Endeca.Data.Configuration.ConfigurationElementCollection`1.RemoveAt(System.Int32)">
            <summary>
              Removes the element at the specified index.
            </summary>
            <param name="index">Index of the to remove.</param>
        </member>
        <member name="M:Endeca.Data.Configuration.ConfigurationElementCollection`1.CreateNewElement">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElementCollection.CreateNewElement"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Endeca.Data.Configuration.ConfigurationElementCollection`1.Item(System.Int32)">
            <summary>
             Gets or sets the schema element at the specified index.
            </summary>
            <param name="index">Index of element to get or set.</param>
        </member>
        <member name="P:Endeca.Data.Configuration.ConfigurationElementCollection`1.Item(System.String)">
            <summary>
              Gets or sets the schema element with the specified name.
            </summary>
            <param name="name">Name of element to get or set.</param>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsQueryCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.AnalyticsSchema">
            <summary>
              A configuration element representing a named dataset that provides the schema for an 
              analytics query result.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Configuration.AnalyticsSchema"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.#ctor(System.String,System.Data.DataSet)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Configuration.AnalyticsSchema"/> instance.
            </summary>
            <param name="name">Unique name of the schema.</param>
            <param name="schemaDataSet">Data set defining the schema.</param>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.IsModified">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.IsModified"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.ResetModified">
            <summary>
               See <see cref="M:System.Configuration.ConfigurationElement.ResetModified"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.Reset(System.Configuration.ConfigurationElement)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchema.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.AnalyticsSchema.Name">
            <summary>
              Gets or sets the unique name of the schema. This value cannot contain whitespace
              or period characters.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.AnalyticsSchema.SchemaDataSet">
            <summary>
              Gets or sets the data set defining the schema.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.AnalyticsSchemaCollection">
            <summary>
              Represents the collection of <see cref="T:Endeca.Data.Configuration.AnalyticsSchema"/> elements defined in a configuration
              file.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.AnalyticsSchemaCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.AnalyticsSection">
            <summary>
              Represents the analytics section of the Endeca configuration group.
            </summary>
        </member>
        <member name="F:Endeca.Data.Configuration.AnalyticsSection.SectionName">
            <summary>
              Name of the <see cref="T:Endeca.Data.Configuration.AnalyticsSection"/> section in the configuration file.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.AnalyticsSection.Schemas">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.Configuration.AnalyticsSchema"/> elements defined in the configuration
              section.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.AnalyticsSection.Queries">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.Configuration.AnalyticsQuery"/> elements defined in the configuration
              section.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.CommandSerializationSection">
            <summary>
               Represents the <b>commandSerialization</b> section of the Endeca configuration group.
            </summary>
        </member>
        <member name="F:Endeca.Data.Configuration.CommandSerializationSection.SectionName">
            <summary>
              Name of the <see cref="T:Endeca.Data.Configuration.CommandSerializationSection"/> section in the configuration file.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.CommandSerializationSection.DefaultProvider">
            <summary>
              Gets or sets the the name of the default command serialization provider.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.CommandSerializationSection.Providers">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.Configuration.AnalyticsQuery"/> elements defined in the configuration
              section.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.DisplayNameSection">
            <summary>
              Represents the <b>displayName</b> section of the Endeca configuration group.
            </summary>
        </member>
        <member name="F:Endeca.Data.Configuration.DisplayNameSection.PropertyNameDefault">
            <summary>
            The default property name that will be used if no property name is specified
            </summary>
        </member>
        <member name="F:Endeca.Data.Configuration.DisplayNameSection.SectionName">
            <summary>
              Name of the <see cref="T:Endeca.Data.Configuration.DisplayNameSection"/> section in the configuration file.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.DisplayNameSection.PropertyName">
            <summary>
            Gets or sets the name of the property on a dimension value that specifies the display name.  
            Defaults to "DisplayName"
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.EndecaSectionGroup">
            <summary>
              Represents the group of Endeca-related configuration sections.
            </summary>
        </member>
        <member name="F:Endeca.Data.Configuration.EndecaSectionGroup.GroupName">
            <summary>
              Name of the <see cref="T:Endeca.Data.Configuration.EndecaSectionGroup"/> group in the configuration file.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.EndecaSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
            <summary>
              Retrieves the <b>Endeca</b> configuration section group from the specified configuration.
            </summary>
            <param name="configuration">A parsed representation of a configuration file.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="configuration"/> is null.
            </exception>
        </member>
        <member name="P:Endeca.Data.Configuration.EndecaSectionGroup.Servers">
            <summary>
              Gets or sets the <see cref="T:Endeca.Data.Configuration.ServersSection"/> for this section group.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.EndecaSectionGroup.DisplayName">
            <summary>
              Gets or sets the <see cref="T:Endeca.Data.Configuration.DisplayNameSection"/> for this section group.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.EndecaSectionGroup.CommandSerialization">
            <summary>
              Gets or sets the <see cref="T:Endeca.Data.Configuration.CommandSerializationSection"/> for this section group.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.EndecaSectionGroup.Analytics">
            <summary>
              Gets or sets the <see cref="T:Endeca.Data.Configuration.AnalyticsSection"/> for this section group.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.Server">
            <summary>
            Represents an MDEX Engine consisting of a host name, port, optional SSL certificate, and
            alias.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.Server.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Configuration.Server"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.Server.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Configuration.Server"/> instance.
            </summary>
            <param name="name">Unique name of this server element.</param>
            <param name="hostName">Host name of the Endeca server.</param>
            <param name="port">Port of the Endeca server.</param>
            <param name="certificatePath">Certificate path of the Endeca server.</param>
        </member>
        <member name="P:Endeca.Data.Configuration.Server.Name">
            <summary>
              Gets or sets a unique name of this server element. This value cannot contain whitespace
              or period characters.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.Server.HostName">
            <summary>
              Gets or sets the host name of the Endeca server.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.Server.Port">
            <summary>
              Gets or sets the port of the Endeca server.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.Server.CertificatePath">
            <summary>
              Gets or sets the certificate path of the Endeca server.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.ServerCollection">
            <summary>
              Represents the collection of <see cref="T:Endeca.Data.Configuration.Server"/> elements defined in a configuration
              file.
            </summary>
        </member>
        <member name="M:Endeca.Data.Configuration.ServerCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
              See <see cref="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.Configuration.ServersSection">
            <summary>
              Represents the <b>server</b> section of the Endeca configuration group.
            </summary>
        </member>
        <member name="F:Endeca.Data.Configuration.ServersSection.SectionName">
            <summary>
              Name of the <see cref="T:Endeca.Data.Configuration.ServersSection"/> section in the configuration file.
            </summary>
        </member>
        <member name="P:Endeca.Data.Configuration.ServersSection.Servers">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.Configuration.Server"/> elements defined in the configuration
              section.
            </summary>
        </member>
        <member name="T:Endeca.Data.ConnectionException">
            <summary>
              Represents the exception that is thrown when an error occurred while connecting to an MDEX
              server.
            </summary>
        </member>
        <member name="M:Endeca.Data.ConnectionException.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.ConnectionException"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.ConnectionException.#ctor(System.String)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.ConnectionException"/> instance with the specified
              error message.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
        </member>
        <member name="M:Endeca.Data.ConnectionException.#ctor(System.String,System.Exception)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.ConnectionException"/> instance with the specified
              error message and inner exception.
            </summary>
            <param name="message">
              Error message describing the reason this exception occurred.
            </param>
            <param name="inner">Inner exception that caused this exception.</param>
        </member>
        <member name="M:Endeca.Data.ConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="T:Endeca.Data.Provider.TypeNames">
            <summary>
            Wrapper class that holds assembly-qualified names of types.  The types are result objects of a command result
            and may be used to modify and add properties to the base objects.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.TypeNames.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.TypeNames"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Provider.TypeNames.#ctor(Endeca.Data.Provider.TypeNames)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Provider.TypeNames"/> instance with values copied from the specified
              <see cref="T:Endeca.Data.Provider.TypeNames"/> instance.
            </summary>
            <param name="typeNames"><see cref="T:Endeca.Data.Provider.TypeNames"/> to copy.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="typeNames"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.Provider.TypeNames.OnPropertyChanged(System.String)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Provider.TypeNames.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property whose value changed.</param>
        </member>
        <member name="P:Endeca.Data.Provider.TypeNames.RecordTypeName">
            <summary>
              Gets or sets the assembly-qualified name of the type that should be used to represent
              records.  This type must be a subclass of <see cref="T:Endeca.Data.Record"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.Provider.TypeNames.DimensionValueTypeName">
            <summary>
              Gets or sets the assembly-qualified name of the type that should be used to represent
              dimension values.  This type must be a subclass of <see cref="T:Endeca.Data.DimensionValue"/>.
            </summary>
        </member>
        <member name="E:Endeca.Data.Provider.TypeNames.PropertyChanged">
            <summary>
              Raised when the value of a property of this instance is changed.
            </summary>
        </member>
        <member name="T:Endeca.Data.RecordAttribute">
            <summary>
            Contains the name of a property or dimension.
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordAttribute.#ctor">
            <summary>
            Instantiates a new RecordAttribute.
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordAttribute.#ctor(System.String)">
            <summary>
            Instantiates a new RecordAttribute with the given dimension or property name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Endeca.Data.RecordAttribute.Parse(System.String)">
            <summary>
            Returns a RecordAttribute from a properly formatted string
            </summary>
            <param name="value"><see cref="T:System.String"/> form of a <see cref="T:Endeca.Data.RecordAttribute"/></param>
            <returns>The resulting <see cref="T:Endeca.Data.RecordAttribute"/></returns>
        </member>
        <member name="M:Endeca.Data.RecordAttribute.ToString">
            <summary>
            Returns the string representation of this RecordAttribute.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Endeca.Data.RecordAttribute.Name">
            <summary>
            Gets or sets the dimension or property name.
            </summary>
        </member>
        <member name="E:Endeca.Data.RecordAttribute.PropertyChanged">
            <summary>
              Raised when items in this collection have their properties changed.
            </summary>
        </member>
        <member name="T:Endeca.Data.RecordDetailsCommand">
            <summary>
            Command to retrieve record details for a single <see cref="T:Endeca.Data.Record"/> from the MDEX Engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordDetailsCommand.#ctor">
            <summary>
            Constructs a RecordDetailsCommand without a connection to an MDEX Engine.
            The connection must be set before calling ExecuteCommand or Execute.
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordDetailsCommand.#ctor(Endeca.Data.Provider.EndecaConnection)">
            <summary>
            Constructs a RecordDetailsCommand with an EndecaConnection.
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordDetailsCommand.CopyFrom(Endeca.Data.RecordDetailsCommand)">
            <summary>
              Copies values of properties from the specified command to the corresponding properties
              of this command.
            </summary>
            <remarks>
              This method initializes the command with values from <paramref name="command"/>. 
            </remarks>
            <param name="command">Command from which values will be copied.</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="command"/> is null.</exception>
        </member>
        <member name="M:Endeca.Data.RecordDetailsCommand.Execute">
            <summary>
            Executes the command.
            </summary>
            <returns>The record identified by <seealso cref="P:Endeca.Data.RecordDetailsCommand.Identifier"/>.</returns>
        </member>
        <member name="P:Endeca.Data.RecordDetailsCommand.Identifier">
            <summary>
             Gets or sets the identifier of the record that should be retrieved by this command.
            </summary>
        </member>
        <member name="T:Endeca.Data.RefinementConfig">
            <summary>
            Class representing a dynamic refinement config for a DimensionValue. This will determine 
            how refinements are computed under this DimensionValue. Each DimensionValue in a
            RefinementConfig is automatically opened, and has options for controlling the number of 
            DimensionValues displayed under it, whether dynamic ranking is used for these dimension
            values, and the sort order of the dimension values.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.RefinementConfig"/>.  IsExposed defaults to true.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.#ctor(System.String)">
            <summary>
            Creates a new RefinementConfig object that is exposed and uses the Developer Studio 
            defaults for DynamicRanking, DynamicRankOrder, and DynamicRefinementCount.  IsExposed defaults to true.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Creates a new RefinementConfig object with the specified parameters.  IsExposed defaults to true.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Creates a new RefinementConfig object with the specified parameters.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.GetHashCode">
            <summary>
            See <see cref="M:System.Object.GetHashCode"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.Equals(System.Object)">
            <summary>
            Returns true if and only if obj is a RefinementConfig with the same properties as this
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.Equals(Endeca.Data.RefinementConfig)">
            <summary>
            Returns true if and only if other has the same property as this.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfig.CopyFrom(Endeca.Data.RefinementConfig)">
            <summary>
            Copy the state from config into this.
            </summary>
        </member>
        <member name="P:Endeca.Data.RefinementConfig.DimensionValueId">
            <summary>
            The ID of the DimensionValue that this RefinementConfig controls.
            </summary>
            <remarks>
            Note that in the case of Dimensions, the Dimension ID and the Root DimensionValue ID are 
            always the same.
            </remarks>
        </member>
        <member name="P:Endeca.Data.RefinementConfig.MaximumDimensionValueCount">
            <summary>
            Gets or sets the maximum number of dimension values (refinements) to 
            return to the user. This is only used if the dimension value has a limit on the number
            of dimension values it returns.
            </summary>
        </member>
        <member name="P:Endeca.Data.RefinementConfig.OrderByRecordCount">
            <summary>
            Gets or sets whether the dimension value is sorted by refinement sort order or by record count. If set to use the 
            default, the dimension value will be sorted by refinement sort order or record count, depending on 
            the dimension's setting in Developer Studio. This is only used if the dimension value has a limit on the number
            of dimension values it returns.
            </summary>
        </member>
        <member name="P:Endeca.Data.RefinementConfig.LimitDimensionValues">
            <summary>
            Gets or sets whether to show all dimension values, some (meaning the more button), 
            or default to the settings in Developer Studio.
            </summary>
        </member>
        <member name="P:Endeca.Data.RefinementConfig.IsExposed">
            <summary>
            Gets or sets whether to expose the dimension.  When this is set to false, all other properties are trumped and
            the dimension is not exposed.  Set to true by default.
            </summary>
        </member>
        <member name="E:Endeca.Data.RefinementConfig.PropertyChanged">
            <summary>
              Raised when items in this collection have their properties changed.
            </summary>
        </member>
        <member name="T:Endeca.Data.RefinementConfigCollection">
            <summary>
            A collection of <see cref="T:Endeca.Data.RefinementConfig"/> objects keyed by DimensionValueId.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfigCollection.GetKeyForItem(Endeca.Data.RefinementConfig)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.RefinementConfigCollection.Expose(System.String)">
            <summary>
            Adds a new Refinement Config for the specified DimensionValueId, which defaults to 
            exposed and uses the Developer Studio settings for dynamic ranking, sort order, and count.
            </summary>
        </member>
        <member name="T:Endeca.Data.Search">
            <summary>
            Represents a record search.
            </summary>
        </member>
        <member name="M:Endeca.Data.Search.#ctor">
            <summary>
            Initializes a new <see cref="T:Endeca.Data.Search"/> instance. <seealso cref="P:Endeca.Data.Search.KeyName"/>
            and <seealso cref="P:Endeca.Data.Search.Terms"/> must be specified in order for the search to be valid.
            </summary>
        </member>
        <member name="M:Endeca.Data.Search.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Endeca.Data.Search"/> instance which will perform a search within the specified 
            attribute or interface. <seealso cref="P:Endeca.Data.Search.Terms"/> must be specified in order for 
            the search to be valid.
            </summary>
            <param name="keyName">
            The property, dimension, or search interface name.</param>
        </member>
        <member name="M:Endeca.Data.Search.#ctor(System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Endeca.Data.Search"/> instance which will perform a search for the specified terms within 
            the specified attribute or interface. 
            </summary>
            <param name="terms">The terms to search for.</param>
            <param name="keyName">
            The property, dimension, or search interface name.</param>
        </member>
        <member name="M:Endeca.Data.Search.#ctor(System.String,System.String,Endeca.Data.SearchMode)">
            <summary>
            Initializes a new <see cref="T:Endeca.Data.Search"/> instance which will perform a search for the specified terms within 
            the specified attribute or interface. The options provided may also affect the search.
            </summary>
            <param name="terms">The terms to search for.</param>
            <param name="keyName">
            The property, dimension, or search interface name.</param>
            <param name="mode">Search mode for the search .<see cref="T:Endeca.Data.SearchMode"/></param>
        </member>
        <member name="M:Endeca.Data.Search.#ctor(System.String,System.String,Endeca.Data.SearchMode,System.String)">
            <summary>
            Creates a RecordSearch object which will perform a search for the specified terms within 
            the specified attribute or interface. The search mode and relevance ranking  provided may also affect the search.
            </summary>
            <param name="terms">The terms to search for.</param>
            <param name="keyName">
            The property, dimension, or search interface name.</param>
            <param name="mode">Search mode for the search <see cref="T:Endeca.Data.SearchMode"/>.</param>
            <param name="relevanceRanking">Name of the relevance ranking  to use for the search.</param>
        </member>
        <member name="M:Endeca.Data.Search.Equals(Endeca.Data.Search)">
            <summary>
              See <see cref="M:System.IEquatable`1.Equals(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Search.OnPropertyChanged(System.String)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Search.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property whose value changed.</param>
        </member>
        <member name="M:Endeca.Data.Search.ToString">
            <summary>
            Creates a string representation of <see cref="T:Endeca.Data.Search"/> 
            which can be used in conjunction with <see cref="M:Endeca.Data.Search.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.Search.Parse(System.String)">
            <summary>
            Creates a <see cref="T:Endeca.Data.Search"/> from a properly formatted string
            </summary>
            <param name="value">The string representation of the <see cref="T:Endeca.Data.Search"/></param>
        </member>
        <member name="E:Endeca.Data.Search.PropertyChanged">
            <summary>
              Raised when the value of a property of this instance is changed.
            </summary>
        </member>
        <member name="P:Endeca.Data.Search.KeyName">
            <summary>
            The property, dimension, or search interface name to search within.
            </summary>
        </member>
        <member name="P:Endeca.Data.Search.Terms">
            <summary>
            The terms to search for.
            </summary>
        </member>
        <member name="P:Endeca.Data.Search.Mode">
            <summary>
            <see cref="T:Endeca.Data.SearchMode"/> for this search.
            </summary>
        </member>
        <member name="P:Endeca.Data.Search.RelevanceRanking">
            <summary>
            Relevence ranking  for this search.
            </summary>
        </member>
        <member name="T:Endeca.Data.SearchKey">
            <summary>
              Represents the name of a property or interface that may be searched against.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchKey.#ctor(System.String,System.Boolean)">
            <summary>
               Initializes a new <see cref="T:Endeca.Data.SearchKey"/> instance.
            </summary>
            <param name="name">Name of the search key (i.e. the property or interface name).</param>
            <param name="isSearchInterface">
              Indicates if this search key represents the name of a search interface, instead of a 
              property name.
            </param>
        </member>
        <member name="M:Endeca.Data.SearchKey.Equals(Endeca.Data.SearchKey)">
            <summary>
              Returns a value indicating of the specfied <see cref="T:Endeca.Data.Sort"/> has the same values
              as this instance.
            </summary>
            <param name="other"><see cref="T:Endeca.Data.Sort"/> instance to compare for equality.</param>
        </member>
        <member name="P:Endeca.Data.SearchKey.Name">
            <summary>
              Gets the name of the search key (i.e. the property or interface name).
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchKey.IsSearchInterface">
            <summary>
              Gets a value indicating if this search key represents the name of a search interface, 
              instead of a property name.
            </summary>
        </member>
        <member name="T:Endeca.Data.SearchKeyCollection">
            <summary>
            Wraps a list of property names enabled for searching and search interfaces.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchKeyCollection.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.SearchKeyCollection"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchKeyCollection.#ctor(System.Collections.Generic.IEnumerable{Endeca.Data.SearchKey})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.SearchKeyCollection"/> instance and adds the specified 
              items to the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchKeyCollection.GetKeyForItem(Endeca.Data.SearchKey)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>.  The item key for this collection is <see cref="P:Endeca.Data.SearchKey.Name"/>
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchKeyCollection.Names">
            <summary>
            Gets a collection of all string property and interface names that are enabled for searching.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchKeyCollection.SearchInterfaces">
            <summary>
            Gets a list of <see cref="T:Endeca.Data.SearchKey"/> objects that are search interfaces.  
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchKeyCollection.SearchInterfaceNames">
            <summary>
            Gets a collection of string interface names that are enabled for searching.
            </summary>
        </member>
        <member name="T:Endeca.Data.SearchReport">
            <summary>
              Represents a description of a text search executed by the MDEX Engine. This class describes
              the text search issued to the MDEX Engine when a query was made, as well as additional
              spelling corrections and suggestions performed by the MDEX Engine when processing the search.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchReport.#ctor(Endeca.Data.Search,Endeca.Data.SearchMode,System.Int64,System.Int64,System.String,Endeca.Data.PropertyMap,System.String,System.Collections.Generic.IList{Endeca.Data.SearchAdjustment},System.Collections.Generic.IList{Endeca.Data.SearchAdjustment})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.SearchReport"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.Search">
            <summary>
              Gets the original search that generated this report.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.MatchedMode">
            <summary>
            Gets the matched search mode that was selected by the MDEX Engine.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.AppliedSearchAdjustments">
            <summary>
            Gets the collection of applied search adjustments made by the Endeca MDEX Engine.  The adjustment type
            may be a spelling correction, phrasing, or word break.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.SuggestedSearchAdjustments">
            <summary>
            Gets the list of suggested search adjustments made by the Endeca MDEX Engine.  The adjustment type
            may be a spelling correction, phrasing, or word break.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.MatchedTermsCount">
            <summary>
            Gets the number of matched terms from the search
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.MatchedRecordCount">
            <summary>
            Gets the number of results matched by the search.  
            The results refer to records in a record search and dimensions in a dimension search
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.TruncatedTerms">
            <summary>
            Gets the truncated terms if truncation was needed to ensure the performance of the search
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.WordInterpretations">
            <summary>
            Gets the <see cref="T:Endeca.Data.PropertyMap"/> of word interpretations for the search
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchReport.ErrorMessage">
            <summary>
            Gets the error message if the search was invalid
            </summary>
        </member>
        <member name="T:Endeca.Data.Sort">
            <summary>
              Represents a description that indicates that record should be sorted by a particular property.
            </summary>
        </member>
        <member name="M:Endeca.Data.Sort.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Sort"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Sort.#ctor(System.String,Endeca.Data.SortDirection,Endeca.Data.SortType,Endeca.Data.Geocode)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Sort"/> instance.
            </summary>
            <param name="keyName">Property name on which to sort.</param>
            <param name="sortDirection">Direction to sort the specified property.</param>
            <param name="sortType">Indicates the type of sort represented by this instance.</param>
            <param name="referenceGeocode"></param>
        </member>
        <member name="M:Endeca.Data.Sort.#ctor(System.String,Endeca.Data.SortDirection)">
            <summary>
              Initializes a new alphanumeric <see cref="T:Endeca.Data.Sort"/> instance.
            </summary>
            <param name="keyName">Field name on which to sort. </param>
            <param name="sortDirection">Direction to sort the specified field.</param>
        </member>
        <member name="M:Endeca.Data.Sort.Equals(Endeca.Data.Sort)">
            <summary>
              Returns a value indicating of the specfied <see cref="T:Endeca.Data.Sort"/> has the same values
              as this instance.
            </summary>
            <param name="other"><see cref="T:Endeca.Data.Sort"/> instance to compare for equality.</param>
        </member>
        <member name="M:Endeca.Data.Sort.OnPropertyChanged(System.String)">
            <summary>
              Raises the <see cref="E:Endeca.Data.Sort.PropertyChanged"/> event.
            </summary>
            <param name="keyName">Name of the property whose value changed.</param>
        </member>
        <member name="E:Endeca.Data.Sort.PropertyChanged">
            <summary>
               Raised when the value of a property of this instance is changed.
            </summary>
        </member>
        <member name="P:Endeca.Data.Sort.ReferenceGeocode">
            <summary>
            Gets or sets the reference geocode for the sort. Returns null if the sort is not a Geocode
            sort.
            </summary>
        </member>
        <member name="P:Endeca.Data.Sort.KeyName">
            <summary>
            Gets or sets the name of the property being sorted.
            </summary>
        </member>
        <member name="P:Endeca.Data.Sort.SortType">
            <summary>
            Gets or sets the type of sort from the available <see cref="P:Endeca.Data.Sort.SortType"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.Sort.SortDirection">
            <summary>
            Gets or sets whether the sort is ascending or descending based on <see cref="P:Endeca.Data.Sort.SortDirection"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionValuePath">
            <summary>
              A collection of <see cref="T:Endeca.Data.DimensionValue"/> instances representing the path from the first 
              dimension value to the last dimension value.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValuePath.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionValuePath"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionValuePath.#ctor(Endeca.Data.DimensionValue)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionValuePath"/> instance.
            </summary>
            <param name="dimensionValue">
              The leaf dimension value for this path.  The path will contain the dimension values
              from the root dimension leading to this dimension value (inclusive), in that order.
            </param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="dimensionValue"/> is null.
            </exception>
        </member>
        <member name="M:Endeca.Data.DimensionValuePath.IsAfterSelectedDimensionValue(Endeca.Data.DimensionValue)">
            <summary>
            Returns whether the <see cref="T:Endeca.Data.DimensionValue"/> comes after a selected <see cref="T:Endeca.Data.DimensionValue"/>
            in a hierarchy.  Things that can come after the selected value are either inert or implicit or both.
            </summary>
            <param name="dimensionValue">value to be tested</param>
            <returns>true if the value is after the selected value or if no value is selected false if not</returns>
        </member>
        <member name="M:Endeca.Data.DimensionValuePath.IsImplicitDimensionValue(Endeca.Data.DimensionValue)">
            <summary>
            Returns whether the <see cref="T:Endeca.Data.DimensionValue"/> is implicit
            </summary>
            <param name="dimensionValue">value to be tested for implict property</param>
            <returns>true if implicit false if not</returns>
        </member>
        <member name="M:Endeca.Data.DimensionValuePath.IsSelectedDimensionValue(Endeca.Data.DimensionValue)">
            <summary>
            Returns whether the <see cref="T:Endeca.Data.DimensionValue"/> is selected in the current navigation state
            </summary>
            <param name="dimensionValue">value to be tested for the selected property</param>
            <returns>true if selected false if not</returns>
        </member>
        <member name="P:Endeca.Data.DimensionValuePath.First">
            <summary>
            Gets the first dimension value in the collection.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValuePath.Last">
            <summary>
            Gets the last dimension value in the collection.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionValuePath.Intermediates">
            <summary>
            An enumeration of dimension values, including everything but the first and last items.
            </summary>
        </member>
        <member name="T:Endeca.Data.ComponentModel.CollectionParameterConverter`1">
            <summary>
              A type converter that can convert a collection of primitives to and from a string.
            </summary>
            <typeparam name="T">Type of items in the collection to convert.</typeparam>
        </member>
        <member name="M:Endeca.Data.ComponentModel.CollectionParameterConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.CollectionParameterConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.ComponentModel.CollectionParameterConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
              See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.MetadataResult">
            <summary>
            Encapsulates static metatdata about the MDEX Engine such as property data, sort keys, search keys, and aggregation keys.
            </summary>
        </member>
        <member name="M:Endeca.Data.MetadataResult.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Endeca.Data.SearchKey},System.Collections.Generic.IList{Endeca.Data.AttributeMetadata},System.Collections.Generic.IList{System.String})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.MetadataResult"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.MetadataResult.SortKeys">
            <summary>
            Gets a collection of active and available sorts.
            </summary>
        </member>
        <member name="P:Endeca.Data.MetadataResult.SearchKeys">
            <summary>
            Gets a collection of <see cref="T:Endeca.Data.SearchKey"/>s describing the active and available searches.
            </summary>
        </member>
        <member name="P:Endeca.Data.MetadataResult.AttributeMetadata">
            <summary>
            Gets the a collection of <see cref="P:Endeca.Data.MetadataResult.AttributeMetadata"/>, keyed by name.
            </summary>
        </member>
        <member name="P:Endeca.Data.MetadataResult.AggregationKeys">
            <summary>
            Gets the collection of properties that can be used as aggregation keys in aggregated record commands.
            </summary>
        </member>
        <member name="T:Endeca.Data.AttributeMetadataCollection">
            <summary>
              A collection of <see cref="T:Endeca.Data.AttributeMetadata"/> instances. The indexer looks up items by
              <see cref="P:Endeca.Data.AttributeMetadata.Name"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.AttributeMetadataCollection.#ctor">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AttributeMetadataCollection"/> instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.AttributeMetadataCollection.#ctor(System.Collections.Generic.IEnumerable{Endeca.Data.AttributeMetadata})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AttributeMetadataCollection"/> instance and adds the 
              specified items to the collection.
            </summary>
        </member>
        <member name="M:Endeca.Data.AttributeMetadataCollection.GetKeyForItem(Endeca.Data.AttributeMetadata)">
            <summary>
              Uses <see cref="P:Endeca.Data.AttributeMetadata.Name"/> as the key.
            </summary>
        </member>
        <member name="T:Endeca.Data.MultiSelect">
            <summary>
            The selection capabilities of the dimension or dimension value.
            </summary>
        </member>
        <member name="F:Endeca.Data.MultiSelect.None">
            <summary>
            This is a single select dimension.
            </summary>
        </member>
        <member name="F:Endeca.Data.MultiSelect.And">
            <summary>
            This is a multi-select dimension that finds the intersection of the selected dimension values.
            </summary>
        </member>
        <member name="F:Endeca.Data.MultiSelect.Or">
            <summary>
            This is a multi-select dimension that finds the union of the selected dimension values.
            </summary>
        </member>
        <member name="T:Endeca.Data.PropertyChangeNotifyCollection`1">
            <summary>
              A collection that raises <see cref="E:Endeca.Data.ChangeNotifyCollection`1.CollectionChanged"/> whenever a
              property value of an item in the collection changes.
            </summary>
            <typeparam name="T">Type of items contained in the collection.</typeparam>
        </member>
        <member name="T:Endeca.Data.PropertyConvert">
            <summary>
              A collection of methods to assist in parsing string values returned by the MDEX Engine into 
              equivalent .NET primitive types.
            </summary>
        </member>
        <member name="M:Endeca.Data.PropertyConvert.Parse``1(System.String)">
            <summary>
              Converts the specified property value into an instance of the specified type.
            </summary>
            <remarks>
              See <see cref="M:Endeca.Data.PropertyConvert.Parse(System.String,System.Type)"/> for the exceptions this method 
              can throw.
            </remarks>
            <param name="propertyValue">Value to convert.</param>
            <typeparam name="T">
              Type to which <paramref name="propertyValue"/> should be converted. It must represent
              one of the following types: Int64, Double, String, DateTime, TimeSpan, or 
              <see cref="T:Endeca.Data.Geocode"/>.
            </typeparam>
        </member>
        <member name="M:Endeca.Data.PropertyConvert.Parse(System.String,System.Type)">
            <summary>
              Converts the specified property value into an instance of the specified type.
            </summary>
            <remarks>
              
            </remarks>
            <param name="propertyValue">Value to convert.</param>
            <param name="targetType">
              Type to which <paramref name="propertyValue"/> should be converted.
            </param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="targetType"/> is null.</exception>
            <exception cref="T:System.ArgumentException">if <paramref name="propertyValue"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              if <paramref name="targetType"/> does not represent one of: Int64, Double, String, DateTime, 
              TimeSpan, or <see cref="T:Endeca.Data.Geocode"/>, or a corresponding nullable version.
            </exception>
        </member>
        <member name="T:Endeca.Data.RangeFilter">
            <summary>
               Represents a range filter on a record set.
            </summary>
            <remarks>
              A <see cref="T:Endeca.Data.RangeFilter"/> represents a set of conditions that must be true in order for a record to
              pass through the filter.
              <para>
              Each filter acts upon a particular attribute (i.e. property or dimension), as indicated by
              <see cref="P:Endeca.Data.RangeFilter.AttributeName"/>, and can be categorized as a either a <i>comparison</i> or
              a <i>between</i> filter. A comparison filter compares an attribute value against the value of
              <see cref="P:Endeca.Data.RangeFilter.Bound1"/> , while a between filter compares an attribute value to determine
              if it is between <see cref="P:Endeca.Data.RangeFilter.Bound1"/> and <see cref="P:Endeca.Data.RangeFilter.Bound2"/>.</para>
              <para>
              Furthermore each comparison or between filter has a <i>geocode</i> variant, in which the
              geospatial reference point returned by <see cref="P:Endeca.Data.RangeFilter.Geocode"/> is in incorporated into
              filter condition. Range filters that do not incorporate this reference point return null from
              <see cref="P:Endeca.Data.RangeFilter.Geocode"/>. When evaluating a geocode filter, the attribute for the filter
              must be a geocode-valued property.</para>
              <para>
              There is no public constructor for {@see RangeFilter}; instead four factory methods create the
              various types of range filters:
              <see cref="M:Endeca.Data.RangeFilter.CreateBetweenRangeFilter(System.String,System.Double,System.Double)"/>, <see cref="M:Endeca.Data.RangeFilter.CreateComparisonRangeFilter(System.String,Endeca.Data.RangeFilterOperator,System.Double)"/>
              <see cref="M:Endeca.Data.RangeFilter.CreateGeocodeBetweenRangeFilter(System.String,Endeca.Data.Geocode,System.Double,System.Double)"/>, and <see cref="M:Endeca.Data.RangeFilter.CreateGeocodeComparisonRangeFilter(System.String,Endeca.Data.RangeFilterOperator,Endeca.Data.Geocode,System.Double)"/>
              </para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.RangeFilter.CreateBetweenRangeFilter(System.String,System.Double,System.Double)">
            <summary>
              Creates new between range filter.
            </summary>
            <remarks>
              This filter will include records for which the value of the (integer or floating-point 
              valued) record attribute identified by the <paramref name="attributeName"/> parameter is
              within the bounds specified by the <paramref name="bound1"/> and <paramref name="bound2"/>
              parameters.
            </remarks>
            <param name="attributeName">
              The attribute (i.e. property or dimension) that this filter acts upon.
            </param>
            <param name="bound1">The lower bound (inclusive) for this filter.</param>
            <param name="bound2">The upper bound (inclusive) for this filter.</param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="attributeName"/> is null or empty, or if <paramref name="bound1"/> is
              greater than or equal to <paramref name="bound2"/>.
            </exception>
        </member>
        <member name="M:Endeca.Data.RangeFilter.CreateComparisonRangeFilter(System.String,Endeca.Data.RangeFilterOperator,System.Double)">
            <summary>
              Creates new between comparison filter.
            </summary>
            <remarks>
              This filter will include records for which the value of the (integer or floating-point valued)
              record attribute identified by the <paramref name="attributeName"/> parameter, is greater 
              than, greater than or equal, less than, or less than or equal to the value specified by 
              the <paramref name="bound1"/> parameter.
            </remarks>
            <param name="attributeName">
              The attribute (i.e. property or dimension) that this filter acts upon.
            </param>
            <param name="rangeOperator">describes the comparison operation for this filter.</param>
            <param name="bound1">The bound for the comparison operation.</param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="attributeName"/> is null or empty, or if <paramref name="rangeOperator"/> is
              not one of <see cref="F:Endeca.Data.RangeFilterOperator.LessThan"/>, 
              <see cref="F:Endeca.Data.RangeFilterOperator.LessThanOrEqual"/>, <see cref="F:Endeca.Data.RangeFilterOperator.GreaterThan"/>, 
              or <see cref="F:Endeca.Data.RangeFilterOperator.GreaterThanOrEqual"/>
            </exception>
        </member>
        <member name="M:Endeca.Data.RangeFilter.CreateGeocodeBetweenRangeFilter(System.String,Endeca.Data.Geocode,System.Double,System.Double)">
            <summary>
              Creates a new geocode between filter.
            </summary>
            <remarks>
              This filter will include records for which the geocode value of the record attribute
              identified by the <paramref name="attributeName"/> parameter, when evaluated relative to
              the specified reference geocode, is with the bounds specified by the 
              <paramref name="bound1"/> and <paramref name="bound2"/> parameters.
            </remarks>
            <param name="attributeName">
              The attribute (i.e. property or dimension) that this filter acts upon.
            </param>
            <param name="geocode"> the reference geocode for this filter.</param>
            <param name="bound1">The lower bound (inclusive) for this filter.</param>
            <param name="bound2">The upper bound (inclusive) for this filter.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="geocode"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
              if <paramref name="attributeName"/> is null or empty, or if <paramref name="bound1"/> is
              greater than or equal to <paramref name="bound2"/>.
            </exception>
        </member>
        <member name="M:Endeca.Data.RangeFilter.CreateGeocodeComparisonRangeFilter(System.String,Endeca.Data.RangeFilterOperator,Endeca.Data.Geocode,System.Double)">
            <summary>
              Creates a new geocode comparison filter.
            </summary>
            <remarks>
              This filter will include records for which the geocode value of the record attribute
              identified by the attributeName parameter, when evaluated relative to the specified reference
              geocode, is greater than or less than the value specified by the <paramref name="bound1"/>
              parameter.
            </remarks>
            <param name="attributeName">
              The attribute (i.e. property or dimension) that this filter acts upon.
            </param>
            <param name="geocode">The reference geocode for this filter.</param>
            <param name="rangeOperator">Describes the comparison operation for this filter.</param>
            <param name="bound1">The bound for the comparison operation.</param>
            <exception cref="T:System.ArgumentNullException">
              if <paramref name="geocode"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
              if <paramref name="attributeName"/> is null or empty, or if if <paramref name="rangeOperator"/> is
              not one of <see cref="F:Endeca.Data.RangeFilterOperator.GeocodeLessThan"/>, 
              <see cref="F:Endeca.Data.RangeFilterOperator.GeocodeGreaterThan"/>.
            </exception>
        </member>
        <member name="M:Endeca.Data.RangeFilter.Parse(System.String)">
            <summary>
              Parses the specified string into a <see cref="T:Endeca.Data.RangeFilter"/> instance.
            </summary>
            <param name="value">Value to parse.  
              This value should have been produced by a call to <see cref="M:Endeca.Data.RangeFilter.ToString"/>.
            </param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="value"/> is null or empty.
            </exception>
            <exception cref="T:System.FormatException">
              if <paramref name="value"/> is not in the expected format.
            </exception>
        </member>
        <member name="M:Endeca.Data.RangeFilter.Equals(System.Object)">
            <summary>
              Implements value equality semantics for <see cref="T:Endeca.Data.RangeFilter"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.RangeFilter.GetHashCode">
            <summary>
            See <see cref="M:System.Object.GetHashCode"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.RangeFilter.ToString">
            <summary>
              Returns a formatted representation of this filter.
            </summary>
        </member>
        <member name="M:Endeca.Data.RangeFilter.Equals(Endeca.Data.RangeFilter)">
            <summary>
              Implements value equality semantics for <see cref="T:Endeca.Data.RangeFilter"/>.
              See <see cref="M:System.IEquatable`1.Equals(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.RangeFilter.#ctor(System.String,Endeca.Data.RangeFilterOperator,System.Double,System.Nullable{System.Double},Endeca.Data.Geocode,System.String)">
            <summary>
              Private to force consumers to use factory methods.
            </summary>
        </member>
        <member name="M:Endeca.Data.RangeFilter.ParseRangeType(System.String)">
            <summary>
            Returns a <see cref="T:Endeca.Data.RangeFilterOperator"/> instances from a range filter operator used in the 
            Endeca API. The available types for conversation are: "LT", "LTEQ", "GT", "GTEQ", 
            "BTWN", "GCLT", "GCGT", and "GCBTWN".
            </summary>
        </member>
        <member name="P:Endeca.Data.RangeFilter.Operator">
            <summary>
             Gets the operator that describes the type of filter operation represented by this 
             <see cref="T:Endeca.Data.RangeFilter"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.RangeFilter.AttributeName">
            <summary>
              Gets the name of the property or dimension that this range filter compares against.
            </summary>
        </member>
        <member name="P:Endeca.Data.RangeFilter.Bound1">
            <summary>
              Gets the first bound for this filter.  
            </summary>
            <remarks>
              For comparison filters, this bound is the value against which a record attribute will be
              compared.  For between filters, this is the lower bound of the range.
            </remarks>
        </member>
        <member name="P:Endeca.Data.RangeFilter.Bound2">
            <summary>
              Gets the second bound for this filter. This will be null unless 
              <see cref="P:Endeca.Data.RangeFilter.Operator"/> is <see cref="F:Endeca.Data.RangeFilterOperator.Between"/> or 
              <see cref="F:Endeca.Data.RangeFilterOperator.GeocodeBetween"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.RangeFilter.Geocode">
            <summary>
              Gets the <see cref="P:Endeca.Data.RangeFilter.Geocode"/> that serves as reference point for geocode filter 
              operations. Returns null if this <see cref="T:Endeca.Data.RangeFilter"/> does not represent a geocode
              filter.
            </summary>
        </member>
        <member name="T:Endeca.Data.RecordsResult">
            <summary>
              Groups together the information relating to records that is returned by the MDEX engine in 
              response to executing a <see cref="T:Endeca.Data.NavigationCommand"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.RecordsResult.#ctor(System.Int64,System.Int64,System.Int32,System.Collections.Generic.IList{Endeca.Data.Record})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.RecordsResult"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.RecordsResult.TotalRecordCount">
            <summary>
              Gets the total number of records available in the MDEX engine that matched the query.
            </summary>
            <remarks>
               This value reflects the number of available records. The records in the
               <see cref="P:Endeca.Data.RecordsResult.Records"/> collection represent a 'page' of records drawn 
               from the set of available records.
            </remarks>
        </member>
        <member name="P:Endeca.Data.RecordsResult.RecordsPerPage">
            <summary>
              Gets the number of records that comprise each page of records.
            </summary>
            <remarks>
              In general this value should match the number of records in the
              <see cref="P:Endeca.Data.RecordsResult.Records"/> collection, unless the current page represents the 
              last page of records, in which case there may not be enough records available to fill 
              the entire page.
            </remarks>
        </member>
        <member name="P:Endeca.Data.RecordsResult.RecordOffset">
            <summary>
              Gets the 0-based offset of the 'page' of records represented by this result.
            </summary>
            <remarks>
              This value is used on conjunction with <see cref="P:Endeca.Data.RecordsResult.RecordsPerPage"/> to 
              locate the position of the current page of records within the total set of available 
              matching records. For example, if the value of <see cref="P:Endeca.Data.RecordsResult.RecordsPerPage"/>
              is 10 and the value of <see cref="P:Endeca.Data.RecordsResult.RecordOffset"/> is 30, then the current 
              page represents the fourth page of records.
            </remarks>
        </member>
        <member name="P:Endeca.Data.RecordsResult.Records">
            <summary>
              Gets the read-only collection of records returned by the MDEX engine in response to a
              <see cref="T:Endeca.Data.NavigationCommand"/>.
            </summary>
            <remarks>
              The records in this collection represent a 'page' of records drawn from the total set of
              available matching records.  The specific page of records that this collection reflects is
              represented by the values of <see cref="P:Endeca.Data.RecordsResult.RecordsPerPage"/> and 
              <see cref="P:Endeca.Data.RecordsResult.RecordOffset"/>.
            </remarks>
        </member>
        <member name="T:Endeca.Data.NavigationResult">
            <summary>
             Contains all navigation-related results from the MDEX Engine.
             This result aggregates the contents of <see cref="P:Endeca.Data.NavigationResult.RecordsResult"/>, 
             <see cref="P:Endeca.Data.NavigationResult.AggregateRecordsResult"/>, <see cref="P:Endeca.Data.NavigationResult.AppliedFiltersResult"/>,
             <see cref="P:Endeca.Data.NavigationResult.DimensionStatesResult"/>, <see cref="P:Endeca.Data.NavigationResult.AnalyticsDataSet"/>, 
             <see cref="P:Endeca.Data.NavigationResult.MetadataResult"/>, <see cref="T:Endeca.Data.BusinessRule"/>, 
             and <see cref="T:Endeca.Data.Cluster"/>.
             </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.RecordsResult">
            <summary>
            Gets the <see cref="P:Endeca.Data.NavigationResult.RecordsResult"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.AggregateRecordsResult">
            <summary>
            Gets the <see cref="P:Endeca.Data.NavigationResult.AggregateRecordsResult"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.DimensionStatesResult">
            <summary>
            Gets the <see cref="P:Endeca.Data.NavigationResult.DimensionStatesResult"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.AppliedFiltersResult">
            <summary>
            Gets the <see cref="P:Endeca.Data.NavigationResult.AppliedFiltersResult"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.AnalyticsDataSet">
            <summary>
            Gets the analytics query results in the form of an
            <see cref="P:Endeca.Data.NavigationResult.AnalyticsDataSet"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.MetadataResult">
            <summary>
            Gets the <see cref="P:Endeca.Data.NavigationResult.MetadataResult"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.BusinessRulesByZone">
            <summary>
            Gets a dictionary from the string Zone name to the collection of 
            <see cref="T:Endeca.Data.BusinessRule"/> objects in that Zone.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.BusinessRules">
            <summary>
            Gets an enumeration of all <see cref="T:Endeca.Data.BusinessRule"/> objects.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.Clusters">
            <summary>
            Gets a collection of <see cref="T:Endeca.Data.Cluster"/> objects.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.KeywordRedirect">
            <summary>
            Gets a string url to redirect to. Returns string.Empty if no keyword redirect exists.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.ActiveSorts">
            <summary>
            Gets the collection of active sorts.
            </summary>
        </member>
        <member name="P:Endeca.Data.NavigationResult.ResultNames">
            <summary>
              Helper function to support performance app.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionSearchResult">
            <summary>
            Contains the results of a <see cref="T:Endeca.Data.DimensionSearchCommand"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionSearchResult.#ctor(System.Collections.Generic.IDictionary{System.String,System.Collections.ObjectModel.Collection{Endeca.Data.SearchReport}},System.Collections.Generic.IList{Endeca.Data.DimensionValue},System.Boolean)">
            <summary>
            
            </summary>
            <param name="searchReports"></param>
            <param name="dimensionValues"></param>
            <param name="hasMore"></param>
        </member>
        <member name="P:Endeca.Data.DimensionSearchResult.SearchReports">
            <summary>
            Gets the map of <see cref="T:Endeca.Data.SearchReport"/>s by the dimension that was searched.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchResult.DimensionValues">
            <summary>
            Gets the <see cref="T:Endeca.Data.DimensionValueCollection"/> containing the results of the search.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionSearchResult.HasMore">
            <summary>
            Gets or sets whether the number of valid dimension values exceeds the number of dimension values requested.  <see cref="P:Endeca.Data.DimensionSearchCommand.DimensionValuesPerDimension"/>.
            </summary>
        </member>
        <member name="T:Endeca.Data.AggregateRecord">
            <summary>
            An aggregated record from the MDEX Engine. This results from either a 
            <seealso cref="T:Endeca.Data.AggregateRecordDetailsCommand"/>,
            or a <seealso cref="T:Endeca.Data.NavigationCommand"/> with an AggregationKey parameter specified.  The 
            aggregated records feature allows the end user to group records by dimension or property 
            values. 
            </summary>
            <remarks>
            An aggregate record is composed of a set of constituent records, one of which is called the
            representative record.  The representative record is the individual record that occurs first 
            in order of the underlying records in the aggregated record.  The aggregate record instance
            itself is the representative record, and the constituent records are contained in the 
            <see cref="P:Endeca.Data.AggregateRecord.Records"/> collection.
            </remarks>
        </member>
        <member name="T:Endeca.Data.Record">
            <summary>
              Represents a individual Endeca record from the data set stored in an MDEX Engine.
            </summary>
            <remarks>
              A <see cref="T:Endeca.Data.Record"/> consists primarily of a set of Endeca properties, where each 
              property is a key/value pair.  Individual properties are represented by 
              <see cref="T:Endeca.Data.PropertyValue"/> objects, and the properties associated with a individual record
              are accessible using <see cref="P:Endeca.Data.Record.Properties"/>.
              <para>
              In addition to this set of properties, each record is tagged with a set of 
              <see cref="T:Endeca.Data.DimensionValue"/> objects, which locate the record within the hierarchy of 
              dimension values associated with each dimension.  The <see cref="T:Endeca.Data.DimensionValue"/>s are 
              accessible using <see cref="P:Endeca.Data.Record.DimensionValues"/>.</para>
              <para>
              In certain cases it may by useful to view the <see cref="T:Endeca.Data.PropertyValue"/>s and 
              <see cref="T:Endeca.Data.DimensionValue"/>s of a <see cref="T:Endeca.Data.Record"/> in a single composite collection. The
              <see cref="P:Endeca.Data.Record.Attributes"/> property enables this, by providing access to the combined 
              properties and dimension values as <see cref="T:Endeca.Data.IAttributeValue"/> objects.
              </para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.Record.#ctor">
            <summary>
              For internal use only.
            </summary>
        </member>
        <member name="M:Endeca.Data.Record.#ctor(System.String,Endeca.Data.PropertyMap,Endeca.Data.DimensionValueCollection,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.Record"/> instance.
            </summary>
            <param name="id">The unique identifier (specification) of this record.</param>
            <param name="properties">The properties of this record.</param>
            <param name="dimensionValues">The dimension values for this record.</param>
            <param name="snippets">The snippets for this record.</param>
        </member>
        <member name="M:Endeca.Data.Record.ParseProperty``1(System.String)">
            <summary>
              Converts the value of the property in <see cref="P:Endeca.Data.Record.Properties"/> with the specified 
              name into a CLR object. See <see cref="M:Endeca.Data.PropertyConvert.Parse``1(System.String)"/> for further details.
            </summary>
            <typeparam name="T">Type to which the property value should be parsed.</typeparam>
            <param name="propertyName">
              Name of the property whose value should be parsed.
            </param>
            <exception cref="T:System.ArgumentException">
              if <paramref name="propertyName"/> is null or empty.
            </exception>
            <exception cref="T:System.InvalidOperationException">
              if there is no value available to parse for the specified property.
            </exception>
        </member>
        <member name="P:Endeca.Data.Record.Item(System.String)">
            <summary>
             Returns the <see cref="P:Endeca.Data.IAttributeValue.Value"/> of the first <see cref="T:Endeca.Data.IAttributeValue"/>
             from <see cref="P:Endeca.Data.Record.Attributes"/> with the specified key (property or dimension name).
            </summary>
            <remarks>
              Because there is no ordering implied among the <see cref="T:Endeca.Data.IAttributeValue"/>s that share
              a given key, this property should only be used when the particular 
              <see cref="T:Endeca.Data.IAttributeValue"/> accessed by this property is immaterial to an application.
            </remarks>
            <returns>
              The value of an <see cref="T:Endeca.Data.IAttributeValue"/>, or a 0-length string if there is no 
              <see cref="T:Endeca.Data.IAttributeValue"/> with the specified key.
            </returns>
        </member>
        <member name="P:Endeca.Data.Record.Id">
            <summary>
              Gets the unique identifier (specification) of this record.
            </summary>
        </member>
        <member name="P:Endeca.Data.Record.Properties">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.PropertyValue"/>s associated with this record.
            </summary>
        </member>
        <member name="P:Endeca.Data.Record.DimensionValues">
            <summary>
              Gets a collection of <see cref="T:Endeca.Data.DimensionValue"/>s associated with this record. 
            </summary>
            <remarks>
              The <see cref="T:Endeca.Data.DimensionValue"/>s in this collection locate this record in the dimension
              hierarchy for each dimension.  
              <para>
              For each <see cref="T:Endeca.Data.DimensionValue"/>, path from the root <see cref="T:Endeca.Data.DimensionValue"/> 
              may be obtained by <see cref="P:Endeca.Data.DimensionValue.DimensionValuePath"/>.  Additionally,
              <see cref="T:Endeca.Data.DimensionValueCollection"/> defines a number of convience methods for grouping
              and accessing these <see cref="P:Endeca.Data.Record.DimensionValues"/>s; for example they may be grouped by 
              dimension by using <see cref="P:Endeca.Data.DimensionValueCollection.ByDimensionName"/>.</para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.Record.Attributes">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.IAttributeValue"/>s (property values and dimension 
              values) associated with this record.
            </summary>
            <remarks>
              This collection provides a composite view of the elements of the 
              <see cref="P:Endeca.Data.Record.Properties"/> and <see cref="P:Endeca.Data.Record.DimensionValues"/> collections.  
              This facilitates iterating and accessing the attributes of a record without having to
              differentiate between <see cref="T:Endeca.Data.PropertyValue"/>s and <see cref="T:Endeca.Data.DimensionValue"/>s.
              <para>
              Note that the MDEX engine ensures that there are no collisions between property and
              dimension value names; that is <see cref="P:Endeca.Data.IAttributeValue.Key"/> identifies either a
              property or dimension value, but not both.
              </para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.Record.Snippets">
            <summary>
              Gets a dictionary of the snippets associated with this record.  Note that this dictionary
              will only contain one entry per property.
            </summary>
            <remarks>
              A snippet is an excerpt from this record that matches a given search.  More specifically,
              if a search matches one or more of the properties of this record, the snippet displays 
              the text surrounding the match, to help provide to a user some context regarding the
              match.
              <para>
              The dictionary returned by this property maps property names to snippet text.  Therefore
              if a given search matches multiple properties, then there will be multiple entries in the
              dictionary.</para>
              <para>
              Note that this map will be empty unless the Snippeting feature is enabled in Developer
              Studio, and a text search is performed.</para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.Record.WhyDidItMatch">
            <summary>
              Gets the value of the <b>DGraph.WhyDidItMatch</b> property of the record, or an empty 
              string if there is no such property.
            </summary>
            <remarks>
              The <i>Why Did It Match</i> feature of the MDEX engine provides feedback that helps 
              describe which property matched a text search, and why.
              <para>
              Note that the <i>Why Did It Match</i> feature must be enabled in the MDEX engine in
              order for this property to return a value.</para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.AggregateRecord.#ctor">
            <summary>
              For internal use only.
            </summary>
        </member>
        <member name="M:Endeca.Data.AggregateRecord.#ctor(System.String,Endeca.Data.PropertyMap,Endeca.Data.DimensionValueCollection,System.Collections.Generic.IDictionary{System.String,System.String},System.Int64,System.Collections.Generic.IList{Endeca.Data.Record},Endeca.Data.PropertyMap)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.AggregateRecord"/> instance.
            </summary>
            <param name="id">The id of this aggregate record</param>
            <param name="properties">The properties of this aggregate record.</param>
            <param name="dimensionValues">The dimension values for this aggregate record.</param>
            <param name="snippets">The snippets for this aggregate record.</param>
            <param name="totalRecords">The total number of records represented by this aggregate record.</param>
            <param name="records">The set of records aggregated by this record.</param>
            <param name="derivedProperties">The derived properties for this aggregate record.</param>
        </member>
        <member name="P:Endeca.Data.AggregateRecord.Attributes">
            <summary>
              Gets the collection of attributes describing this <see cref="T:Endeca.Data.AggregateRecord"/>.
            </summary>
            <remarks>
              This collection is a composition of the properties and dimension values for this
              <see cref="T:Endeca.Data.AggregateRecord"/>, as well as the derived properties. If a derived property
              has the same key as a property or dimension, its value will take precedence when accessed
              through this <see cref="T:Endeca.Data.IAttributeMap"/>.
            </remarks>
        </member>
        <member name="P:Endeca.Data.AggregateRecord.DerivedProperties">
            <summary>
              Gets the collection of derived properties for this <see cref="T:Endeca.Data.AggregateRecord"/>.
            </summary>
            <remarks>
              The derived properties collection consists of properties whose values are the result of
              applying a function to each constituent record that is aggregated by this
              <see cref="T:Endeca.Data.AggregateRecord"/>. For example, if the records in MDEX engine represent 
              books, then an <see cref="T:Endeca.Data.AggregateRecord"/> might have a derived property that is 
              calculated by applying the <b>MIN</b> function to each constituent record. The value 
              representing the minimum price can then be read from the <see cref="T:Endeca.Data.PropertyMap"/> 
              returned from this method.
              <para>
              Derived properties may be configured by editing the <b>Derived_props.xml</b> file. 
              Please refer to the Endeca Developer's Guide for further details.</para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.AggregateRecord.TotalRecords">
            <summary>
            Gets the number of constituent records for the AggregateRecord.
            </summary>
        </member>
        <member name="P:Endeca.Data.AggregateRecord.Records">
            <summary>
            Gets the collection of constituent records for the AggregateRecord. Note that a record
            with equivalent properties and id to the current AggregateRecord instance will be an 
            element in this collection.
            </summary>
        </member>
        <member name="T:Endeca.Data.AnalyticsDataSet">
            <summary>
            A data set of <see cref="T:Endeca.Data.AnalyticsDataTable"/>s, containing results of analytics queries 
            sent to the MDEX engine.
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsDataSet.#ctor">
            <summary>
            Constructs an empty AnalyticsDataSet.
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsDataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="M:Endeca.Data.AnalyticsDataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
              Supports serialization.
            </summary>
        </member>
        <member name="P:Endeca.Data.AnalyticsDataSet.ErrorMessage">
            <summary>
              Gets the error message, if any, associated with the evaluation of an analytics query. 
              This message reports any errors that span multiple statements; it does NOT report errors 
              relating to an individual statement. 
            </summary>
        </member>
        <member name="T:Endeca.Data.BusinessRule">
            <summary>
              Represents a dynamic business rule that has been triggered by a query.
            </summary>
            <remarks>
             A business rule allows certain records to be promoted and displayed to users as they search
             and navigate within a data set. The records that are promoted are determined at run time, in
             the context of a specific query, according to the configuration of the rule, and other 
             associated entities (<i>Zones</i> and <i>Styles</i>). The promotion of records according to
             rules enables the merchandising and content spotlighting features of the MDEX engine. Please
             refer to the Endeca Developers Guide for further details.
             <para>
             <see cref="T:Endeca.Data.BusinessRule"/> represents a specific instance of a business rule that has been
             triggered in the context of a query. The records that have been promoted by the execution of
             this rule are available using <see cref="P:Endeca.Data.BusinessRule.Records"/>.
             </para>
            </remarks>
        </member>
        <member name="M:Endeca.Data.BusinessRule.#ctor(System.String,System.String,System.String,System.String,System.Int64,System.String,System.Nullable{Endeca.Data.SortDirection},System.Collections.Generic.IList{Endeca.Data.Record},Endeca.Data.PropertyMap,System.Collections.Generic.IList{Endeca.Data.DisconnectedDimensionValue})">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.BusinessRule"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.BusinessRule.Records">
            <summary>
              Gets the collection of <see cref="T:Endeca.Data.Record"/>s that match this <see cref="T:Endeca.Data.BusinessRule"/>.
            </summary>
        </member>
        <member name="P:Endeca.Data.BusinessRule.Properties">
            <summary>
            A <see cref="T:Endeca.Data.PropertyMap"/> of properties containing key, value pairs.
            </summary>
        </member>
        <member name="P:Endeca.Data.BusinessRule.NavigationState">
            <summary>
            A collection of <see cref="T:Endeca.Data.DisconnectedDimensionValue"/> representing a navigation state.
            </summary>
        </member>
        <member name="P:Endeca.Data.BusinessRule.Id">
            <summary>
              Gets the system-defined unique identifier of this <see cref="T:Endeca.Data.BusinessRule"/>.
            </summary>
            <remarks>
              This value is same as the value of the <b>DGraph.SeeAlsoMerchId</b> property.
            </remarks>
        </member>
        <member name="P:Endeca.Data.BusinessRule.NavigationStateRecordCount">
            <summary>
            Accessor for the DGraph.SeeAlsoPivotCount property - This count specifies the total number of matching records that were available when evaluating the target for this rule. This count is likely to be greater than the actual number of records returned with the Supplement object, since only the top N records are returned for a given business rule style.
            </summary>
        </member>
        <member name="P:Endeca.Data.BusinessRule.SortKey">
            <summary>
              Gets the name of the attribute (property or dimension) by which the records that match
              this <see cref="T:Endeca.Data.BusinessRule"/> are sorted by.
            </summary>
            <remarks>
              Defining an attribute by which records are sorted is an optional step when configuring 
              the rule in Developer Studio. If no sort attribute is defined, then this method returns
              an empty string, and the records that match the business rule are returned in the 
              default sort order of the MDEX engine.
              <para>
              This value is same as the value of the <b>DGraph.SeeAlsoMerchSort</b> property.
              </para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.BusinessRule.SortDirection">
            <summary>
              Gets the <see cref="P:Endeca.Data.BusinessRule.SortDirection"/> that is used to sort the records that match this
              <see cref="T:Endeca.Data.BusinessRule"/>.
            </summary>
            <remarks>
               Defining a sort direction for a business rule is an optional step when configuring the
               rule in Developer Studio. If no sort order is defined, then this method returns null,
               and the records that match the business rule are returned in the default sort order of
               the MDEX engine.
            </remarks>
        </member>
        <member name="P:Endeca.Data.BusinessRule.Style">
            <summary>
              Gets the name of the style for this <see cref="T:Endeca.Data.BusinessRule"/>.
            </summary>
            <remarks>
               A style is a named set of properties that applied to one or more dynamic business 
               rules. For  example, a style defines the minimum and maximum number of records a rule 
               can return. Additional application-specific properties may be defined for a style when
               using Web Studio.
               <para> 
               Applications often use the properties associated with the style to help implement 
               application-specific logic when rendering the records associated with the business rule.
               </para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.BusinessRule.Zone">
            <summary>
              Gets the name of the zone for this <see cref="T:Endeca.Data.BusinessRule"/>.
            </summary>
            <remarks>
              A zone identifies a collection of business rules and helps ensure that at least one rule is 
              always triggered. This behavior helps ensure that that the screen space dedicated to 
              displaying promoted records is always populated. A zone can also be configured to limit the number of
              rules that trigger for a given query.
            </remarks>
        </member>
        <member name="P:Endeca.Data.BusinessRule.Title">
            <summary>
            Gets the title.
            </summary>
        </member>
        <member name="T:Endeca.Data.Geocode">
            <summary>
            Represents a Geocode location specified by latitude and longitude coordinates.
            </summary>
        </member>
        <member name="M:Endeca.Data.Geocode.#ctor">
            <summary>
            Initializes an empty Geocode instance.
            </summary>
        </member>
        <member name="M:Endeca.Data.Geocode.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a Geocode instance for the specified latitude and longitude coordinates.
            </summary>
        </member>
        <member name="M:Endeca.Data.Geocode.Parse(System.String)">
            <summary>
            Initializes a Geocode instance from a string.  Assumes the string is of the format: 
            "{0},{1}" .  For example, "20.52,39.20"
            </summary>
            <param name="value">String with two numbers separated by a comma</param>
            <returns>The initializes Geocode instance</returns>
            <exception cref="T:System.ArgumentException">if <paramref name="value"/> is null or empty.</exception>
            <exception cref="T:System.FormatException">
              If <paramref name="value"/> is not a valid representation of a <see cref="T:Endeca.Data.Geocode"/>.
            </exception>
        </member>
        <member name="M:Endeca.Data.Geocode.ToString">
            <summary>
            Returns a string representation of the Geocode in the format: "{0},{1}" .  For example, 
            "20.52,39.20"
            </summary>
        </member>
        <member name="M:Endeca.Data.Geocode.Equals(Endeca.Data.Geocode)">
            <summary>
              See <see cref="M:System.IEquatable`1.Equals(`0)"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.Geocode.OnPropertyChanged(System.String)">
            <summary>
             Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="P:Endeca.Data.Geocode.Latitude">
            <summary>
            Gets or sets the latitude coordinate in degrees.
            </summary>
        </member>
        <member name="P:Endeca.Data.Geocode.Longitude">
            <summary>
            Gets or sets the longitude coordinate in degrees.
            </summary>
        </member>
        <member name="E:Endeca.Data.Geocode.PropertyChanged">
            <summary>
              Raised when one of the property values of this instance has changed.
            </summary>
        </member>
        <member name="T:Endeca.Data.DimensionState">
            <summary>
            Represents a dynamic view of a <see cref="P:Endeca.Data.DimensionState.Dimension"/>, appropriate for a user's current 
            navigation state.
            </summary>
        </member>
        <member name="M:Endeca.Data.DimensionState.#ctor(System.String,Endeca.Data.MultiSelect,System.Boolean,Endeca.Data.DimensionValue,Endeca.Data.DimensionValueCollection,Endeca.Data.DimensionValueCollection,Endeca.Data.DimensionValueCollection)">
            <summary>
              Initializes a new <see cref="T:Endeca.Data.DimensionState"/> instance.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.SelectedDimensionValues">
            <summary>
            <see cref="T:Endeca.Data.DimensionValueCollection"/> of currently selected <see cref="T:Endeca.Data.DimensionValue"/>s 
            in this Dimension. These can be used to display in-place breadcrumbs for the Dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.IsRefinable">
            <summary>
            Returns true if this DimensionState either contains Refinements, or might contain 
            Refinements if it were expanded.  In other words, returns true whenever this 
            DimensionState is neither Fully Implicit nor Fully Selected.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.GroupName">
            <summary>
            Gets the group name for this dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.MultiSelectSupport">
            <summary>
            Gets the type of multi-select this dimension supports.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.Dimension">
            <summary>
            Gets the <see cref="P:Endeca.Data.DimensionState.Dimension"/> for this dimension state
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.Endeca#Data#INameAndId#Name">
            <summary>
            Gets the name of the dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.Endeca#Data#INameAndId#Id">
            <summary>
            Gets the ID of the dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.Refinements">
            <summary>
            Gets the collection of child dimension values for the dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.Implicits">
            <summary>
            Gets the implicit dimension path collection for the dimension.
            </summary>
        </member>
        <member name="P:Endeca.Data.DimensionState.HasMore">
            <summary>
            Returns true if the dimension state has more refinement dimension values than are 
            currently being displayed. 
            </summary>
            <remarks>
            This situation can arise through the use of <see cref="T:Endeca.Data.RefinementConfig"/> 
            objects or if the dimension is enabled for dynamic ranking in Developer Studio.
            <para>
            Note that this property will return true regardless of whether the 'Generate "More..."
            dimension value' option is enabled in Developer Studio.  In fact, there is no way in the 
            RAD API to determine whether the 'Generate "More..." dimension value' option is enabled.
            Instead, it is recommended that this information reside in your application code.
            </para>
            </remarks>
        </member>
        <member name="P:Endeca.Data.DimensionState.ContextPath">
            <summary>
            Encoding of the state of this <see cref="T:Endeca.Data.DimensionState"/> such that <see cref="T:Endeca.Data.DimensionValue"/>s
            can be added or removed without reconstructing the <see cref="T:Endeca.Data.DimensionState"/> object.  This is used primarily by UI controls.
            </summary>
        </member>
        <member name="T:Endeca.Data.SearchAdjustment">
            <summary>
            Represents a single alternate search adjustment made by the MDEX Engine when a record 
            search is performed.  The suggestion may or may not have been applied to the result set.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchAdjustment.#ctor(Endeca.Data.Search,System.String,Endeca.Data.AdjustmentTypes,System.Nullable{System.Int64})">
            <summary>
            Instantiates a new SearchAdjustment with the given parameters
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchAdjustment.ToString">
            <summary>
            Creates a string representation of <see cref="T:Endeca.Data.SearchAdjustment"/> 
            which can be used in conjunction with <see cref="M:Endeca.Data.SearchAdjustment.Parse(System.String)"/>
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchAdjustment.Parse(System.String)">
            <summary>
            Creates a <see cref="T:Endeca.Data.SearchAdjustment"/> from a properly formatted string
            </summary>
            <param name="value">The string representation of the <see cref="T:Endeca.Data.SearchAdjustment"/></param>
        </member>
        <member name="P:Endeca.Data.SearchAdjustment.Search">
            <summary>
              Gets a <see cref="P:Endeca.Data.SearchAdjustment.Search"/> object representing the search request to which this 
              adjustment was applied.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchAdjustment.Terms">
            <summary>
            Gets the terms for the spelling suggestion.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchAdjustment.AdjustmentType">
            <summary>
            Gets whether this suggestion resulted based on phrasing, spelling correction, word break, or a combination of the 3.
            </summary>
        </member>
        <member name="P:Endeca.Data.SearchAdjustment.RecordCountIfApplied">
            <summary>
              Gets the number of records that will match if the suggestion is applied. If the value is
              null, then this adjustment was automatically applied by the MDEX engine.
            </summary>
        </member>
        <member name="T:Endeca.Data.AdjustmentTypes">
            <summary>
            The types of possible adjustments made to original search terms.
            </summary>
        </member>
        <member name="F:Endeca.Data.AdjustmentTypes.SpellingCorrection">
            <summary>
            A type indicating a term was spell-corrected by the Spelling Correction feature of the Endeca MDEX Engine.
            </summary>
        </member>
        <member name="F:Endeca.Data.AdjustmentTypes.Phrasing">
            <summary>
            A type indicating contiguous subsequences of terms that were phrased by the Automatic Phrasing feature.
            </summary>
        </member>
        <member name="F:Endeca.Data.AdjustmentTypes.WordBreak">
            <summary>
            A type indicating one or more terms were analyzed by the Word Break analysis feature of the Endeca MDEX Engine.
            </summary>
        </member>
        <member name="T:Endeca.Data.SearchMode">
            <summary>
            An enumeration of available search match modes used by <see cref="T:Endeca.Data.Search"/> and <see cref="T:Endeca.Data.SearchKey"/>
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.Unknown">
            <summary>
            The mode is unknown.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.All">
            <summary>
             Match all user search terms (i.e., perform a conjunctive search).
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.AllAny">
            <summary>
            Match all user search terms if possible, otherwise match at least one.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.AllPartial">
            <summary>
            Match all user search terms if possible, otherwise match some.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.Any">
            <summary>
            Match at least one user search term.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.Boolean">
            <summary>
            Match using a Boolean query.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.Partial">
            <summary>
            Match some user search terms.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchMode.PartialMax">
            <summary>
            Match a maximal subset of user search terms.
            </summary>
        </member>
        <member name="T:Endeca.Data.SearchModeUtil">
            <summary>
            Utility class to convert to and from query parameter string representation to SearchMode enum.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchAll">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.All"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchAllAny">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.AllAny"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchAllPartial">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.AllPartial"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchAny">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.Any"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchBoolean">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.Boolean"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchPartial">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.Partial"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SearchModeUtil.MatchPartialMax">
            <summary>
            Endeca API string representation of <see cref="F:Endeca.Data.SearchMode.PartialMax"/>.
            </summary>
        </member>
        <member name="M:Endeca.Data.SearchModeUtil.ToSearchModeString(Endeca.Data.SearchMode)">
            <summary>
            Converts a <see cref="T:Endeca.Data.SearchMode"/> to an Endeca API compatible string.
            </summary>
            <param name="mode">The <see cref="T:Endeca.Data.SearchMode"/> used in the command layer.</param>
            <returns>The string used in the Endeca API.</returns>
        </member>
        <member name="M:Endeca.Data.SearchModeUtil.ToSearchMode(System.String)">
            <summary>
            Converts an Endeca API compatible string to a <see cref="T:Endeca.Data.SearchMode"/>. 
            </summary>
            <param name="mode">The string used in the Endeca API.</param>
            <returns>The <see cref="T:Endeca.Data.SearchMode"/> used in the command layer.</returns>
        </member>
        <member name="T:Endeca.Data.SortCollection">
            <summary>
            A <see cref="T:System.Collections.ObjectModel.KeyedCollection`2"/> of <see cref="T:Endeca.Data.Sort"/>s.
            </summary>
        </member>
        <member name="M:Endeca.Data.SortCollection.GetKeyForItem(Endeca.Data.Sort)">
            <summary>
            <see cref="M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)"/>
            </summary>
        </member>
        <member name="P:Endeca.Data.SortCollection.KeyNames">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of the keys of the <see cref="T:Endeca.Data.Sort"/>s in the collection
            the Indexer.
            </summary>
        </member>
        <member name="T:Endeca.Data.SortDirection">
            <summary>
            An enumeration of available sorting directions used by <see cref="T:Endeca.Data.Sort"/>.
            </summary>
        </member>
        <member name="F:Endeca.Data.SortDirection.Ascending">
            <summary>
            ascending sort direction
            </summary>
        </member>
        <member name="F:Endeca.Data.SortDirection.Descending">
            <summary>
            descending sort direction
            </summary>
        </member>
        <member name="T:Endeca.Data.SortType">
            <summary>
            An emuration of possible sort types used by <see cref="T:Endeca.Data.Sort"/>
            Either alphanumeric or geocode.
            </summary>
        </member>
        <member name="F:Endeca.Data.SortType.AlphaNumeric">
            <summary>
            This is a sort key for a non-geocode typed property.
            </summary>
        </member>
        <member name="F:Endeca.Data.SortType.Geocode">
            <summary>
            This is a sort key for a geocode typed property.
            </summary>
        </member>
    </members>
</doc>
